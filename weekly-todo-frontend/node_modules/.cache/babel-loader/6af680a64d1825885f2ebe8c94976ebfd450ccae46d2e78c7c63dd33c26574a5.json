{"ast":null,"code":"'use client';\n\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport * as timer from '@zag-js/timer';\nimport { useId } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nconst useTimer = props => {\n  const id = useId();\n  const {\n    getRootNode\n  } = useEnvironmentContext();\n  const machineProps = {\n    id,\n    getRootNode,\n    ...props\n  };\n  const service = useMachine(timer.machine, machineProps);\n  return timer.connect(service, normalizeProps);\n};\nexport { useTimer };","map":{"version":3,"names":["useMachine","normalizeProps","timer","useId","useEnvironmentContext","useTimer","props","id","getRootNode","machineProps","service","machine","connect"],"sources":["C:/Users/tuanl/weekly-todo-frontend/node_modules/@ark-ui/react/dist/components/timer/use-timer.js"],"sourcesContent":["'use client';\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport * as timer from '@zag-js/timer';\nimport { useId } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\n\nconst useTimer = (props) => {\n  const id = useId();\n  const { getRootNode } = useEnvironmentContext();\n  const machineProps = {\n    id,\n    getRootNode,\n    ...props\n  };\n  const service = useMachine(timer.machine, machineProps);\n  return timer.connect(service, normalizeProps);\n};\n\nexport { useTimer };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,UAAU,EAAEC,cAAc,QAAQ,eAAe;AAC1D,OAAO,KAAKC,KAAK,MAAM,eAAe;AACtC,SAASC,KAAK,QAAQ,OAAO;AAC7B,SAASC,qBAAqB,QAAQ,wDAAwD;AAE9F,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAC1B,MAAMC,EAAE,GAAGJ,KAAK,CAAC,CAAC;EAClB,MAAM;IAAEK;EAAY,CAAC,GAAGJ,qBAAqB,CAAC,CAAC;EAC/C,MAAMK,YAAY,GAAG;IACnBF,EAAE;IACFC,WAAW;IACX,GAAGF;EACL,CAAC;EACD,MAAMI,OAAO,GAAGV,UAAU,CAACE,KAAK,CAACS,OAAO,EAAEF,YAAY,CAAC;EACvD,OAAOP,KAAK,CAACU,OAAO,CAACF,OAAO,EAAET,cAAc,CAAC;AAC/C,CAAC;AAED,SAASI,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}