{"ast":null,"code":"'use client';\n\nimport { getWindow, dataAttr, ariaAttr } from '@zag-js/dom-query';\nimport { useState, useId, useRef, useMemo } from 'react';\nimport { useSafeLayoutEffect } from '../../utils/use-safe-layout-effect.js';\nimport { useFieldsetContext } from '../fieldset/use-fieldset-context.js';\nimport { parts } from './field.anatomy.js';\nconst useField = (props = {}) => {\n  const fieldset = useFieldsetContext();\n  const {\n    ids,\n    disabled = Boolean(fieldset?.disabled),\n    invalid = false,\n    readOnly = false,\n    required = false\n  } = props;\n  const [hasErrorText, setHasErrorText] = useState(false);\n  const [hasHelperText, setHasHelperText] = useState(false);\n  const id = props.id ?? useId();\n  const rootRef = useRef(null);\n  const rootId = ids?.control ?? `field::${id}`;\n  const errorTextId = ids?.errorText ?? `field::${id}::error-text`;\n  const helperTextId = ids?.helperText ?? `field::${id}::helper-text`;\n  const labelId = ids?.label ?? `field::${id}::label`;\n  useSafeLayoutEffect(() => {\n    const rootNode = rootRef.current;\n    if (!rootNode) return;\n    const win = getWindow(rootNode);\n    const doc = win.document;\n    const checkTextElements = () => {\n      setHasErrorText(!!doc.getElementById(errorTextId));\n      setHasHelperText(!!doc.getElementById(helperTextId));\n    };\n    checkTextElements();\n    const observer = new win.MutationObserver(checkTextElements);\n    observer.observe(rootNode, {\n      childList: true,\n      subtree: true\n    });\n    return () => observer.disconnect();\n  }, [errorTextId, helperTextId]);\n  const labelIds = useMemo(() => {\n    const ids2 = [];\n    if (hasErrorText && invalid) ids2.push(errorTextId);\n    if (hasHelperText) ids2.push(helperTextId);\n    return ids2.join(\" \") || void 0;\n  }, [invalid, errorTextId, helperTextId, hasErrorText, hasHelperText]);\n  const getRootProps = useMemo(() => () => ({\n    ...parts.root.attrs,\n    id: rootId,\n    ref: rootRef,\n    role: \"group\",\n    \"data-disabled\": dataAttr(disabled),\n    \"data-invalid\": dataAttr(invalid),\n    \"data-readonly\": dataAttr(readOnly)\n  }), [disabled, invalid, readOnly, rootId]);\n  const getLabelProps = useMemo(() => () => ({\n    ...parts.label.attrs,\n    id: labelId,\n    \"data-disabled\": dataAttr(disabled),\n    \"data-invalid\": dataAttr(invalid),\n    \"data-readonly\": dataAttr(readOnly),\n    htmlFor: id\n  }), [disabled, invalid, readOnly, id, labelId]);\n  const getControlProps = useMemo(() => () => ({\n    \"aria-describedby\": labelIds,\n    \"aria-invalid\": ariaAttr(invalid),\n    \"data-invalid\": dataAttr(invalid),\n    \"data-required\": dataAttr(required),\n    \"data-readonly\": dataAttr(readOnly),\n    id,\n    required,\n    disabled,\n    readOnly\n  }), [labelIds, invalid, required, readOnly, id, disabled]);\n  const getInputProps = useMemo(() => () => ({\n    ...getControlProps(),\n    ...parts.input.attrs\n  }), [getControlProps]);\n  const getTextareaProps = useMemo(() => () => ({\n    ...getControlProps(),\n    ...parts.textarea.attrs\n  }), [getControlProps]);\n  const getSelectProps = useMemo(() => () => ({\n    ...getControlProps(),\n    ...parts.select.attrs\n  }), [getControlProps]);\n  const getHelperTextProps = useMemo(() => () => ({\n    id: helperTextId,\n    ...parts.helperText.attrs,\n    \"data-disabled\": dataAttr(disabled)\n  }), [disabled, helperTextId]);\n  const getErrorTextProps = useMemo(() => () => ({\n    id: errorTextId,\n    ...parts.errorText.attrs,\n    \"aria-live\": \"polite\"\n  }), [errorTextId]);\n  const getRequiredIndicatorProps = useMemo(() => () => ({\n    \"aria-hidden\": true,\n    ...parts.requiredIndicator.attrs\n  }), []);\n  return {\n    ariaDescribedby: labelIds,\n    ids: {\n      root: rootId,\n      control: id,\n      label: labelId,\n      errorText: errorTextId,\n      helperText: helperTextId\n    },\n    refs: {\n      rootRef\n    },\n    disabled,\n    invalid,\n    readOnly,\n    required,\n    getLabelProps,\n    getRootProps,\n    getInputProps,\n    getTextareaProps,\n    getSelectProps,\n    getHelperTextProps,\n    getErrorTextProps,\n    getRequiredIndicatorProps\n  };\n};\nexport { useField };","map":{"version":3,"names":["getWindow","dataAttr","ariaAttr","useState","useId","useRef","useMemo","useSafeLayoutEffect","useFieldsetContext","parts","useField","props","fieldset","ids","disabled","Boolean","invalid","readOnly","required","hasErrorText","setHasErrorText","hasHelperText","setHasHelperText","id","rootRef","rootId","control","errorTextId","errorText","helperTextId","helperText","labelId","label","rootNode","current","win","doc","document","checkTextElements","getElementById","observer","MutationObserver","observe","childList","subtree","disconnect","labelIds","ids2","push","join","getRootProps","root","attrs","ref","role","getLabelProps","htmlFor","getControlProps","getInputProps","input","getTextareaProps","textarea","getSelectProps","select","getHelperTextProps","getErrorTextProps","getRequiredIndicatorProps","requiredIndicator","ariaDescribedby","refs"],"sources":["C:/Users/tuanl/weekly-todo-frontend/node_modules/@chakra-ui/react/node_modules/@ark-ui/react/dist/components/field/use-field.js"],"sourcesContent":["'use client';\nimport { getWindow, dataAttr, ariaAttr } from '@zag-js/dom-query';\nimport { useState, useId, useRef, useMemo } from 'react';\nimport { useSafeLayoutEffect } from '../../utils/use-safe-layout-effect.js';\nimport { useFieldsetContext } from '../fieldset/use-fieldset-context.js';\nimport { parts } from './field.anatomy.js';\n\nconst useField = (props = {}) => {\n  const fieldset = useFieldsetContext();\n  const { ids, disabled = Boolean(fieldset?.disabled), invalid = false, readOnly = false, required = false } = props;\n  const [hasErrorText, setHasErrorText] = useState(false);\n  const [hasHelperText, setHasHelperText] = useState(false);\n  const id = props.id ?? useId();\n  const rootRef = useRef(null);\n  const rootId = ids?.control ?? `field::${id}`;\n  const errorTextId = ids?.errorText ?? `field::${id}::error-text`;\n  const helperTextId = ids?.helperText ?? `field::${id}::helper-text`;\n  const labelId = ids?.label ?? `field::${id}::label`;\n  useSafeLayoutEffect(() => {\n    const rootNode = rootRef.current;\n    if (!rootNode) return;\n    const win = getWindow(rootNode);\n    const doc = win.document;\n    const checkTextElements = () => {\n      setHasErrorText(!!doc.getElementById(errorTextId));\n      setHasHelperText(!!doc.getElementById(helperTextId));\n    };\n    checkTextElements();\n    const observer = new win.MutationObserver(checkTextElements);\n    observer.observe(rootNode, { childList: true, subtree: true });\n    return () => observer.disconnect();\n  }, [errorTextId, helperTextId]);\n  const labelIds = useMemo(() => {\n    const ids2 = [];\n    if (hasErrorText && invalid) ids2.push(errorTextId);\n    if (hasHelperText) ids2.push(helperTextId);\n    return ids2.join(\" \") || void 0;\n  }, [invalid, errorTextId, helperTextId, hasErrorText, hasHelperText]);\n  const getRootProps = useMemo(\n    () => () => ({\n      ...parts.root.attrs,\n      id: rootId,\n      ref: rootRef,\n      role: \"group\",\n      \"data-disabled\": dataAttr(disabled),\n      \"data-invalid\": dataAttr(invalid),\n      \"data-readonly\": dataAttr(readOnly)\n    }),\n    [disabled, invalid, readOnly, rootId]\n  );\n  const getLabelProps = useMemo(\n    () => () => ({\n      ...parts.label.attrs,\n      id: labelId,\n      \"data-disabled\": dataAttr(disabled),\n      \"data-invalid\": dataAttr(invalid),\n      \"data-readonly\": dataAttr(readOnly),\n      htmlFor: id\n    }),\n    [disabled, invalid, readOnly, id, labelId]\n  );\n  const getControlProps = useMemo(\n    () => () => ({\n      \"aria-describedby\": labelIds,\n      \"aria-invalid\": ariaAttr(invalid),\n      \"data-invalid\": dataAttr(invalid),\n      \"data-required\": dataAttr(required),\n      \"data-readonly\": dataAttr(readOnly),\n      id,\n      required,\n      disabled,\n      readOnly\n    }),\n    [labelIds, invalid, required, readOnly, id, disabled]\n  );\n  const getInputProps = useMemo(\n    () => () => ({\n      ...getControlProps(),\n      ...parts.input.attrs\n    }),\n    [getControlProps]\n  );\n  const getTextareaProps = useMemo(\n    () => () => ({\n      ...getControlProps(),\n      ...parts.textarea.attrs\n    }),\n    [getControlProps]\n  );\n  const getSelectProps = useMemo(\n    () => () => ({\n      ...getControlProps(),\n      ...parts.select.attrs\n    }),\n    [getControlProps]\n  );\n  const getHelperTextProps = useMemo(\n    () => () => ({\n      id: helperTextId,\n      ...parts.helperText.attrs,\n      \"data-disabled\": dataAttr(disabled)\n    }),\n    [disabled, helperTextId]\n  );\n  const getErrorTextProps = useMemo(\n    () => () => ({\n      id: errorTextId,\n      ...parts.errorText.attrs,\n      \"aria-live\": \"polite\"\n    }),\n    [errorTextId]\n  );\n  const getRequiredIndicatorProps = useMemo(\n    () => () => ({\n      \"aria-hidden\": true,\n      ...parts.requiredIndicator.attrs\n    }),\n    []\n  );\n  return {\n    ariaDescribedby: labelIds,\n    ids: {\n      root: rootId,\n      control: id,\n      label: labelId,\n      errorText: errorTextId,\n      helperText: helperTextId\n    },\n    refs: {\n      rootRef\n    },\n    disabled,\n    invalid,\n    readOnly,\n    required,\n    getLabelProps,\n    getRootProps,\n    getInputProps,\n    getTextareaProps,\n    getSelectProps,\n    getHelperTextProps,\n    getErrorTextProps,\n    getRequiredIndicatorProps\n  };\n};\n\nexport { useField };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}