{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tuanl\\\\weekly-todo-frontend\\\\src\\\\components\\\\WeeklyView.tsx\";\nimport React from 'react';\nimport { Box, Heading, SimpleGrid, Text, VStack } from '@chakra-ui/react';\nimport dayjs from 'dayjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\nconst WeeklyView = ({\n  todos\n}) => {\n  const getTodosForDay = day => {\n    return todos.filter(todo => dayjs(todo.dueDate).format('dddd') === day);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: 8,\n    px: 4,\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      size: \"lg\",\n      mb: 4,\n      children: \"Weekly To Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n      columns: [1, 2, 4, 8],\n      gap: 4,\n      children: [daysOfWeek.map(day => {\n        const dayTodos = getTodosForDay(day);\n        return /*#__PURE__*/_jsxDEV(Box, {\n          borderWidth: \"1px\",\n          borderRadius: \"lg\",\n          p: 4,\n          minH: \"300px\",\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            size: \"md\",\n            mb: 2,\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this)\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Box, {\n        borderWidth: \"1px\",\n        borderRadius: \"lg\",\n        p: 4,\n        minH: \"300px\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          size: \"md\",\n          mb: 2,\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(VStack, {\n          align: \"start\",\n          gap: 1,\n          children: [...Array(10)].map((_, i) => /*#__PURE__*/_jsxDEV(Text, {\n            color: \"gray.400\",\n            children: \"_____________\"\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_c = WeeklyView;\nexport default WeeklyView;\nvar _c;\n$RefreshReg$(_c, \"WeeklyView\");","map":{"version":3,"names":["React","Box","Heading","SimpleGrid","Text","VStack","dayjs","jsxDEV","_jsxDEV","daysOfWeek","WeeklyView","todos","getTodosForDay","day","filter","todo","dueDate","format","mt","px","children","size","mb","fileName","_jsxFileName","lineNumber","columnNumber","columns","gap","map","dayTodos","borderWidth","borderRadius","p","minH","align","Array","_","i","color","_c","$RefreshReg$"],"sources":["C:/Users/tuanl/weekly-todo-frontend/src/components/WeeklyView.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Todo } from '../types/todo';\r\nimport {\r\n    Box,\r\n    Heading,\r\n    SimpleGrid,\r\n    Text,\r\n    Checkbox,\r\n    VStack,\r\n} from '@chakra-ui/react';\r\nimport dayjs from 'dayjs';\r\n\r\ninterface WeeklyViewProps {\r\n    todos: Todo[];\r\n}\r\n\r\nconst daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n\r\nconst WeeklyView: React.FC<WeeklyViewProps> = ({ todos }) => {\r\n    const getTodosForDay = (day: string) => {\r\n        return todos.filter(todo => dayjs(todo.dueDate).format('dddd') === day);\r\n    };\r\n\r\n    return (\r\n        <Box mt={8} px={4}>\r\n            <Heading size=\"lg\" mb={4}>Weekly To Do List</Heading>\r\n            <SimpleGrid columns={[1, 2, 4, 8]} gap={4}>\r\n                {daysOfWeek.map(day => {\r\n                    const dayTodos = getTodosForDay(day);\r\n\r\n                    return (\r\n                        <Box key={day} borderWidth=\"1px\" borderRadius=\"lg\" p={4} minH=\"300px\">\r\n                            <Heading size=\"md\" mb={2}>{day}</Heading>\r\n                        </Box>\r\n                    );\r\n                })}\r\n\r\n                <Box borderWidth=\"1px\" borderRadius=\"lg\" p={4} minH=\"300px\">\r\n                    <Heading size=\"md\" mb={2}>Notes</Heading>\r\n                    <VStack align=\"start\" gap={1}>\r\n                        {[...Array(10)].map((_, i) => (\r\n                            <Text key={i} color=\"gray.400\">_____________</Text>\r\n                        ))}\r\n                    </VStack>\r\n                </Box>\r\n            </SimpleGrid>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default WeeklyView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}