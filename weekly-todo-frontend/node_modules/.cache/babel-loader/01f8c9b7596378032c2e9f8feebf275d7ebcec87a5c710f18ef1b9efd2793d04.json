{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { useRenderStrategyPropsContext } from '../../utils/render-strategy.js';\nimport { CollapsibleRoot } from '../collapsible/collapsible-root.js';\nimport { useTreeViewContext } from './use-tree-view-context.js';\nimport { useTreeViewNodePropsContext } from './use-tree-view-node-props-context.js';\nconst TreeViewBranch = forwardRef((props, ref) => {\n  const treeView = useTreeViewContext();\n  const nodeProps = useTreeViewNodePropsContext();\n  const renderStrategyProps = useRenderStrategyPropsContext();\n  const node = treeView.getNodeState(nodeProps);\n  const mergedProps = mergeProps(treeView.getBranchProps(nodeProps), props);\n  const branchContentProps = treeView.getBranchContentProps(nodeProps);\n  return /* @__PURE__ */jsx(CollapsibleRoot, {\n    ref,\n    open: node.expanded,\n    ids: {\n      content: branchContentProps.id\n    },\n    ...renderStrategyProps,\n    ...mergedProps\n  });\n});\nTreeViewBranch.displayName = \"TreeViewBranch\";\nexport { TreeViewBranch };","map":{"version":3,"names":["jsx","mergeProps","forwardRef","useRenderStrategyPropsContext","CollapsibleRoot","useTreeViewContext","useTreeViewNodePropsContext","TreeViewBranch","props","ref","treeView","nodeProps","renderStrategyProps","node","getNodeState","mergedProps","getBranchProps","branchContentProps","getBranchContentProps","open","expanded","ids","content","id","displayName"],"sources":["C:/Users/tuanl/weekly-todo-frontend/node_modules/@ark-ui/react/dist/components/tree-view/tree-view-branch.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { useRenderStrategyPropsContext } from '../../utils/render-strategy.js';\nimport { CollapsibleRoot } from '../collapsible/collapsible-root.js';\nimport { useTreeViewContext } from './use-tree-view-context.js';\nimport { useTreeViewNodePropsContext } from './use-tree-view-node-props-context.js';\n\nconst TreeViewBranch = forwardRef((props, ref) => {\n  const treeView = useTreeViewContext();\n  const nodeProps = useTreeViewNodePropsContext();\n  const renderStrategyProps = useRenderStrategyPropsContext();\n  const node = treeView.getNodeState(nodeProps);\n  const mergedProps = mergeProps(treeView.getBranchProps(nodeProps), props);\n  const branchContentProps = treeView.getBranchContentProps(nodeProps);\n  return /* @__PURE__ */ jsx(\n    CollapsibleRoot,\n    {\n      ref,\n      open: node.expanded,\n      ids: { content: branchContentProps.id },\n      ...renderStrategyProps,\n      ...mergedProps\n    }\n  );\n});\nTreeViewBranch.displayName = \"TreeViewBranch\";\n\nexport { TreeViewBranch };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,6BAA6B,QAAQ,gCAAgC;AAC9E,SAASC,eAAe,QAAQ,oCAAoC;AACpE,SAASC,kBAAkB,QAAQ,4BAA4B;AAC/D,SAASC,2BAA2B,QAAQ,uCAAuC;AAEnF,MAAMC,cAAc,GAAGL,UAAU,CAAC,CAACM,KAAK,EAAEC,GAAG,KAAK;EAChD,MAAMC,QAAQ,GAAGL,kBAAkB,CAAC,CAAC;EACrC,MAAMM,SAAS,GAAGL,2BAA2B,CAAC,CAAC;EAC/C,MAAMM,mBAAmB,GAAGT,6BAA6B,CAAC,CAAC;EAC3D,MAAMU,IAAI,GAAGH,QAAQ,CAACI,YAAY,CAACH,SAAS,CAAC;EAC7C,MAAMI,WAAW,GAAGd,UAAU,CAACS,QAAQ,CAACM,cAAc,CAACL,SAAS,CAAC,EAAEH,KAAK,CAAC;EACzE,MAAMS,kBAAkB,GAAGP,QAAQ,CAACQ,qBAAqB,CAACP,SAAS,CAAC;EACpE,OAAO,eAAgBX,GAAG,CACxBI,eAAe,EACf;IACEK,GAAG;IACHU,IAAI,EAAEN,IAAI,CAACO,QAAQ;IACnBC,GAAG,EAAE;MAAEC,OAAO,EAAEL,kBAAkB,CAACM;IAAG,CAAC;IACvC,GAAGX,mBAAmB;IACtB,GAAGG;EACL,CACF,CAAC;AACH,CAAC,CAAC;AACFR,cAAc,CAACiB,WAAW,GAAG,gBAAgB;AAE7C,SAASjB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}