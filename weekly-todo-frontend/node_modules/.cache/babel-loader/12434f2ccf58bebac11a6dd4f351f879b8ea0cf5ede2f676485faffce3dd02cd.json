{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tuanl\\\\weekly-todo-frontend\\\\src\\\\components\\\\todoForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Box, Button, Input, Select, Stack, Text, Textarea } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\nconst TodoForm = ({\n  onAdd,\n  editingTodo,\n  onUpdateDone\n}) => {\n  _s();\n  const [todo, setTodo] = useState({\n    title: '',\n    description: '',\n    day: '',\n    completed: false\n  });\n  useEffect(() => {\n    if (editingTodo) setTodo(editingTodo);\n  }, [editingTodo]);\n  const handleChange = e => {\n    const target = e.target;\n    const {\n      name,\n      type,\n      value\n    } = target;\n    setTodo(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? target.checked : value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!todo.title || !todo.day) return alert(\"Title and day are required!\");\n    if (editingTodo && onUpdateDone) {\n      axios.put(`http://localhost:8080/api/todos/${todo.id}`, todo).then(res => {\n        onUpdateDone(res.data);\n        resetForm();\n      }).catch(err => console.error(\"Update failed\", err));\n    } else {\n      axios.post('http://localhost:8080/api/todos', todo).then(res => {\n        onAdd(res.data);\n        resetForm();\n      }).catch(err => console.error(\"Create failed\", err));\n    }\n  };\n  const resetForm = () => {\n    setTodo({\n      title: '',\n      description: '',\n      day: '',\n      completed: false\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    maxW: \"md\",\n    mx: \"auto\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        gap: 4,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: \"bold\",\n            mb: 1,\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"title\",\n            value: todo.title,\n            onChange: handleChange,\n            placeholder: \"Task title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: \"bold\",\n            mb: 1,\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n            name: \"description\",\n            value: todo.description,\n            onChange: handleChange,\n            placeholder: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: \"bold\",\n            mb: 1,\n            children: \"Day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            name: \"day\",\n            value: todo.day,\n            onChange: handleChange,\n            placeholder: \"Select a day\",\n            children: daysOfWeek.map(day => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: day,\n              children: day\n            }, day, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          colorScheme: \"teal\",\n          children: editingTodo ? 'Update Task' : 'Add Task'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoForm, \"UXOWxvdHyfBHDoVGOA63Daq8e94=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useEffect","useState","axios","Box","Button","Input","Select","Stack","Text","Textarea","jsxDEV","_jsxDEV","daysOfWeek","TodoForm","onAdd","editingTodo","onUpdateDone","_s","todo","setTodo","title","description","day","completed","handleChange","e","target","name","type","value","prev","checked","handleSubmit","preventDefault","alert","put","id","then","res","data","resetForm","catch","err","console","error","post","maxW","mx","children","onSubmit","gap","fontWeight","mb","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","map","colorScheme","_c","$RefreshReg$"],"sources":["C:/Users/tuanl/weekly-todo-frontend/src/components/todoForm.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    Input,\r\n    Select,\r\n    Stack,\r\n    Text,\r\n    Textarea,\r\n} from '@chakra-ui/react';\r\nimport { Todo } from '../types/todo';\r\n\r\ninterface TodoFormProps {\r\n    onAdd: (newTodo: Todo) => void;\r\n    editingTodo?: Todo | null;\r\n    onUpdateDone?: (updated: Todo) => void;\r\n}\r\n\r\nconst daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n\r\nconst TodoForm: React.FC<TodoFormProps> = ({ onAdd, editingTodo, onUpdateDone }) => {\r\n    const [todo, setTodo] = useState<Todo>({\r\n        title: '',\r\n        description: '',\r\n        day: '',\r\n        completed: false,\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (editingTodo) setTodo(editingTodo);\r\n    }, [editingTodo]);\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\r\n        const target = e.target as HTMLInputElement;\r\n        const { name, type, value } = target;\r\n        setTodo(prev => ({\r\n            ...prev,\r\n            [name]: type === 'checkbox' ? target.checked : value\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        if (!todo.title || !todo.day) return alert(\"Title and day are required!\");\r\n\r\n        if (editingTodo && onUpdateDone) {\r\n            axios.put<Todo>(`http://localhost:8080/api/todos/${todo.id}`, todo)\r\n                .then(res => {\r\n                    onUpdateDone(res.data);\r\n                    resetForm();\r\n                })\r\n                .catch(err => console.error(\"Update failed\", err));\r\n        } else {\r\n            axios.post<Todo>('http://localhost:8080/api/todos', todo)\r\n                .then(res => {\r\n                    onAdd(res.data);\r\n                    resetForm();\r\n                })\r\n                .catch(err => console.error(\"Create failed\", err));\r\n        }\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setTodo({ title: '', description: '', day: '', completed: false });\r\n    };\r\n\r\n    return (\r\n        <Box maxW=\"md\" mx=\"auto\">\r\n            <form onSubmit={handleSubmit}>\r\n                <Stack gap={4}>\r\n                    <Box>\r\n                        <Text fontWeight=\"bold\" mb={1}>Title</Text>\r\n                        <Input name=\"title\" value={todo.title} onChange={handleChange} placeholder=\"Task title\" />\r\n                    </Box>\r\n\r\n                    <Box>\r\n                        <Text fontWeight=\"bold\" mb={1}>Description</Text>\r\n                        <Textarea name=\"description\" value={todo.description} onChange={handleChange} placeholder=\"Description\" />\r\n                    </Box>\r\n\r\n                    <Box>\r\n                        <Text fontWeight=\"bold\" mb={1}>Day</Text>\r\n                        <Select name=\"day\" value={todo.day} onChange={handleChange} placeholder=\"Select a day\">\r\n                            {daysOfWeek.map(day => (\r\n                                <option key={day} value={day}>{day}</option>\r\n                            ))}\r\n                        </Select>\r\n                    </Box>\r\n                    <Button type=\"submit\" colorScheme=\"teal\">\r\n                        {editingTodo ? 'Update Task' : 'Add Task'}\r\n                    </Button>\r\n                </Stack>\r\n            </form>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default TodoForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}