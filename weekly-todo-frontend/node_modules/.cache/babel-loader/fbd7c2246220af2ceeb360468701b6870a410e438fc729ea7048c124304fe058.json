{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { ark } from '../factory.js';\nimport { useTimePickerContext } from './use-time-picker-context.js';\nconst TimePickerTrigger = forwardRef((props, ref) => {\n  const timePicker = useTimePickerContext();\n  const mergedProps = mergeProps(timePicker.getTriggerProps(), props);\n  return /* @__PURE__ */jsx(ark.button, {\n    ...mergedProps,\n    ref\n  });\n});\nTimePickerTrigger.displayName = \"TimePickerTrigger\";\nexport { TimePickerTrigger };","map":{"version":3,"names":["jsx","mergeProps","forwardRef","ark","useTimePickerContext","TimePickerTrigger","props","ref","timePicker","mergedProps","getTriggerProps","button","displayName"],"sources":["C:/Users/tuanl/weekly-todo-frontend/node_modules/@ark-ui/react/dist/components/time-picker/time-picker-trigger.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { ark } from '../factory.js';\nimport { useTimePickerContext } from './use-time-picker-context.js';\n\nconst TimePickerTrigger = forwardRef((props, ref) => {\n  const timePicker = useTimePickerContext();\n  const mergedProps = mergeProps(timePicker.getTriggerProps(), props);\n  return /* @__PURE__ */ jsx(ark.button, { ...mergedProps, ref });\n});\nTimePickerTrigger.displayName = \"TimePickerTrigger\";\n\nexport { TimePickerTrigger };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,GAAG,QAAQ,eAAe;AACnC,SAASC,oBAAoB,QAAQ,8BAA8B;AAEnE,MAAMC,iBAAiB,GAAGH,UAAU,CAAC,CAACI,KAAK,EAAEC,GAAG,KAAK;EACnD,MAAMC,UAAU,GAAGJ,oBAAoB,CAAC,CAAC;EACzC,MAAMK,WAAW,GAAGR,UAAU,CAACO,UAAU,CAACE,eAAe,CAAC,CAAC,EAAEJ,KAAK,CAAC;EACnE,OAAO,eAAgBN,GAAG,CAACG,GAAG,CAACQ,MAAM,EAAE;IAAE,GAAGF,WAAW;IAAEF;EAAI,CAAC,CAAC;AACjE,CAAC,CAAC;AACFF,iBAAiB,CAACO,WAAW,GAAG,mBAAmB;AAEnD,SAASP,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}