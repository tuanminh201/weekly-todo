{"ast":null,"code":"function composeRefs(...refs) {\n  return node => {\n    const cleanUps = [];\n    for (const ref of refs) {\n      if (typeof ref === \"function\") {\n        const cb = ref(node);\n        if (typeof cb === \"function\") {\n          cleanUps.push(cb);\n        }\n      } else if (ref) {\n        ref.current = node;\n      }\n    }\n    if (cleanUps.length) {\n      return () => {\n        for (const cleanUp of cleanUps) {\n          cleanUp();\n        }\n      };\n    }\n  };\n}\nexport { composeRefs };","map":{"version":3,"names":["composeRefs","refs","node","cleanUps","ref","cb","push","current","length","cleanUp"],"sources":["C:/Users/tuanl/weekly-todo-frontend/node_modules/@chakra-ui/react/node_modules/@ark-ui/react/dist/utils/compose-refs.js"],"sourcesContent":["function composeRefs(...refs) {\n  return (node) => {\n    const cleanUps = [];\n    for (const ref of refs) {\n      if (typeof ref === \"function\") {\n        const cb = ref(node);\n        if (typeof cb === \"function\") {\n          cleanUps.push(cb);\n        }\n      } else if (ref) {\n        ref.current = node;\n      }\n    }\n    if (cleanUps.length) {\n      return () => {\n        for (const cleanUp of cleanUps) {\n          cleanUp();\n        }\n      };\n    }\n  };\n}\n\nexport { composeRefs };\n"],"mappings":"AAAA,SAASA,WAAWA,CAAC,GAAGC,IAAI,EAAE;EAC5B,OAAQC,IAAI,IAAK;IACf,MAAMC,QAAQ,GAAG,EAAE;IACnB,KAAK,MAAMC,GAAG,IAAIH,IAAI,EAAE;MACtB,IAAI,OAAOG,GAAG,KAAK,UAAU,EAAE;QAC7B,MAAMC,EAAE,GAAGD,GAAG,CAACF,IAAI,CAAC;QACpB,IAAI,OAAOG,EAAE,KAAK,UAAU,EAAE;UAC5BF,QAAQ,CAACG,IAAI,CAACD,EAAE,CAAC;QACnB;MACF,CAAC,MAAM,IAAID,GAAG,EAAE;QACdA,GAAG,CAACG,OAAO,GAAGL,IAAI;MACpB;IACF;IACA,IAAIC,QAAQ,CAACK,MAAM,EAAE;MACnB,OAAO,MAAM;QACX,KAAK,MAAMC,OAAO,IAAIN,QAAQ,EAAE;UAC9BM,OAAO,CAAC,CAAC;QACX;MACF,CAAC;IACH;EACF,CAAC;AACH;AAEA,SAAST,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}