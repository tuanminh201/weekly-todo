{"ast":null,"code":"'use client';\n\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport * as tagsInput from '@zag-js/tags-input';\nimport { useId } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useFieldContext } from '../field/use-field-context.js';\nconst useTagsInput = props => {\n  const id = useId();\n  const {\n    getRootNode\n  } = useEnvironmentContext();\n  const {\n    dir\n  } = useLocaleContext();\n  const field = useFieldContext();\n  const machineProps = {\n    id,\n    ids: {\n      label: field?.ids.label,\n      hiddenInput: field?.ids.control\n    },\n    dir,\n    disabled: field?.disabled,\n    invalid: field?.invalid,\n    readOnly: field?.readOnly,\n    required: field?.required,\n    getRootNode,\n    ...props\n  };\n  const service = useMachine(tagsInput.machine, machineProps);\n  return tagsInput.connect(service, normalizeProps);\n};\nexport { useTagsInput };","map":{"version":3,"names":["useMachine","normalizeProps","tagsInput","useId","useEnvironmentContext","useLocaleContext","useFieldContext","useTagsInput","props","id","getRootNode","dir","field","machineProps","ids","label","hiddenInput","control","disabled","invalid","readOnly","required","service","machine","connect"],"sources":["C:/Users/tuanl/weekly-todo-frontend/node_modules/@chakra-ui/react/node_modules/@ark-ui/react/dist/components/tags-input/use-tags-input.js"],"sourcesContent":["'use client';\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport * as tagsInput from '@zag-js/tags-input';\nimport { useId } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useFieldContext } from '../field/use-field-context.js';\n\nconst useTagsInput = (props) => {\n  const id = useId();\n  const { getRootNode } = useEnvironmentContext();\n  const { dir } = useLocaleContext();\n  const field = useFieldContext();\n  const machineProps = {\n    id,\n    ids: {\n      label: field?.ids.label,\n      hiddenInput: field?.ids.control\n    },\n    dir,\n    disabled: field?.disabled,\n    invalid: field?.invalid,\n    readOnly: field?.readOnly,\n    required: field?.required,\n    getRootNode,\n    ...props\n  };\n  const service = useMachine(tagsInput.machine, machineProps);\n  return tagsInput.connect(service, normalizeProps);\n};\n\nexport { useTagsInput };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,UAAU,EAAEC,cAAc,QAAQ,eAAe;AAC1D,OAAO,KAAKC,SAAS,MAAM,oBAAoB;AAC/C,SAASC,KAAK,QAAQ,OAAO;AAC7B,SAASC,qBAAqB,QAAQ,wDAAwD;AAC9F,SAASC,gBAAgB,QAAQ,8CAA8C;AAC/E,SAASC,eAAe,QAAQ,+BAA+B;AAE/D,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC9B,MAAMC,EAAE,GAAGN,KAAK,CAAC,CAAC;EAClB,MAAM;IAAEO;EAAY,CAAC,GAAGN,qBAAqB,CAAC,CAAC;EAC/C,MAAM;IAAEO;EAAI,CAAC,GAAGN,gBAAgB,CAAC,CAAC;EAClC,MAAMO,KAAK,GAAGN,eAAe,CAAC,CAAC;EAC/B,MAAMO,YAAY,GAAG;IACnBJ,EAAE;IACFK,GAAG,EAAE;MACHC,KAAK,EAAEH,KAAK,EAAEE,GAAG,CAACC,KAAK;MACvBC,WAAW,EAAEJ,KAAK,EAAEE,GAAG,CAACG;IAC1B,CAAC;IACDN,GAAG;IACHO,QAAQ,EAAEN,KAAK,EAAEM,QAAQ;IACzBC,OAAO,EAAEP,KAAK,EAAEO,OAAO;IACvBC,QAAQ,EAAER,KAAK,EAAEQ,QAAQ;IACzBC,QAAQ,EAAET,KAAK,EAAES,QAAQ;IACzBX,WAAW;IACX,GAAGF;EACL,CAAC;EACD,MAAMc,OAAO,GAAGtB,UAAU,CAACE,SAAS,CAACqB,OAAO,EAAEV,YAAY,CAAC;EAC3D,OAAOX,SAAS,CAACsB,OAAO,CAACF,OAAO,EAAErB,cAAc,CAAC;AACnD,CAAC;AAED,SAASM,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}