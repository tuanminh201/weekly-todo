{"ast":null,"code":"'use client';\n\nimport * as presence from '@zag-js/presence';\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport { useRef } from 'react';\nimport { useEvent } from '../../utils/use-event.js';\nconst usePresence = (props = {}) => {\n  const {\n    lazyMount,\n    unmountOnExit,\n    present,\n    skipAnimationOnMount = false,\n    ...rest\n  } = props;\n  const wasEverPresent = useRef(false);\n  const machineProps = {\n    ...rest,\n    present,\n    onExitComplete: useEvent(props.onExitComplete)\n  };\n  const service = useMachine(presence.machine, machineProps);\n  const api = presence.connect(service, normalizeProps);\n  if (api.present) {\n    wasEverPresent.current = true;\n  }\n  const unmounted = !api.present && !wasEverPresent.current && lazyMount || unmountOnExit && !api.present && wasEverPresent.current;\n  const getPresenceProps = () => ({\n    \"data-state\": api.skip && skipAnimationOnMount ? void 0 : present ? \"open\" : \"closed\",\n    hidden: !api.present\n  });\n  return {\n    ref: api.setNode,\n    getPresenceProps,\n    present: api.present,\n    unmounted\n  };\n};\nexport { usePresence };","map":{"version":3,"names":["presence","useMachine","normalizeProps","useRef","useEvent","usePresence","props","lazyMount","unmountOnExit","present","skipAnimationOnMount","rest","wasEverPresent","machineProps","onExitComplete","service","machine","api","connect","current","unmounted","getPresenceProps","skip","hidden","ref","setNode"],"sources":["C:/Users/tuanl/weekly-todo-frontend/node_modules/@chakra-ui/react/node_modules/@ark-ui/react/dist/components/presence/use-presence.js"],"sourcesContent":["'use client';\nimport * as presence from '@zag-js/presence';\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport { useRef } from 'react';\nimport { useEvent } from '../../utils/use-event.js';\n\nconst usePresence = (props = {}) => {\n  const { lazyMount, unmountOnExit, present, skipAnimationOnMount = false, ...rest } = props;\n  const wasEverPresent = useRef(false);\n  const machineProps = {\n    ...rest,\n    present,\n    onExitComplete: useEvent(props.onExitComplete)\n  };\n  const service = useMachine(presence.machine, machineProps);\n  const api = presence.connect(service, normalizeProps);\n  if (api.present) {\n    wasEverPresent.current = true;\n  }\n  const unmounted = !api.present && !wasEverPresent.current && lazyMount || unmountOnExit && !api.present && wasEverPresent.current;\n  const getPresenceProps = () => ({\n    \"data-state\": api.skip && skipAnimationOnMount ? void 0 : present ? \"open\" : \"closed\",\n    hidden: !api.present\n  });\n  return {\n    ref: api.setNode,\n    getPresenceProps,\n    present: api.present,\n    unmounted\n  };\n};\n\nexport { usePresence };\n"],"mappings":"AAAA,YAAY;;AACZ,OAAO,KAAKA,QAAQ,MAAM,kBAAkB;AAC5C,SAASC,UAAU,EAAEC,cAAc,QAAQ,eAAe;AAC1D,SAASC,MAAM,QAAQ,OAAO;AAC9B,SAASC,QAAQ,QAAQ,0BAA0B;AAEnD,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAG,CAAC,CAAC,KAAK;EAClC,MAAM;IAAEC,SAAS;IAAEC,aAAa;IAAEC,OAAO;IAAEC,oBAAoB,GAAG,KAAK;IAAE,GAAGC;EAAK,CAAC,GAAGL,KAAK;EAC1F,MAAMM,cAAc,GAAGT,MAAM,CAAC,KAAK,CAAC;EACpC,MAAMU,YAAY,GAAG;IACnB,GAAGF,IAAI;IACPF,OAAO;IACPK,cAAc,EAAEV,QAAQ,CAACE,KAAK,CAACQ,cAAc;EAC/C,CAAC;EACD,MAAMC,OAAO,GAAGd,UAAU,CAACD,QAAQ,CAACgB,OAAO,EAAEH,YAAY,CAAC;EAC1D,MAAMI,GAAG,GAAGjB,QAAQ,CAACkB,OAAO,CAACH,OAAO,EAAEb,cAAc,CAAC;EACrD,IAAIe,GAAG,CAACR,OAAO,EAAE;IACfG,cAAc,CAACO,OAAO,GAAG,IAAI;EAC/B;EACA,MAAMC,SAAS,GAAG,CAACH,GAAG,CAACR,OAAO,IAAI,CAACG,cAAc,CAACO,OAAO,IAAIZ,SAAS,IAAIC,aAAa,IAAI,CAACS,GAAG,CAACR,OAAO,IAAIG,cAAc,CAACO,OAAO;EACjI,MAAME,gBAAgB,GAAGA,CAAA,MAAO;IAC9B,YAAY,EAAEJ,GAAG,CAACK,IAAI,IAAIZ,oBAAoB,GAAG,KAAK,CAAC,GAAGD,OAAO,GAAG,MAAM,GAAG,QAAQ;IACrFc,MAAM,EAAE,CAACN,GAAG,CAACR;EACf,CAAC,CAAC;EACF,OAAO;IACLe,GAAG,EAAEP,GAAG,CAACQ,OAAO;IAChBJ,gBAAgB;IAChBZ,OAAO,EAAEQ,GAAG,CAACR,OAAO;IACpBW;EACF,CAAC;AACH,CAAC;AAED,SAASf,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}