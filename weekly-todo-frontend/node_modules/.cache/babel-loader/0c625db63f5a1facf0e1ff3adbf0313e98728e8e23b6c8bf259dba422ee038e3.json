{"ast":null,"code":"'use client';\n\nimport * as fileUpload from '@zag-js/file-upload';\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport { useId } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useFieldContext } from '../field/use-field-context.js';\nconst useFileUpload = props => {\n  const id = useId();\n  const {\n    getRootNode\n  } = useEnvironmentContext();\n  const {\n    dir,\n    locale\n  } = useLocaleContext();\n  const field = useFieldContext();\n  const machineProps = {\n    id,\n    ids: {\n      label: field?.ids.label,\n      hiddenInput: field?.ids.control\n    },\n    dir,\n    disabled: field?.disabled,\n    locale,\n    required: field?.required,\n    invalid: field?.invalid,\n    getRootNode,\n    ...props\n  };\n  const service = useMachine(fileUpload.machine, machineProps);\n  return fileUpload.connect(service, normalizeProps);\n};\nexport { useFileUpload };","map":{"version":3,"names":["fileUpload","useMachine","normalizeProps","useId","useEnvironmentContext","useLocaleContext","useFieldContext","useFileUpload","props","id","getRootNode","dir","locale","field","machineProps","ids","label","hiddenInput","control","disabled","required","invalid","service","machine","connect"],"sources":["C:/Users/tuanl/weekly-todo-frontend/node_modules/@chakra-ui/react/node_modules/@ark-ui/react/dist/components/file-upload/use-file-upload.js"],"sourcesContent":["'use client';\nimport * as fileUpload from '@zag-js/file-upload';\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport { useId } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useFieldContext } from '../field/use-field-context.js';\n\nconst useFileUpload = (props) => {\n  const id = useId();\n  const { getRootNode } = useEnvironmentContext();\n  const { dir, locale } = useLocaleContext();\n  const field = useFieldContext();\n  const machineProps = {\n    id,\n    ids: {\n      label: field?.ids.label,\n      hiddenInput: field?.ids.control\n    },\n    dir,\n    disabled: field?.disabled,\n    locale,\n    required: field?.required,\n    invalid: field?.invalid,\n    getRootNode,\n    ...props\n  };\n  const service = useMachine(fileUpload.machine, machineProps);\n  return fileUpload.connect(service, normalizeProps);\n};\n\nexport { useFileUpload };\n"],"mappings":"AAAA,YAAY;;AACZ,OAAO,KAAKA,UAAU,MAAM,qBAAqB;AACjD,SAASC,UAAU,EAAEC,cAAc,QAAQ,eAAe;AAC1D,SAASC,KAAK,QAAQ,OAAO;AAC7B,SAASC,qBAAqB,QAAQ,wDAAwD;AAC9F,SAASC,gBAAgB,QAAQ,8CAA8C;AAC/E,SAASC,eAAe,QAAQ,+BAA+B;AAE/D,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAC/B,MAAMC,EAAE,GAAGN,KAAK,CAAC,CAAC;EAClB,MAAM;IAAEO;EAAY,CAAC,GAAGN,qBAAqB,CAAC,CAAC;EAC/C,MAAM;IAAEO,GAAG;IAAEC;EAAO,CAAC,GAAGP,gBAAgB,CAAC,CAAC;EAC1C,MAAMQ,KAAK,GAAGP,eAAe,CAAC,CAAC;EAC/B,MAAMQ,YAAY,GAAG;IACnBL,EAAE;IACFM,GAAG,EAAE;MACHC,KAAK,EAAEH,KAAK,EAAEE,GAAG,CAACC,KAAK;MACvBC,WAAW,EAAEJ,KAAK,EAAEE,GAAG,CAACG;IAC1B,CAAC;IACDP,GAAG;IACHQ,QAAQ,EAAEN,KAAK,EAAEM,QAAQ;IACzBP,MAAM;IACNQ,QAAQ,EAAEP,KAAK,EAAEO,QAAQ;IACzBC,OAAO,EAAER,KAAK,EAAEQ,OAAO;IACvBX,WAAW;IACX,GAAGF;EACL,CAAC;EACD,MAAMc,OAAO,GAAGrB,UAAU,CAACD,UAAU,CAACuB,OAAO,EAAET,YAAY,CAAC;EAC5D,OAAOd,UAAU,CAACwB,OAAO,CAACF,OAAO,EAAEpB,cAAc,CAAC;AACpD,CAAC;AAED,SAASK,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}