{"ast":null,"code":"import { createAnatomy } from '@zag-js/anatomy';\nimport { raf, setElementValue, trackElementRect, queryAll, trackPointerMove, trackFormControl, getRelativePoint, dispatchInputValueEvent, dataAttr, isLeftClick, isModifierKey, getEventPoint, ariaAttr, getEventStep, getEventKey } from '@zag-js/dom-query';\nimport { setValueAtIndex, pick, getValuePercent, isEqual, createSplitProps, snapValueToStep, clampValue, getValueRanges, getNextStepValue, getPreviousStepValue, getPercentValue, getClosestValueIndex, first, last, toPx, getValueTransformer } from '@zag-js/utils';\nimport { createMachine } from '@zag-js/core';\nimport { createProps } from '@zag-js/types';\n\n// src/slider.anatomy.ts\nvar anatomy = createAnatomy(\"slider\").parts(\"root\", \"label\", \"thumb\", \"valueText\", \"track\", \"range\", \"control\", \"markerGroup\", \"marker\", \"draggingIndicator\");\nvar parts = anatomy.build();\nvar getRootId = ctx => ctx.ids?.root ?? `slider:${ctx.id}`;\nvar getThumbId = (ctx, index) => ctx.ids?.thumb?.(index) ?? `slider:${ctx.id}:thumb:${index}`;\nvar getHiddenInputId = (ctx, index) => ctx.ids?.hiddenInput?.(index) ?? `slider:${ctx.id}:input:${index}`;\nvar getControlId = ctx => ctx.ids?.control ?? `slider:${ctx.id}:control`;\nvar getTrackId = ctx => ctx.ids?.track ?? `slider:${ctx.id}:track`;\nvar getRangeId = ctx => ctx.ids?.range ?? `slider:${ctx.id}:range`;\nvar getLabelId = ctx => ctx.ids?.label ?? `slider:${ctx.id}:label`;\nvar getValueTextId = ctx => ctx.ids?.valueText ?? `slider:${ctx.id}:value-text`;\nvar getMarkerId = (ctx, value) => ctx.ids?.marker?.(value) ?? `slider:${ctx.id}:marker:${value}`;\nvar getRootEl = ctx => ctx.getById(getRootId(ctx));\nvar getThumbEl = (ctx, index) => ctx.getById(getThumbId(ctx, index));\nvar getThumbEls = ctx => queryAll(getControlEl(ctx), \"[role=slider]\");\nvar getFirstThumbEl = ctx => getThumbEls(ctx)[0];\nvar getHiddenInputEl = (ctx, index) => ctx.getById(getHiddenInputId(ctx, index));\nvar getControlEl = ctx => ctx.getById(getControlId(ctx));\nvar getPointValue = (params, point) => {\n  const {\n    prop,\n    scope\n  } = params;\n  const controlEl = getControlEl(scope);\n  if (!controlEl) return;\n  const relativePoint = getRelativePoint(point, controlEl);\n  const percent = relativePoint.getPercentValue({\n    orientation: prop(\"orientation\"),\n    dir: prop(\"dir\"),\n    inverted: {\n      y: true\n    }\n  });\n  return getPercentValue(percent, prop(\"min\"), prop(\"max\"), prop(\"step\"));\n};\nvar dispatchChangeEvent = (ctx, value) => {\n  value.forEach((value2, index) => {\n    const inputEl = getHiddenInputEl(ctx, index);\n    if (!inputEl) return;\n    dispatchInputValueEvent(inputEl, {\n      value: value2\n    });\n  });\n};\nvar getOffsetRect = el => ({\n  left: el?.offsetLeft ?? 0,\n  top: el?.offsetTop ?? 0,\n  width: el?.offsetWidth ?? 0,\n  height: el?.offsetHeight ?? 0\n});\nfunction getBounds(value) {\n  const firstValue = value[0];\n  const lastThumb = value[value.length - 1];\n  return [firstValue, lastThumb];\n}\nfunction getRangeOffsets(params) {\n  const {\n    prop,\n    computed\n  } = params;\n  const valuePercent = computed(\"valuePercent\");\n  const [firstPercent, lastPercent] = getBounds(valuePercent);\n  if (valuePercent.length === 1) {\n    if (prop(\"origin\") === \"center\") {\n      const isNegative = valuePercent[0] < 50;\n      const start = isNegative ? `${valuePercent[0]}%` : \"50%\";\n      const end = isNegative ? \"50%\" : `${100 - valuePercent[0]}%`;\n      return {\n        start,\n        end\n      };\n    }\n    if (prop(\"origin\") === \"end\") {\n      return {\n        start: `${lastPercent}%`,\n        end: \"0%\"\n      };\n    }\n    return {\n      start: \"0%\",\n      end: `${100 - lastPercent}%`\n    };\n  }\n  return {\n    start: `${firstPercent}%`,\n    end: `${100 - lastPercent}%`\n  };\n}\nfunction getRangeStyle(params) {\n  const {\n    computed\n  } = params;\n  const isVertical = computed(\"isVertical\");\n  const isRtl = computed(\"isRtl\");\n  if (isVertical) {\n    return {\n      position: \"absolute\",\n      bottom: \"var(--slider-range-start)\",\n      top: \"var(--slider-range-end)\"\n    };\n  }\n  return {\n    position: \"absolute\",\n    [isRtl ? \"right\" : \"left\"]: \"var(--slider-range-start)\",\n    [isRtl ? \"left\" : \"right\"]: \"var(--slider-range-end)\"\n  };\n}\nfunction getVerticalThumbOffset(params, value) {\n  const {\n    context,\n    prop\n  } = params;\n  const {\n    height = 0\n  } = context.get(\"thumbSize\") ?? {};\n  const getValue = getValueTransformer([prop(\"min\"), prop(\"max\")], [-height / 2, height / 2]);\n  return parseFloat(getValue(value).toFixed(2));\n}\nfunction getHorizontalThumbOffset(params, value) {\n  const {\n    computed,\n    context,\n    prop\n  } = params;\n  const {\n    width = 0\n  } = context.get(\"thumbSize\") ?? {};\n  const isRtl = computed(\"isRtl\");\n  if (isRtl) {\n    const getValue2 = getValueTransformer([prop(\"max\"), prop(\"min\")], [-width / 2, width / 2]);\n    return -1 * parseFloat(getValue2(value).toFixed(2));\n  }\n  const getValue = getValueTransformer([prop(\"min\"), prop(\"max\")], [-width / 2, width / 2]);\n  return parseFloat(getValue(value).toFixed(2));\n}\nfunction getOffset(params, percent, value) {\n  const {\n    computed,\n    prop\n  } = params;\n  if (prop(\"thumbAlignment\") === \"center\") return `${percent}%`;\n  const offset = computed(\"isVertical\") ? getVerticalThumbOffset(params, value) : getHorizontalThumbOffset(params, value);\n  return `calc(${percent}% - ${offset}px)`;\n}\nfunction getThumbOffset(params, value) {\n  const {\n    prop\n  } = params;\n  const percent = getValuePercent(value, prop(\"min\"), prop(\"max\")) * 100;\n  return getOffset(params, percent, value);\n}\nfunction getVisibility(params) {\n  const {\n    computed,\n    prop\n  } = params;\n  let visibility = \"visible\";\n  if (prop(\"thumbAlignment\") === \"contain\" && !computed(\"hasMeasuredThumbSize\")) {\n    visibility = \"hidden\";\n  }\n  return visibility;\n}\nfunction getThumbStyle(params, index) {\n  const {\n    computed\n  } = params;\n  const placementProp = computed(\"isVertical\") ? \"bottom\" : \"insetInlineStart\";\n  return {\n    visibility: getVisibility(params),\n    position: \"absolute\",\n    transform: \"var(--slider-thumb-transform)\",\n    [placementProp]: `var(--slider-thumb-offset-${index})`\n  };\n}\nfunction getControlStyle() {\n  return {\n    touchAction: \"none\",\n    userSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    position: \"relative\"\n  };\n}\nfunction getRootStyle(params) {\n  const {\n    context,\n    computed\n  } = params;\n  const isVertical = computed(\"isVertical\");\n  const isRtl = computed(\"isRtl\");\n  const range = getRangeOffsets(params);\n  const thumbSize = context.get(\"thumbSize\");\n  const offsetStyles = context.get(\"value\").reduce((styles, value, index) => {\n    const offset = getThumbOffset(params, value);\n    return {\n      ...styles,\n      [`--slider-thumb-offset-${index}`]: offset\n    };\n  }, {});\n  return {\n    ...offsetStyles,\n    \"--slider-thumb-width\": toPx(thumbSize?.width),\n    \"--slider-thumb-height\": toPx(thumbSize?.height),\n    \"--slider-thumb-transform\": isVertical ? \"translateY(50%)\" : isRtl ? \"translateX(50%)\" : \"translateX(-50%)\",\n    \"--slider-range-start\": range.start,\n    \"--slider-range-end\": range.end\n  };\n}\nfunction getMarkerStyle(params, value) {\n  const {\n    computed\n  } = params;\n  const isHorizontal = computed(\"isHorizontal\");\n  const isRtl = computed(\"isRtl\");\n  return {\n    visibility: getVisibility(params),\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    [isHorizontal ? \"insetInlineStart\" : \"bottom\"]: getThumbOffset(params, value),\n    translate: \"var(--tx) var(--ty)\",\n    \"--tx\": isHorizontal ? isRtl ? \"50%\" : \"-50%\" : \"0%\",\n    \"--ty\": !isHorizontal ? \"50%\" : \"0%\"\n  };\n}\nfunction getMarkerGroupStyle() {\n  return {\n    userSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    pointerEvents: \"none\",\n    position: \"relative\"\n  };\n}\nfunction normalizeValues(params, nextValues) {\n  return nextValues.map((value, index) => {\n    return constrainValue(params, value, index);\n  });\n}\nfunction getRangeAtIndex(params, index) {\n  const {\n    context,\n    prop\n  } = params;\n  return getValueRanges(context.get(\"value\"), prop(\"min\"), prop(\"max\"), prop(\"minStepsBetweenThumbs\"))[index];\n}\nfunction constrainValue(params, value, index) {\n  const {\n    prop\n  } = params;\n  const range = getRangeAtIndex(params, index);\n  const snapValue = snapValueToStep(value, prop(\"min\"), prop(\"max\"), prop(\"step\"));\n  return clampValue(snapValue, range.min, range.max);\n}\nfunction decrement(params, index, step) {\n  const {\n    context,\n    prop\n  } = params;\n  const idx = index ?? context.get(\"focusedIndex\");\n  const range = getRangeAtIndex(params, idx);\n  const nextValues = getPreviousStepValue(idx, {\n    ...range,\n    step: step ?? prop(\"step\"),\n    values: context.get(\"value\")\n  });\n  nextValues[idx] = clampValue(nextValues[idx], range.min, range.max);\n  return nextValues;\n}\nfunction increment(params, index, step) {\n  const {\n    context,\n    prop\n  } = params;\n  const idx = index ?? context.get(\"focusedIndex\");\n  const range = getRangeAtIndex(params, idx);\n  const nextValues = getNextStepValue(idx, {\n    ...range,\n    step: step ?? prop(\"step\"),\n    values: context.get(\"value\")\n  });\n  nextValues[idx] = clampValue(nextValues[idx], range.min, range.max);\n  return nextValues;\n}\nfunction getClosestIndex(params, pointValue) {\n  const {\n    context\n  } = params;\n  return getClosestValueIndex(context.get(\"value\"), pointValue);\n}\n\n// src/slider.connect.ts\nfunction connect(service, normalize2) {\n  const {\n    state,\n    send,\n    context,\n    prop,\n    computed,\n    scope\n  } = service;\n  const ariaLabel = prop(\"aria-label\");\n  const ariaLabelledBy = prop(\"aria-labelledby\");\n  const sliderValue = context.get(\"value\");\n  const focusedIndex = context.get(\"focusedIndex\");\n  const focused = state.matches(\"focus\");\n  const dragging = state.matches(\"dragging\");\n  const disabled = computed(\"isDisabled\");\n  const invalid = prop(\"invalid\");\n  const interactive = computed(\"isInteractive\");\n  const isHorizontal = prop(\"orientation\") === \"horizontal\";\n  const isVertical = prop(\"orientation\") === \"vertical\";\n  function getValuePercentFn(value) {\n    return getValuePercent(value, prop(\"min\"), prop(\"max\"));\n  }\n  function getPercentValueFn(percent) {\n    return getPercentValue(percent, prop(\"min\"), prop(\"max\"), prop(\"step\"));\n  }\n  return {\n    value: sliderValue,\n    dragging,\n    focused,\n    setValue(value) {\n      send({\n        type: \"SET_VALUE\",\n        value\n      });\n    },\n    getThumbValue(index) {\n      return sliderValue[index];\n    },\n    setThumbValue(index, value) {\n      send({\n        type: \"SET_VALUE\",\n        index,\n        value\n      });\n    },\n    getValuePercent: getValuePercentFn,\n    getPercentValue: getPercentValueFn,\n    getThumbPercent(index) {\n      return getValuePercentFn(sliderValue[index]);\n    },\n    setThumbPercent(index, percent) {\n      const value = getPercentValueFn(percent);\n      send({\n        type: \"SET_VALUE\",\n        index,\n        value\n      });\n    },\n    getThumbMin(index) {\n      return getRangeAtIndex(service, index).min;\n    },\n    getThumbMax(index) {\n      return getRangeAtIndex(service, index).max;\n    },\n    increment(index) {\n      send({\n        type: \"INCREMENT\",\n        index\n      });\n    },\n    decrement(index) {\n      send({\n        type: \"DECREMENT\",\n        index\n      });\n    },\n    focus() {\n      if (!interactive) return;\n      send({\n        type: \"FOCUS\",\n        index: 0\n      });\n    },\n    getLabelProps() {\n      return normalize2.label({\n        ...parts.label.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-dragging\": dataAttr(dragging),\n        \"data-focus\": dataAttr(focused),\n        id: getLabelId(scope),\n        htmlFor: getHiddenInputId(scope, 0),\n        onClick(event) {\n          if (!interactive) return;\n          event.preventDefault();\n          getFirstThumbEl(scope)?.focus();\n        },\n        style: {\n          userSelect: \"none\",\n          WebkitUserSelect: \"none\"\n        }\n      });\n    },\n    getRootProps() {\n      return normalize2.element({\n        ...parts.root.attrs,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-dragging\": dataAttr(dragging),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-focus\": dataAttr(focused),\n        id: getRootId(scope),\n        dir: prop(\"dir\"),\n        style: getRootStyle(service)\n      });\n    },\n    getValueTextProps() {\n      return normalize2.element({\n        ...parts.valueText.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-focus\": dataAttr(focused),\n        id: getValueTextId(scope)\n      });\n    },\n    getTrackProps() {\n      return normalize2.element({\n        ...parts.track.attrs,\n        dir: prop(\"dir\"),\n        id: getTrackId(scope),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-dragging\": dataAttr(dragging),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-focus\": dataAttr(focused),\n        style: {\n          position: \"relative\"\n        }\n      });\n    },\n    getThumbProps(props2) {\n      const {\n        index = 0,\n        name\n      } = props2;\n      const value = sliderValue[index];\n      const range = getRangeAtIndex(service, index);\n      const valueText = prop(\"getAriaValueText\")?.({\n        value,\n        index\n      });\n      const _ariaLabel = Array.isArray(ariaLabel) ? ariaLabel[index] : ariaLabel;\n      const _ariaLabelledBy = Array.isArray(ariaLabelledBy) ? ariaLabelledBy[index] : ariaLabelledBy;\n      return normalize2.element({\n        ...parts.thumb.attrs,\n        dir: prop(\"dir\"),\n        \"data-index\": index,\n        \"data-name\": name,\n        id: getThumbId(scope, index),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-focus\": dataAttr(focused && focusedIndex === index),\n        \"data-dragging\": dataAttr(dragging && focusedIndex === index),\n        draggable: false,\n        \"aria-disabled\": ariaAttr(disabled),\n        \"aria-label\": _ariaLabel,\n        \"aria-labelledby\": _ariaLabelledBy ?? getLabelId(scope),\n        \"aria-orientation\": prop(\"orientation\"),\n        \"aria-valuemax\": range.max,\n        \"aria-valuemin\": range.min,\n        \"aria-valuenow\": sliderValue[index],\n        \"aria-valuetext\": valueText,\n        role: \"slider\",\n        tabIndex: disabled ? void 0 : 0,\n        style: getThumbStyle(service, index),\n        onPointerDown(event) {\n          if (!interactive) return;\n          send({\n            type: \"THUMB_POINTER_DOWN\",\n            index\n          });\n          event.stopPropagation();\n        },\n        onBlur() {\n          if (!interactive) return;\n          send({\n            type: \"BLUR\"\n          });\n        },\n        onFocus() {\n          if (!interactive) return;\n          send({\n            type: \"FOCUS\",\n            index\n          });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          const step = getEventStep(event) * prop(\"step\");\n          const keyMap = {\n            ArrowUp() {\n              if (isHorizontal) return;\n              send({\n                type: \"ARROW_INC\",\n                step,\n                src: \"ArrowUp\"\n              });\n            },\n            ArrowDown() {\n              if (isHorizontal) return;\n              send({\n                type: \"ARROW_DEC\",\n                step,\n                src: \"ArrowDown\"\n              });\n            },\n            ArrowLeft() {\n              if (isVertical) return;\n              send({\n                type: \"ARROW_DEC\",\n                step,\n                src: \"ArrowLeft\"\n              });\n            },\n            ArrowRight() {\n              if (isVertical) return;\n              send({\n                type: \"ARROW_INC\",\n                step,\n                src: \"ArrowRight\"\n              });\n            },\n            PageUp() {\n              send({\n                type: \"ARROW_INC\",\n                step,\n                src: \"PageUp\"\n              });\n            },\n            PageDown() {\n              send({\n                type: \"ARROW_DEC\",\n                step,\n                src: \"PageDown\"\n              });\n            },\n            Home() {\n              send({\n                type: \"HOME\"\n              });\n            },\n            End() {\n              send({\n                type: \"END\"\n              });\n            }\n          };\n          const key = getEventKey(event, {\n            dir: prop(\"dir\"),\n            orientation: prop(\"orientation\")\n          });\n          const exec = keyMap[key];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n            event.stopPropagation();\n          }\n        }\n      });\n    },\n    getHiddenInputProps(props2) {\n      const {\n        index = 0,\n        name\n      } = props2;\n      return normalize2.input({\n        name: name ?? (prop(\"name\") ? prop(\"name\") + (sliderValue.length > 1 ? \"[]\" : \"\") : void 0),\n        form: prop(\"form\"),\n        type: \"text\",\n        hidden: true,\n        defaultValue: sliderValue[index],\n        id: getHiddenInputId(scope, index)\n      });\n    },\n    getRangeProps() {\n      return normalize2.element({\n        id: getRangeId(scope),\n        ...parts.range.attrs,\n        dir: prop(\"dir\"),\n        \"data-dragging\": dataAttr(dragging),\n        \"data-focus\": dataAttr(focused),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        style: getRangeStyle(service)\n      });\n    },\n    getControlProps() {\n      return normalize2.element({\n        ...parts.control.attrs,\n        dir: prop(\"dir\"),\n        id: getControlId(scope),\n        \"data-dragging\": dataAttr(dragging),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-focus\": dataAttr(focused),\n        style: getControlStyle(),\n        onPointerDown(event) {\n          if (!interactive) return;\n          if (!isLeftClick(event)) return;\n          if (isModifierKey(event)) return;\n          const point = getEventPoint(event);\n          send({\n            type: \"POINTER_DOWN\",\n            point\n          });\n          event.preventDefault();\n          event.stopPropagation();\n        }\n      });\n    },\n    getMarkerGroupProps() {\n      return normalize2.element({\n        ...parts.markerGroup.attrs,\n        role: \"presentation\",\n        dir: prop(\"dir\"),\n        \"aria-hidden\": true,\n        \"data-orientation\": prop(\"orientation\"),\n        style: getMarkerGroupStyle()\n      });\n    },\n    getMarkerProps(props2) {\n      const style = getMarkerStyle(service, props2.value);\n      let markerState;\n      if (props2.value < first(sliderValue)) {\n        markerState = \"under-value\";\n      } else if (props2.value > last(sliderValue)) {\n        markerState = \"over-value\";\n      } else {\n        markerState = \"at-value\";\n      }\n      return normalize2.element({\n        ...parts.marker.attrs,\n        id: getMarkerId(scope, props2.value),\n        role: \"presentation\",\n        dir: prop(\"dir\"),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-value\": props2.value,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-state\": markerState,\n        style\n      });\n    },\n    getDraggingIndicatorProps(props2) {\n      const {\n        index = 0\n      } = props2;\n      const isDragging = index === focusedIndex && dragging;\n      return normalize2.element({\n        ...parts.draggingIndicator.attrs,\n        role: \"presentation\",\n        dir: prop(\"dir\"),\n        hidden: !isDragging,\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-state\": isDragging ? \"open\" : \"closed\",\n        style: getThumbStyle(service, index)\n      });\n    }\n  };\n}\nvar isEqualSize = (a, b) => {\n  return a?.width === b?.width && a?.height === b?.height;\n};\nvar normalize = (value, min, max, step, minStepsBetweenThumbs) => {\n  const ranges = getValueRanges(value, min, max, minStepsBetweenThumbs * step);\n  return ranges.map(range => {\n    const snapValue = snapValueToStep(range.value, range.min, range.max, step);\n    return clampValue(snapValue, range.min, range.max);\n  });\n};\nvar machine = createMachine({\n  props({\n    props: props2\n  }) {\n    const min = props2.min ?? 0;\n    const max = props2.max ?? 100;\n    const step = props2.step ?? 1;\n    const defaultValue = props2.defaultValue ?? [min];\n    const minStepsBetweenThumbs = props2.minStepsBetweenThumbs ?? 0;\n    return {\n      dir: \"ltr\",\n      thumbAlignment: \"contain\",\n      origin: \"start\",\n      orientation: \"horizontal\",\n      minStepsBetweenThumbs,\n      ...props2,\n      defaultValue: normalize(defaultValue, min, max, step, minStepsBetweenThumbs),\n      value: props2.value ? normalize(props2.value, min, max, step, minStepsBetweenThumbs) : void 0,\n      max,\n      step,\n      min\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context({\n    prop,\n    bindable,\n    getContext\n  }) {\n    return {\n      thumbSize: bindable(() => ({\n        defaultValue: prop(\"thumbSize\") || null\n      })),\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        isEqual,\n        hash(a) {\n          return a.join(\",\");\n        },\n        onChange(value) {\n          prop(\"onValueChange\")?.({\n            value\n          });\n        }\n      })),\n      focusedIndex: bindable(() => ({\n        defaultValue: -1,\n        onChange(value) {\n          const ctx = getContext();\n          prop(\"onFocusChange\")?.({\n            focusedIndex: value,\n            value: ctx.get(\"value\")\n          });\n        }\n      })),\n      fieldsetDisabled: bindable(() => ({\n        defaultValue: false\n      }))\n    };\n  },\n  computed: {\n    isHorizontal: ({\n      prop\n    }) => prop(\"orientation\") === \"horizontal\",\n    isVertical: ({\n      prop\n    }) => prop(\"orientation\") === \"vertical\",\n    isRtl: ({\n      prop\n    }) => prop(\"orientation\") === \"horizontal\" && prop(\"dir\") === \"rtl\",\n    isDisabled: ({\n      context,\n      prop\n    }) => !!prop(\"disabled\") || context.get(\"fieldsetDisabled\"),\n    isInteractive: ({\n      prop,\n      computed\n    }) => !(prop(\"readOnly\") || computed(\"isDisabled\")),\n    hasMeasuredThumbSize: ({\n      context\n    }) => context.get(\"thumbSize\") != null,\n    valuePercent({\n      context,\n      prop\n    }) {\n      return context.get(\"value\").map(value => 100 * getValuePercent(value, prop(\"min\"), prop(\"max\")));\n    }\n  },\n  watch({\n    track,\n    action,\n    context\n  }) {\n    track([() => context.hash(\"value\")], () => {\n      action([\"syncInputElements\", \"dispatchChangeEvent\"]);\n    });\n  },\n  effects: [\"trackFormControlState\", \"trackThumbSize\"],\n  on: {\n    SET_VALUE: [{\n      guard: \"hasIndex\",\n      actions: [\"setValueAtIndex\"]\n    }, {\n      actions: [\"setValue\"]\n    }],\n    INCREMENT: {\n      actions: [\"incrementThumbAtIndex\"]\n    },\n    DECREMENT: {\n      actions: [\"decrementThumbAtIndex\"]\n    }\n  },\n  states: {\n    idle: {\n      on: {\n        POINTER_DOWN: {\n          target: \"dragging\",\n          actions: [\"setClosestThumbIndex\", \"setPointerValue\", \"focusActiveThumb\"]\n        },\n        FOCUS: {\n          target: \"focus\",\n          actions: [\"setFocusedIndex\"]\n        },\n        THUMB_POINTER_DOWN: {\n          target: \"dragging\",\n          actions: [\"setFocusedIndex\", \"focusActiveThumb\"]\n        }\n      }\n    },\n    focus: {\n      entry: [\"focusActiveThumb\"],\n      on: {\n        POINTER_DOWN: {\n          target: \"dragging\",\n          actions: [\"setClosestThumbIndex\", \"setPointerValue\", \"focusActiveThumb\"]\n        },\n        THUMB_POINTER_DOWN: {\n          target: \"dragging\",\n          actions: [\"setFocusedIndex\", \"focusActiveThumb\"]\n        },\n        ARROW_DEC: {\n          actions: [\"decrementThumbAtIndex\", \"invokeOnChangeEnd\"]\n        },\n        ARROW_INC: {\n          actions: [\"incrementThumbAtIndex\", \"invokeOnChangeEnd\"]\n        },\n        HOME: {\n          actions: [\"setFocusedThumbToMin\", \"invokeOnChangeEnd\"]\n        },\n        END: {\n          actions: [\"setFocusedThumbToMax\", \"invokeOnChangeEnd\"]\n        },\n        BLUR: {\n          target: \"idle\",\n          actions: [\"clearFocusedIndex\"]\n        }\n      }\n    },\n    dragging: {\n      entry: [\"focusActiveThumb\"],\n      effects: [\"trackPointerMove\"],\n      on: {\n        POINTER_UP: {\n          target: \"focus\",\n          actions: [\"invokeOnChangeEnd\"]\n        },\n        POINTER_MOVE: {\n          actions: [\"setPointerValue\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      hasIndex: ({\n        event\n      }) => event.index != null\n    },\n    effects: {\n      trackFormControlState({\n        context,\n        scope\n      }) {\n        return trackFormControl(getRootEl(scope), {\n          onFieldsetDisabledChange(disabled) {\n            context.set(\"fieldsetDisabled\", disabled);\n          },\n          onFormReset() {\n            context.set(\"value\", context.initial(\"value\"));\n          }\n        });\n      },\n      trackPointerMove({\n        scope,\n        send\n      }) {\n        return trackPointerMove(scope.getDoc(), {\n          onPointerMove(info) {\n            send({\n              type: \"POINTER_MOVE\",\n              point: info.point\n            });\n          },\n          onPointerUp() {\n            send({\n              type: \"POINTER_UP\"\n            });\n          }\n        });\n      },\n      trackThumbSize({\n        context,\n        scope,\n        prop\n      }) {\n        if (prop(\"thumbAlignment\") !== \"contain\" || prop(\"thumbSize\")) return;\n        return trackElementRect(getThumbEls(scope), {\n          box: \"border-box\",\n          measure(el) {\n            return getOffsetRect(el);\n          },\n          onEntry({\n            rects\n          }) {\n            const size = pick(rects[0], [\"width\", \"height\"]);\n            if (isEqualSize(context.get(\"thumbSize\"), size)) return;\n            context.set(\"thumbSize\", size);\n          }\n        });\n      }\n    },\n    actions: {\n      dispatchChangeEvent({\n        context,\n        scope\n      }) {\n        dispatchChangeEvent(scope, context.get(\"value\"));\n      },\n      syncInputElements({\n        context,\n        scope\n      }) {\n        context.get(\"value\").forEach((value, index) => {\n          const inputEl = getHiddenInputEl(scope, index);\n          setElementValue(inputEl, value.toString());\n        });\n      },\n      invokeOnChangeEnd({\n        prop,\n        context\n      }) {\n        prop(\"onValueChangeEnd\")?.({\n          value: context.get(\"value\")\n        });\n      },\n      setClosestThumbIndex(params) {\n        const {\n          context,\n          event\n        } = params;\n        const pointValue = getPointValue(params, event.point);\n        if (pointValue == null) return;\n        const focusedIndex = getClosestIndex(params, pointValue);\n        context.set(\"focusedIndex\", focusedIndex);\n      },\n      setFocusedIndex({\n        context,\n        event\n      }) {\n        context.set(\"focusedIndex\", event.index);\n      },\n      clearFocusedIndex({\n        context\n      }) {\n        context.set(\"focusedIndex\", -1);\n      },\n      setPointerValue(params) {\n        queueMicrotask(() => {\n          const {\n            context,\n            event\n          } = params;\n          const pointValue = getPointValue(params, event.point);\n          if (pointValue == null) return;\n          const focusedIndex = context.get(\"focusedIndex\");\n          const value = constrainValue(params, pointValue, focusedIndex);\n          context.set(\"value\", prev => setValueAtIndex(prev, focusedIndex, value));\n        });\n      },\n      focusActiveThumb({\n        scope,\n        context\n      }) {\n        raf(() => {\n          const thumbEl = getThumbEl(scope, context.get(\"focusedIndex\"));\n          thumbEl?.focus({\n            preventScroll: true\n          });\n        });\n      },\n      decrementThumbAtIndex(params) {\n        const {\n          context,\n          event\n        } = params;\n        const value = decrement(params, event.index, event.step);\n        context.set(\"value\", value);\n      },\n      incrementThumbAtIndex(params) {\n        const {\n          context,\n          event\n        } = params;\n        const value = increment(params, event.index, event.step);\n        context.set(\"value\", value);\n      },\n      setFocusedThumbToMin(params) {\n        const {\n          context\n        } = params;\n        const index = context.get(\"focusedIndex\");\n        const {\n          min\n        } = getRangeAtIndex(params, index);\n        context.set(\"value\", prev => setValueAtIndex(prev, index, min));\n      },\n      setFocusedThumbToMax(params) {\n        const {\n          context\n        } = params;\n        const index = context.get(\"focusedIndex\");\n        const {\n          max\n        } = getRangeAtIndex(params, index);\n        context.set(\"value\", prev => setValueAtIndex(prev, index, max));\n      },\n      setValueAtIndex(params) {\n        const {\n          context,\n          event\n        } = params;\n        const value = constrainValue(params, event.value, event.index);\n        context.set(\"value\", prev => setValueAtIndex(prev, event.index, value));\n      },\n      setValue(params) {\n        const {\n          context,\n          event\n        } = params;\n        const value = normalizeValues(params, event.value);\n        context.set(\"value\", value);\n      }\n    }\n  }\n});\nvar props = createProps()([\"aria-label\", \"aria-labelledby\", \"dir\", \"disabled\", \"form\", \"getAriaValueText\", \"getRootNode\", \"id\", \"ids\", \"invalid\", \"max\", \"min\", \"minStepsBetweenThumbs\", \"name\", \"onFocusChange\", \"onValueChange\", \"onValueChangeEnd\", \"orientation\", \"origin\", \"readOnly\", \"step\", \"thumbAlignment\", \"thumbAlignment\", \"thumbSize\", \"value\", \"defaultValue\"]);\nvar splitProps = createSplitProps(props);\nvar thumbProps = createProps()([\"index\", \"name\"]);\nvar splitThumbProps = createSplitProps(thumbProps);\nexport { anatomy, connect, machine, props, splitProps, splitThumbProps, thumbProps };","map":{"version":3,"names":["createAnatomy","raf","setElementValue","trackElementRect","queryAll","trackPointerMove","trackFormControl","getRelativePoint","dispatchInputValueEvent","dataAttr","isLeftClick","isModifierKey","getEventPoint","ariaAttr","getEventStep","getEventKey","setValueAtIndex","pick","getValuePercent","isEqual","createSplitProps","snapValueToStep","clampValue","getValueRanges","getNextStepValue","getPreviousStepValue","getPercentValue","getClosestValueIndex","first","last","toPx","getValueTransformer","createMachine","createProps","anatomy","parts","build","getRootId","ctx","ids","root","id","getThumbId","index","thumb","getHiddenInputId","hiddenInput","getControlId","control","getTrackId","track","getRangeId","range","getLabelId","label","getValueTextId","valueText","getMarkerId","value","marker","getRootEl","getById","getThumbEl","getThumbEls","getControlEl","getFirstThumbEl","getHiddenInputEl","getPointValue","params","point","prop","scope","controlEl","relativePoint","percent","orientation","dir","inverted","y","dispatchChangeEvent","forEach","value2","inputEl","getOffsetRect","el","left","offsetLeft","top","offsetTop","width","offsetWidth","height","offsetHeight","getBounds","firstValue","lastThumb","length","getRangeOffsets","computed","valuePercent","firstPercent","lastPercent","isNegative","start","end","getRangeStyle","isVertical","isRtl","position","bottom","getVerticalThumbOffset","context","get","getValue","parseFloat","toFixed","getHorizontalThumbOffset","getValue2","getOffset","offset","getThumbOffset","getVisibility","visibility","getThumbStyle","placementProp","transform","getControlStyle","touchAction","userSelect","WebkitUserSelect","getRootStyle","thumbSize","offsetStyles","reduce","styles","getMarkerStyle","isHorizontal","pointerEvents","translate","getMarkerGroupStyle","normalizeValues","nextValues","map","constrainValue","getRangeAtIndex","snapValue","min","max","decrement","step","idx","values","increment","getClosestIndex","pointValue","connect","service","normalize2","state","send","ariaLabel","ariaLabelledBy","sliderValue","focusedIndex","focused","matches","dragging","disabled","invalid","interactive","getValuePercentFn","getPercentValueFn","setValue","type","getThumbValue","setThumbValue","getThumbPercent","setThumbPercent","getThumbMin","getThumbMax","focus","getLabelProps","attrs","htmlFor","onClick","event","preventDefault","style","getRootProps","element","getValueTextProps","getTrackProps","getThumbProps","props2","name","_ariaLabel","Array","isArray","_ariaLabelledBy","draggable","role","tabIndex","onPointerDown","stopPropagation","onBlur","onFocus","onKeyDown","defaultPrevented","keyMap","ArrowUp","src","ArrowDown","ArrowLeft","ArrowRight","PageUp","PageDown","Home","End","key","exec","getHiddenInputProps","input","form","hidden","defaultValue","getRangeProps","getControlProps","getMarkerGroupProps","markerGroup","getMarkerProps","markerState","getDraggingIndicatorProps","isDragging","draggingIndicator","isEqualSize","a","b","normalize","minStepsBetweenThumbs","ranges","machine","props","thumbAlignment","origin","initialState","bindable","getContext","hash","join","onChange","fieldsetDisabled","isDisabled","isInteractive","hasMeasuredThumbSize","watch","action","effects","on","SET_VALUE","guard","actions","INCREMENT","DECREMENT","states","idle","POINTER_DOWN","target","FOCUS","THUMB_POINTER_DOWN","entry","ARROW_DEC","ARROW_INC","HOME","END","BLUR","POINTER_UP","POINTER_MOVE","implementations","guards","hasIndex","trackFormControlState","onFieldsetDisabledChange","set","onFormReset","initial","getDoc","onPointerMove","info","onPointerUp","trackThumbSize","box","measure","onEntry","rects","size","syncInputElements","toString","invokeOnChangeEnd","setClosestThumbIndex","setFocusedIndex","clearFocusedIndex","setPointerValue","queueMicrotask","prev","focusActiveThumb","thumbEl","preventScroll","decrementThumbAtIndex","incrementThumbAtIndex","setFocusedThumbToMin","setFocusedThumbToMax","splitProps","thumbProps","splitThumbProps"],"sources":["C:/Users/tuanl/weekly-todo-frontend/node_modules/@zag-js/slider/dist/index.mjs"],"sourcesContent":["import { createAnatomy } from '@zag-js/anatomy';\nimport { raf, setElementValue, trackElementRect, queryAll, trackPointerMove, trackFormControl, getRelativePoint, dispatchInputValueEvent, dataAttr, isLeftClick, isModifierKey, getEventPoint, ariaAttr, getEventStep, getEventKey } from '@zag-js/dom-query';\nimport { setValueAtIndex, pick, getValuePercent, isEqual, createSplitProps, snapValueToStep, clampValue, getValueRanges, getNextStepValue, getPreviousStepValue, getPercentValue, getClosestValueIndex, first, last, toPx, getValueTransformer } from '@zag-js/utils';\nimport { createMachine } from '@zag-js/core';\nimport { createProps } from '@zag-js/types';\n\n// src/slider.anatomy.ts\nvar anatomy = createAnatomy(\"slider\").parts(\n  \"root\",\n  \"label\",\n  \"thumb\",\n  \"valueText\",\n  \"track\",\n  \"range\",\n  \"control\",\n  \"markerGroup\",\n  \"marker\",\n  \"draggingIndicator\"\n);\nvar parts = anatomy.build();\nvar getRootId = (ctx) => ctx.ids?.root ?? `slider:${ctx.id}`;\nvar getThumbId = (ctx, index) => ctx.ids?.thumb?.(index) ?? `slider:${ctx.id}:thumb:${index}`;\nvar getHiddenInputId = (ctx, index) => ctx.ids?.hiddenInput?.(index) ?? `slider:${ctx.id}:input:${index}`;\nvar getControlId = (ctx) => ctx.ids?.control ?? `slider:${ctx.id}:control`;\nvar getTrackId = (ctx) => ctx.ids?.track ?? `slider:${ctx.id}:track`;\nvar getRangeId = (ctx) => ctx.ids?.range ?? `slider:${ctx.id}:range`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `slider:${ctx.id}:label`;\nvar getValueTextId = (ctx) => ctx.ids?.valueText ?? `slider:${ctx.id}:value-text`;\nvar getMarkerId = (ctx, value) => ctx.ids?.marker?.(value) ?? `slider:${ctx.id}:marker:${value}`;\nvar getRootEl = (ctx) => ctx.getById(getRootId(ctx));\nvar getThumbEl = (ctx, index) => ctx.getById(getThumbId(ctx, index));\nvar getThumbEls = (ctx) => queryAll(getControlEl(ctx), \"[role=slider]\");\nvar getFirstThumbEl = (ctx) => getThumbEls(ctx)[0];\nvar getHiddenInputEl = (ctx, index) => ctx.getById(getHiddenInputId(ctx, index));\nvar getControlEl = (ctx) => ctx.getById(getControlId(ctx));\nvar getPointValue = (params, point) => {\n  const { prop, scope } = params;\n  const controlEl = getControlEl(scope);\n  if (!controlEl) return;\n  const relativePoint = getRelativePoint(point, controlEl);\n  const percent = relativePoint.getPercentValue({\n    orientation: prop(\"orientation\"),\n    dir: prop(\"dir\"),\n    inverted: { y: true }\n  });\n  return getPercentValue(percent, prop(\"min\"), prop(\"max\"), prop(\"step\"));\n};\nvar dispatchChangeEvent = (ctx, value) => {\n  value.forEach((value2, index) => {\n    const inputEl = getHiddenInputEl(ctx, index);\n    if (!inputEl) return;\n    dispatchInputValueEvent(inputEl, { value: value2 });\n  });\n};\nvar getOffsetRect = (el) => ({\n  left: el?.offsetLeft ?? 0,\n  top: el?.offsetTop ?? 0,\n  width: el?.offsetWidth ?? 0,\n  height: el?.offsetHeight ?? 0\n});\nfunction getBounds(value) {\n  const firstValue = value[0];\n  const lastThumb = value[value.length - 1];\n  return [firstValue, lastThumb];\n}\nfunction getRangeOffsets(params) {\n  const { prop, computed } = params;\n  const valuePercent = computed(\"valuePercent\");\n  const [firstPercent, lastPercent] = getBounds(valuePercent);\n  if (valuePercent.length === 1) {\n    if (prop(\"origin\") === \"center\") {\n      const isNegative = valuePercent[0] < 50;\n      const start = isNegative ? `${valuePercent[0]}%` : \"50%\";\n      const end = isNegative ? \"50%\" : `${100 - valuePercent[0]}%`;\n      return { start, end };\n    }\n    if (prop(\"origin\") === \"end\") {\n      return { start: `${lastPercent}%`, end: \"0%\" };\n    }\n    return { start: \"0%\", end: `${100 - lastPercent}%` };\n  }\n  return { start: `${firstPercent}%`, end: `${100 - lastPercent}%` };\n}\nfunction getRangeStyle(params) {\n  const { computed } = params;\n  const isVertical = computed(\"isVertical\");\n  const isRtl = computed(\"isRtl\");\n  if (isVertical) {\n    return {\n      position: \"absolute\",\n      bottom: \"var(--slider-range-start)\",\n      top: \"var(--slider-range-end)\"\n    };\n  }\n  return {\n    position: \"absolute\",\n    [isRtl ? \"right\" : \"left\"]: \"var(--slider-range-start)\",\n    [isRtl ? \"left\" : \"right\"]: \"var(--slider-range-end)\"\n  };\n}\nfunction getVerticalThumbOffset(params, value) {\n  const { context, prop } = params;\n  const { height = 0 } = context.get(\"thumbSize\") ?? {};\n  const getValue = getValueTransformer([prop(\"min\"), prop(\"max\")], [-height / 2, height / 2]);\n  return parseFloat(getValue(value).toFixed(2));\n}\nfunction getHorizontalThumbOffset(params, value) {\n  const { computed, context, prop } = params;\n  const { width = 0 } = context.get(\"thumbSize\") ?? {};\n  const isRtl = computed(\"isRtl\");\n  if (isRtl) {\n    const getValue2 = getValueTransformer([prop(\"max\"), prop(\"min\")], [-width / 2, width / 2]);\n    return -1 * parseFloat(getValue2(value).toFixed(2));\n  }\n  const getValue = getValueTransformer([prop(\"min\"), prop(\"max\")], [-width / 2, width / 2]);\n  return parseFloat(getValue(value).toFixed(2));\n}\nfunction getOffset(params, percent, value) {\n  const { computed, prop } = params;\n  if (prop(\"thumbAlignment\") === \"center\") return `${percent}%`;\n  const offset = computed(\"isVertical\") ? getVerticalThumbOffset(params, value) : getHorizontalThumbOffset(params, value);\n  return `calc(${percent}% - ${offset}px)`;\n}\nfunction getThumbOffset(params, value) {\n  const { prop } = params;\n  const percent = getValuePercent(value, prop(\"min\"), prop(\"max\")) * 100;\n  return getOffset(params, percent, value);\n}\nfunction getVisibility(params) {\n  const { computed, prop } = params;\n  let visibility = \"visible\";\n  if (prop(\"thumbAlignment\") === \"contain\" && !computed(\"hasMeasuredThumbSize\")) {\n    visibility = \"hidden\";\n  }\n  return visibility;\n}\nfunction getThumbStyle(params, index) {\n  const { computed } = params;\n  const placementProp = computed(\"isVertical\") ? \"bottom\" : \"insetInlineStart\";\n  return {\n    visibility: getVisibility(params),\n    position: \"absolute\",\n    transform: \"var(--slider-thumb-transform)\",\n    [placementProp]: `var(--slider-thumb-offset-${index})`\n  };\n}\nfunction getControlStyle() {\n  return {\n    touchAction: \"none\",\n    userSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    position: \"relative\"\n  };\n}\nfunction getRootStyle(params) {\n  const { context, computed } = params;\n  const isVertical = computed(\"isVertical\");\n  const isRtl = computed(\"isRtl\");\n  const range = getRangeOffsets(params);\n  const thumbSize = context.get(\"thumbSize\");\n  const offsetStyles = context.get(\"value\").reduce((styles, value, index) => {\n    const offset = getThumbOffset(params, value);\n    return { ...styles, [`--slider-thumb-offset-${index}`]: offset };\n  }, {});\n  return {\n    ...offsetStyles,\n    \"--slider-thumb-width\": toPx(thumbSize?.width),\n    \"--slider-thumb-height\": toPx(thumbSize?.height),\n    \"--slider-thumb-transform\": isVertical ? \"translateY(50%)\" : isRtl ? \"translateX(50%)\" : \"translateX(-50%)\",\n    \"--slider-range-start\": range.start,\n    \"--slider-range-end\": range.end\n  };\n}\nfunction getMarkerStyle(params, value) {\n  const { computed } = params;\n  const isHorizontal = computed(\"isHorizontal\");\n  const isRtl = computed(\"isRtl\");\n  return {\n    visibility: getVisibility(params),\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    [isHorizontal ? \"insetInlineStart\" : \"bottom\"]: getThumbOffset(params, value),\n    translate: \"var(--tx) var(--ty)\",\n    \"--tx\": isHorizontal ? isRtl ? \"50%\" : \"-50%\" : \"0%\",\n    \"--ty\": !isHorizontal ? \"50%\" : \"0%\"\n  };\n}\nfunction getMarkerGroupStyle() {\n  return {\n    userSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    pointerEvents: \"none\",\n    position: \"relative\"\n  };\n}\nfunction normalizeValues(params, nextValues) {\n  return nextValues.map((value, index) => {\n    return constrainValue(params, value, index);\n  });\n}\nfunction getRangeAtIndex(params, index) {\n  const { context, prop } = params;\n  return getValueRanges(context.get(\"value\"), prop(\"min\"), prop(\"max\"), prop(\"minStepsBetweenThumbs\"))[index];\n}\nfunction constrainValue(params, value, index) {\n  const { prop } = params;\n  const range = getRangeAtIndex(params, index);\n  const snapValue = snapValueToStep(value, prop(\"min\"), prop(\"max\"), prop(\"step\"));\n  return clampValue(snapValue, range.min, range.max);\n}\nfunction decrement(params, index, step) {\n  const { context, prop } = params;\n  const idx = index ?? context.get(\"focusedIndex\");\n  const range = getRangeAtIndex(params, idx);\n  const nextValues = getPreviousStepValue(idx, {\n    ...range,\n    step: step ?? prop(\"step\"),\n    values: context.get(\"value\")\n  });\n  nextValues[idx] = clampValue(nextValues[idx], range.min, range.max);\n  return nextValues;\n}\nfunction increment(params, index, step) {\n  const { context, prop } = params;\n  const idx = index ?? context.get(\"focusedIndex\");\n  const range = getRangeAtIndex(params, idx);\n  const nextValues = getNextStepValue(idx, {\n    ...range,\n    step: step ?? prop(\"step\"),\n    values: context.get(\"value\")\n  });\n  nextValues[idx] = clampValue(nextValues[idx], range.min, range.max);\n  return nextValues;\n}\nfunction getClosestIndex(params, pointValue) {\n  const { context } = params;\n  return getClosestValueIndex(context.get(\"value\"), pointValue);\n}\n\n// src/slider.connect.ts\nfunction connect(service, normalize2) {\n  const { state, send, context, prop, computed, scope } = service;\n  const ariaLabel = prop(\"aria-label\");\n  const ariaLabelledBy = prop(\"aria-labelledby\");\n  const sliderValue = context.get(\"value\");\n  const focusedIndex = context.get(\"focusedIndex\");\n  const focused = state.matches(\"focus\");\n  const dragging = state.matches(\"dragging\");\n  const disabled = computed(\"isDisabled\");\n  const invalid = prop(\"invalid\");\n  const interactive = computed(\"isInteractive\");\n  const isHorizontal = prop(\"orientation\") === \"horizontal\";\n  const isVertical = prop(\"orientation\") === \"vertical\";\n  function getValuePercentFn(value) {\n    return getValuePercent(value, prop(\"min\"), prop(\"max\"));\n  }\n  function getPercentValueFn(percent) {\n    return getPercentValue(percent, prop(\"min\"), prop(\"max\"), prop(\"step\"));\n  }\n  return {\n    value: sliderValue,\n    dragging,\n    focused,\n    setValue(value) {\n      send({ type: \"SET_VALUE\", value });\n    },\n    getThumbValue(index) {\n      return sliderValue[index];\n    },\n    setThumbValue(index, value) {\n      send({ type: \"SET_VALUE\", index, value });\n    },\n    getValuePercent: getValuePercentFn,\n    getPercentValue: getPercentValueFn,\n    getThumbPercent(index) {\n      return getValuePercentFn(sliderValue[index]);\n    },\n    setThumbPercent(index, percent) {\n      const value = getPercentValueFn(percent);\n      send({ type: \"SET_VALUE\", index, value });\n    },\n    getThumbMin(index) {\n      return getRangeAtIndex(service, index).min;\n    },\n    getThumbMax(index) {\n      return getRangeAtIndex(service, index).max;\n    },\n    increment(index) {\n      send({ type: \"INCREMENT\", index });\n    },\n    decrement(index) {\n      send({ type: \"DECREMENT\", index });\n    },\n    focus() {\n      if (!interactive) return;\n      send({ type: \"FOCUS\", index: 0 });\n    },\n    getLabelProps() {\n      return normalize2.label({\n        ...parts.label.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-dragging\": dataAttr(dragging),\n        \"data-focus\": dataAttr(focused),\n        id: getLabelId(scope),\n        htmlFor: getHiddenInputId(scope, 0),\n        onClick(event) {\n          if (!interactive) return;\n          event.preventDefault();\n          getFirstThumbEl(scope)?.focus();\n        },\n        style: {\n          userSelect: \"none\",\n          WebkitUserSelect: \"none\"\n        }\n      });\n    },\n    getRootProps() {\n      return normalize2.element({\n        ...parts.root.attrs,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-dragging\": dataAttr(dragging),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-focus\": dataAttr(focused),\n        id: getRootId(scope),\n        dir: prop(\"dir\"),\n        style: getRootStyle(service)\n      });\n    },\n    getValueTextProps() {\n      return normalize2.element({\n        ...parts.valueText.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-focus\": dataAttr(focused),\n        id: getValueTextId(scope)\n      });\n    },\n    getTrackProps() {\n      return normalize2.element({\n        ...parts.track.attrs,\n        dir: prop(\"dir\"),\n        id: getTrackId(scope),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-dragging\": dataAttr(dragging),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-focus\": dataAttr(focused),\n        style: { position: \"relative\" }\n      });\n    },\n    getThumbProps(props2) {\n      const { index = 0, name } = props2;\n      const value = sliderValue[index];\n      const range = getRangeAtIndex(service, index);\n      const valueText = prop(\"getAriaValueText\")?.({ value, index });\n      const _ariaLabel = Array.isArray(ariaLabel) ? ariaLabel[index] : ariaLabel;\n      const _ariaLabelledBy = Array.isArray(ariaLabelledBy) ? ariaLabelledBy[index] : ariaLabelledBy;\n      return normalize2.element({\n        ...parts.thumb.attrs,\n        dir: prop(\"dir\"),\n        \"data-index\": index,\n        \"data-name\": name,\n        id: getThumbId(scope, index),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-focus\": dataAttr(focused && focusedIndex === index),\n        \"data-dragging\": dataAttr(dragging && focusedIndex === index),\n        draggable: false,\n        \"aria-disabled\": ariaAttr(disabled),\n        \"aria-label\": _ariaLabel,\n        \"aria-labelledby\": _ariaLabelledBy ?? getLabelId(scope),\n        \"aria-orientation\": prop(\"orientation\"),\n        \"aria-valuemax\": range.max,\n        \"aria-valuemin\": range.min,\n        \"aria-valuenow\": sliderValue[index],\n        \"aria-valuetext\": valueText,\n        role: \"slider\",\n        tabIndex: disabled ? void 0 : 0,\n        style: getThumbStyle(service, index),\n        onPointerDown(event) {\n          if (!interactive) return;\n          send({ type: \"THUMB_POINTER_DOWN\", index });\n          event.stopPropagation();\n        },\n        onBlur() {\n          if (!interactive) return;\n          send({ type: \"BLUR\" });\n        },\n        onFocus() {\n          if (!interactive) return;\n          send({ type: \"FOCUS\", index });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          const step = getEventStep(event) * prop(\"step\");\n          const keyMap = {\n            ArrowUp() {\n              if (isHorizontal) return;\n              send({ type: \"ARROW_INC\", step, src: \"ArrowUp\" });\n            },\n            ArrowDown() {\n              if (isHorizontal) return;\n              send({ type: \"ARROW_DEC\", step, src: \"ArrowDown\" });\n            },\n            ArrowLeft() {\n              if (isVertical) return;\n              send({ type: \"ARROW_DEC\", step, src: \"ArrowLeft\" });\n            },\n            ArrowRight() {\n              if (isVertical) return;\n              send({ type: \"ARROW_INC\", step, src: \"ArrowRight\" });\n            },\n            PageUp() {\n              send({ type: \"ARROW_INC\", step, src: \"PageUp\" });\n            },\n            PageDown() {\n              send({ type: \"ARROW_DEC\", step, src: \"PageDown\" });\n            },\n            Home() {\n              send({ type: \"HOME\" });\n            },\n            End() {\n              send({ type: \"END\" });\n            }\n          };\n          const key = getEventKey(event, {\n            dir: prop(\"dir\"),\n            orientation: prop(\"orientation\")\n          });\n          const exec = keyMap[key];\n          if (exec) {\n            exec(event);\n            event.preventDefault();\n            event.stopPropagation();\n          }\n        }\n      });\n    },\n    getHiddenInputProps(props2) {\n      const { index = 0, name } = props2;\n      return normalize2.input({\n        name: name ?? (prop(\"name\") ? prop(\"name\") + (sliderValue.length > 1 ? \"[]\" : \"\") : void 0),\n        form: prop(\"form\"),\n        type: \"text\",\n        hidden: true,\n        defaultValue: sliderValue[index],\n        id: getHiddenInputId(scope, index)\n      });\n    },\n    getRangeProps() {\n      return normalize2.element({\n        id: getRangeId(scope),\n        ...parts.range.attrs,\n        dir: prop(\"dir\"),\n        \"data-dragging\": dataAttr(dragging),\n        \"data-focus\": dataAttr(focused),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        style: getRangeStyle(service)\n      });\n    },\n    getControlProps() {\n      return normalize2.element({\n        ...parts.control.attrs,\n        dir: prop(\"dir\"),\n        id: getControlId(scope),\n        \"data-dragging\": dataAttr(dragging),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-focus\": dataAttr(focused),\n        style: getControlStyle(),\n        onPointerDown(event) {\n          if (!interactive) return;\n          if (!isLeftClick(event)) return;\n          if (isModifierKey(event)) return;\n          const point = getEventPoint(event);\n          send({ type: \"POINTER_DOWN\", point });\n          event.preventDefault();\n          event.stopPropagation();\n        }\n      });\n    },\n    getMarkerGroupProps() {\n      return normalize2.element({\n        ...parts.markerGroup.attrs,\n        role: \"presentation\",\n        dir: prop(\"dir\"),\n        \"aria-hidden\": true,\n        \"data-orientation\": prop(\"orientation\"),\n        style: getMarkerGroupStyle()\n      });\n    },\n    getMarkerProps(props2) {\n      const style = getMarkerStyle(service, props2.value);\n      let markerState;\n      if (props2.value < first(sliderValue)) {\n        markerState = \"under-value\";\n      } else if (props2.value > last(sliderValue)) {\n        markerState = \"over-value\";\n      } else {\n        markerState = \"at-value\";\n      }\n      return normalize2.element({\n        ...parts.marker.attrs,\n        id: getMarkerId(scope, props2.value),\n        role: \"presentation\",\n        dir: prop(\"dir\"),\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-value\": props2.value,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-state\": markerState,\n        style\n      });\n    },\n    getDraggingIndicatorProps(props2) {\n      const { index = 0 } = props2;\n      const isDragging = index === focusedIndex && dragging;\n      return normalize2.element({\n        ...parts.draggingIndicator.attrs,\n        role: \"presentation\",\n        dir: prop(\"dir\"),\n        hidden: !isDragging,\n        \"data-orientation\": prop(\"orientation\"),\n        \"data-state\": isDragging ? \"open\" : \"closed\",\n        style: getThumbStyle(service, index)\n      });\n    }\n  };\n}\nvar isEqualSize = (a, b) => {\n  return a?.width === b?.width && a?.height === b?.height;\n};\nvar normalize = (value, min, max, step, minStepsBetweenThumbs) => {\n  const ranges = getValueRanges(value, min, max, minStepsBetweenThumbs * step);\n  return ranges.map((range) => {\n    const snapValue = snapValueToStep(range.value, range.min, range.max, step);\n    return clampValue(snapValue, range.min, range.max);\n  });\n};\nvar machine = createMachine({\n  props({ props: props2 }) {\n    const min = props2.min ?? 0;\n    const max = props2.max ?? 100;\n    const step = props2.step ?? 1;\n    const defaultValue = props2.defaultValue ?? [min];\n    const minStepsBetweenThumbs = props2.minStepsBetweenThumbs ?? 0;\n    return {\n      dir: \"ltr\",\n      thumbAlignment: \"contain\",\n      origin: \"start\",\n      orientation: \"horizontal\",\n      minStepsBetweenThumbs,\n      ...props2,\n      defaultValue: normalize(defaultValue, min, max, step, minStepsBetweenThumbs),\n      value: props2.value ? normalize(props2.value, min, max, step, minStepsBetweenThumbs) : void 0,\n      max,\n      step,\n      min\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context({ prop, bindable, getContext }) {\n    return {\n      thumbSize: bindable(() => ({\n        defaultValue: prop(\"thumbSize\") || null\n      })),\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        isEqual,\n        hash(a) {\n          return a.join(\",\");\n        },\n        onChange(value) {\n          prop(\"onValueChange\")?.({ value });\n        }\n      })),\n      focusedIndex: bindable(() => ({\n        defaultValue: -1,\n        onChange(value) {\n          const ctx = getContext();\n          prop(\"onFocusChange\")?.({ focusedIndex: value, value: ctx.get(\"value\") });\n        }\n      })),\n      fieldsetDisabled: bindable(() => ({\n        defaultValue: false\n      }))\n    };\n  },\n  computed: {\n    isHorizontal: ({ prop }) => prop(\"orientation\") === \"horizontal\",\n    isVertical: ({ prop }) => prop(\"orientation\") === \"vertical\",\n    isRtl: ({ prop }) => prop(\"orientation\") === \"horizontal\" && prop(\"dir\") === \"rtl\",\n    isDisabled: ({ context, prop }) => !!prop(\"disabled\") || context.get(\"fieldsetDisabled\"),\n    isInteractive: ({ prop, computed }) => !(prop(\"readOnly\") || computed(\"isDisabled\")),\n    hasMeasuredThumbSize: ({ context }) => context.get(\"thumbSize\") != null,\n    valuePercent({ context, prop }) {\n      return context.get(\"value\").map((value) => 100 * getValuePercent(value, prop(\"min\"), prop(\"max\")));\n    }\n  },\n  watch({ track, action, context }) {\n    track([() => context.hash(\"value\")], () => {\n      action([\"syncInputElements\", \"dispatchChangeEvent\"]);\n    });\n  },\n  effects: [\"trackFormControlState\", \"trackThumbSize\"],\n  on: {\n    SET_VALUE: [\n      {\n        guard: \"hasIndex\",\n        actions: [\"setValueAtIndex\"]\n      },\n      {\n        actions: [\"setValue\"]\n      }\n    ],\n    INCREMENT: {\n      actions: [\"incrementThumbAtIndex\"]\n    },\n    DECREMENT: {\n      actions: [\"decrementThumbAtIndex\"]\n    }\n  },\n  states: {\n    idle: {\n      on: {\n        POINTER_DOWN: {\n          target: \"dragging\",\n          actions: [\"setClosestThumbIndex\", \"setPointerValue\", \"focusActiveThumb\"]\n        },\n        FOCUS: {\n          target: \"focus\",\n          actions: [\"setFocusedIndex\"]\n        },\n        THUMB_POINTER_DOWN: {\n          target: \"dragging\",\n          actions: [\"setFocusedIndex\", \"focusActiveThumb\"]\n        }\n      }\n    },\n    focus: {\n      entry: [\"focusActiveThumb\"],\n      on: {\n        POINTER_DOWN: {\n          target: \"dragging\",\n          actions: [\"setClosestThumbIndex\", \"setPointerValue\", \"focusActiveThumb\"]\n        },\n        THUMB_POINTER_DOWN: {\n          target: \"dragging\",\n          actions: [\"setFocusedIndex\", \"focusActiveThumb\"]\n        },\n        ARROW_DEC: {\n          actions: [\"decrementThumbAtIndex\", \"invokeOnChangeEnd\"]\n        },\n        ARROW_INC: {\n          actions: [\"incrementThumbAtIndex\", \"invokeOnChangeEnd\"]\n        },\n        HOME: {\n          actions: [\"setFocusedThumbToMin\", \"invokeOnChangeEnd\"]\n        },\n        END: {\n          actions: [\"setFocusedThumbToMax\", \"invokeOnChangeEnd\"]\n        },\n        BLUR: {\n          target: \"idle\",\n          actions: [\"clearFocusedIndex\"]\n        }\n      }\n    },\n    dragging: {\n      entry: [\"focusActiveThumb\"],\n      effects: [\"trackPointerMove\"],\n      on: {\n        POINTER_UP: {\n          target: \"focus\",\n          actions: [\"invokeOnChangeEnd\"]\n        },\n        POINTER_MOVE: {\n          actions: [\"setPointerValue\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      hasIndex: ({ event }) => event.index != null\n    },\n    effects: {\n      trackFormControlState({ context, scope }) {\n        return trackFormControl(getRootEl(scope), {\n          onFieldsetDisabledChange(disabled) {\n            context.set(\"fieldsetDisabled\", disabled);\n          },\n          onFormReset() {\n            context.set(\"value\", context.initial(\"value\"));\n          }\n        });\n      },\n      trackPointerMove({ scope, send }) {\n        return trackPointerMove(scope.getDoc(), {\n          onPointerMove(info) {\n            send({ type: \"POINTER_MOVE\", point: info.point });\n          },\n          onPointerUp() {\n            send({ type: \"POINTER_UP\" });\n          }\n        });\n      },\n      trackThumbSize({ context, scope, prop }) {\n        if (prop(\"thumbAlignment\") !== \"contain\" || prop(\"thumbSize\")) return;\n        return trackElementRect(getThumbEls(scope), {\n          box: \"border-box\",\n          measure(el) {\n            return getOffsetRect(el);\n          },\n          onEntry({ rects }) {\n            const size = pick(rects[0], [\"width\", \"height\"]);\n            if (isEqualSize(context.get(\"thumbSize\"), size)) return;\n            context.set(\"thumbSize\", size);\n          }\n        });\n      }\n    },\n    actions: {\n      dispatchChangeEvent({ context, scope }) {\n        dispatchChangeEvent(scope, context.get(\"value\"));\n      },\n      syncInputElements({ context, scope }) {\n        context.get(\"value\").forEach((value, index) => {\n          const inputEl = getHiddenInputEl(scope, index);\n          setElementValue(inputEl, value.toString());\n        });\n      },\n      invokeOnChangeEnd({ prop, context }) {\n        prop(\"onValueChangeEnd\")?.({ value: context.get(\"value\") });\n      },\n      setClosestThumbIndex(params) {\n        const { context, event } = params;\n        const pointValue = getPointValue(params, event.point);\n        if (pointValue == null) return;\n        const focusedIndex = getClosestIndex(params, pointValue);\n        context.set(\"focusedIndex\", focusedIndex);\n      },\n      setFocusedIndex({ context, event }) {\n        context.set(\"focusedIndex\", event.index);\n      },\n      clearFocusedIndex({ context }) {\n        context.set(\"focusedIndex\", -1);\n      },\n      setPointerValue(params) {\n        queueMicrotask(() => {\n          const { context, event } = params;\n          const pointValue = getPointValue(params, event.point);\n          if (pointValue == null) return;\n          const focusedIndex = context.get(\"focusedIndex\");\n          const value = constrainValue(params, pointValue, focusedIndex);\n          context.set(\"value\", (prev) => setValueAtIndex(prev, focusedIndex, value));\n        });\n      },\n      focusActiveThumb({ scope, context }) {\n        raf(() => {\n          const thumbEl = getThumbEl(scope, context.get(\"focusedIndex\"));\n          thumbEl?.focus({ preventScroll: true });\n        });\n      },\n      decrementThumbAtIndex(params) {\n        const { context, event } = params;\n        const value = decrement(params, event.index, event.step);\n        context.set(\"value\", value);\n      },\n      incrementThumbAtIndex(params) {\n        const { context, event } = params;\n        const value = increment(params, event.index, event.step);\n        context.set(\"value\", value);\n      },\n      setFocusedThumbToMin(params) {\n        const { context } = params;\n        const index = context.get(\"focusedIndex\");\n        const { min } = getRangeAtIndex(params, index);\n        context.set(\"value\", (prev) => setValueAtIndex(prev, index, min));\n      },\n      setFocusedThumbToMax(params) {\n        const { context } = params;\n        const index = context.get(\"focusedIndex\");\n        const { max } = getRangeAtIndex(params, index);\n        context.set(\"value\", (prev) => setValueAtIndex(prev, index, max));\n      },\n      setValueAtIndex(params) {\n        const { context, event } = params;\n        const value = constrainValue(params, event.value, event.index);\n        context.set(\"value\", (prev) => setValueAtIndex(prev, event.index, value));\n      },\n      setValue(params) {\n        const { context, event } = params;\n        const value = normalizeValues(params, event.value);\n        context.set(\"value\", value);\n      }\n    }\n  }\n});\nvar props = createProps()([\n  \"aria-label\",\n  \"aria-labelledby\",\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getAriaValueText\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"invalid\",\n  \"max\",\n  \"min\",\n  \"minStepsBetweenThumbs\",\n  \"name\",\n  \"onFocusChange\",\n  \"onValueChange\",\n  \"onValueChangeEnd\",\n  \"orientation\",\n  \"origin\",\n  \"readOnly\",\n  \"step\",\n  \"thumbAlignment\",\n  \"thumbAlignment\",\n  \"thumbSize\",\n  \"value\",\n  \"defaultValue\"\n]);\nvar splitProps = createSplitProps(props);\nvar thumbProps = createProps()([\"index\", \"name\"]);\nvar splitThumbProps = createSplitProps(thumbProps);\n\nexport { anatomy, connect, machine, props, splitProps, splitThumbProps, thumbProps };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}