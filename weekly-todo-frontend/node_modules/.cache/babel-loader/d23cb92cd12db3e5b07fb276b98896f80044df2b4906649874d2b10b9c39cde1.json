{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { ark } from '../factory.js';\nimport { useTagsInput } from './use-tags-input.js';\nimport { TagsInputProvider } from './use-tags-input-context.js';\nconst TagsInputRoot = forwardRef((props, ref) => {\n  const [useTagsInputProps, localProps] = createSplitProps()(props, [\"addOnPaste\", \"allowOverflow\", \"autoFocus\", \"blurBehavior\", \"defaultInputValue\", \"defaultValue\", \"delimiter\", \"disabled\", \"editable\", \"form\", \"id\", \"ids\", \"inputValue\", \"invalid\", \"max\", \"maxLength\", \"name\", \"onFocusOutside\", \"onHighlightChange\", \"onInputValueChange\", \"onInteractOutside\", \"onPointerDownOutside\", \"onValueChange\", \"onValueInvalid\", \"readOnly\", \"required\", \"translations\", \"validate\", \"value\"]);\n  const tagsInput = useTagsInput(useTagsInputProps);\n  const mergedProps = mergeProps(tagsInput.getRootProps(), localProps);\n  return /* @__PURE__ */jsx(TagsInputProvider, {\n    value: tagsInput,\n    children: /* @__PURE__ */jsx(ark.div, {\n      ...mergedProps,\n      ref\n    })\n  });\n});\nTagsInputRoot.displayName = \"TagsInputRoot\";\nexport { TagsInputRoot };","map":{"version":3,"names":["jsx","mergeProps","forwardRef","createSplitProps","ark","useTagsInput","TagsInputProvider","TagsInputRoot","props","ref","useTagsInputProps","localProps","tagsInput","mergedProps","getRootProps","value","children","div","displayName"],"sources":["C:/Users/tuanl/weekly-todo-frontend/node_modules/@chakra-ui/react/node_modules/@ark-ui/react/dist/components/tags-input/tags-input-root.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { ark } from '../factory.js';\nimport { useTagsInput } from './use-tags-input.js';\nimport { TagsInputProvider } from './use-tags-input-context.js';\n\nconst TagsInputRoot = forwardRef((props, ref) => {\n  const [useTagsInputProps, localProps] = createSplitProps()(props, [\n    \"addOnPaste\",\n    \"allowOverflow\",\n    \"autoFocus\",\n    \"blurBehavior\",\n    \"defaultInputValue\",\n    \"defaultValue\",\n    \"delimiter\",\n    \"disabled\",\n    \"editable\",\n    \"form\",\n    \"id\",\n    \"ids\",\n    \"inputValue\",\n    \"invalid\",\n    \"max\",\n    \"maxLength\",\n    \"name\",\n    \"onFocusOutside\",\n    \"onHighlightChange\",\n    \"onInputValueChange\",\n    \"onInteractOutside\",\n    \"onPointerDownOutside\",\n    \"onValueChange\",\n    \"onValueInvalid\",\n    \"readOnly\",\n    \"required\",\n    \"translations\",\n    \"validate\",\n    \"value\"\n  ]);\n  const tagsInput = useTagsInput(useTagsInputProps);\n  const mergedProps = mergeProps(tagsInput.getRootProps(), localProps);\n  return /* @__PURE__ */ jsx(TagsInputProvider, { value: tagsInput, children: /* @__PURE__ */ jsx(ark.div, { ...mergedProps, ref }) });\n});\nTagsInputRoot.displayName = \"TagsInputRoot\";\n\nexport { TagsInputRoot };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,gBAAgB,QAAQ,mCAAmC;AACpE,SAASC,GAAG,QAAQ,eAAe;AACnC,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,iBAAiB,QAAQ,6BAA6B;AAE/D,MAAMC,aAAa,GAAGL,UAAU,CAAC,CAACM,KAAK,EAAEC,GAAG,KAAK;EAC/C,MAAM,CAACC,iBAAiB,EAAEC,UAAU,CAAC,GAAGR,gBAAgB,CAAC,CAAC,CAACK,KAAK,EAAE,CAChE,YAAY,EACZ,eAAe,EACf,WAAW,EACX,cAAc,EACd,mBAAmB,EACnB,cAAc,EACd,WAAW,EACX,UAAU,EACV,UAAU,EACV,MAAM,EACN,IAAI,EACJ,KAAK,EACL,YAAY,EACZ,SAAS,EACT,KAAK,EACL,WAAW,EACX,MAAM,EACN,gBAAgB,EAChB,mBAAmB,EACnB,oBAAoB,EACpB,mBAAmB,EACnB,sBAAsB,EACtB,eAAe,EACf,gBAAgB,EAChB,UAAU,EACV,UAAU,EACV,cAAc,EACd,UAAU,EACV,OAAO,CACR,CAAC;EACF,MAAMI,SAAS,GAAGP,YAAY,CAACK,iBAAiB,CAAC;EACjD,MAAMG,WAAW,GAAGZ,UAAU,CAACW,SAAS,CAACE,YAAY,CAAC,CAAC,EAAEH,UAAU,CAAC;EACpE,OAAO,eAAgBX,GAAG,CAACM,iBAAiB,EAAE;IAAES,KAAK,EAAEH,SAAS;IAAEI,QAAQ,EAAE,eAAgBhB,GAAG,CAACI,GAAG,CAACa,GAAG,EAAE;MAAE,GAAGJ,WAAW;MAAEJ;IAAI,CAAC;EAAE,CAAC,CAAC;AACtI,CAAC,CAAC;AACFF,aAAa,CAACW,WAAW,GAAG,eAAe;AAE3C,SAASX,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}