{"ast":null,"code":"import { createAnatomy } from '@zag-js/anatomy';\nimport { addDomEvent, getOverflowAncestors, isComposingEvent, dataAttr } from '@zag-js/dom-query';\nimport { trackFocusVisible, isFocusVisible } from '@zag-js/focus-visible';\nimport { getPlacement, getPlacementStyles } from '@zag-js/popper';\nimport { proxy, subscribe } from '@zag-js/store';\nimport { createGuards, createMachine } from '@zag-js/core';\nimport { createProps } from '@zag-js/types';\nimport { createSplitProps } from '@zag-js/utils';\n\n// src/tooltip.anatomy.ts\nvar anatomy = createAnatomy(\"tooltip\").parts(\"trigger\", \"arrow\", \"arrowTip\", \"positioner\", \"content\");\nvar parts = anatomy.build();\n\n// src/tooltip.dom.ts\nvar getTriggerId = scope => scope.ids?.trigger ?? `tooltip:${scope.id}:trigger`;\nvar getContentId = scope => scope.ids?.content ?? `tooltip:${scope.id}:content`;\nvar getArrowId = scope => scope.ids?.arrow ?? `tooltip:${scope.id}:arrow`;\nvar getPositionerId = scope => scope.ids?.positioner ?? `tooltip:${scope.id}:popper`;\nvar getTriggerEl = scope => scope.getById(getTriggerId(scope));\nvar getPositionerEl = scope => scope.getById(getPositionerId(scope));\nvar store = proxy({\n  id: null\n});\n\n// src/tooltip.connect.ts\nfunction connect(service, normalize) {\n  const {\n    state,\n    context,\n    send,\n    scope,\n    prop,\n    event: _event\n  } = service;\n  const id = prop(\"id\");\n  const hasAriaLabel = !!prop(\"aria-label\");\n  const open = state.matches(\"open\", \"closing\");\n  const triggerId = getTriggerId(scope);\n  const contentId = getContentId(scope);\n  const disabled = prop(\"disabled\");\n  const popperStyles = getPlacementStyles({\n    ...prop(\"positioning\"),\n    placement: context.get(\"currentPlacement\")\n  });\n  return {\n    open,\n    setOpen(nextOpen) {\n      const open2 = state.matches(\"open\", \"closing\");\n      if (open2 === nextOpen) return;\n      send({\n        type: nextOpen ? \"open\" : \"close\"\n      });\n    },\n    reposition(options = {}) {\n      send({\n        type: \"positioning.set\",\n        options\n      });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        id: triggerId,\n        dir: prop(\"dir\"),\n        \"data-expanded\": dataAttr(open),\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-describedby\": open ? contentId : void 0,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          if (!prop(\"closeOnClick\")) return;\n          send({\n            type: \"close\",\n            src: \"trigger.click\"\n          });\n        },\n        onFocus(event) {\n          queueMicrotask(() => {\n            if (event.defaultPrevented) return;\n            if (disabled) return;\n            if (_event.src === \"trigger.pointerdown\") return;\n            if (!isFocusVisible()) return;\n            send({\n              type: \"open\",\n              src: \"trigger.focus\"\n            });\n          });\n        },\n        onBlur(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          if (id === store.id) {\n            send({\n              type: \"close\",\n              src: \"trigger.blur\"\n            });\n          }\n        },\n        onPointerDown(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          if (!prop(\"closeOnPointerDown\")) return;\n          if (id === store.id) {\n            send({\n              type: \"close\",\n              src: \"trigger.pointerdown\"\n            });\n          }\n        },\n        onPointerMove(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          if (event.pointerType === \"touch\") return;\n          send({\n            type: \"pointer.move\"\n          });\n        },\n        onPointerLeave() {\n          if (disabled) return;\n          send({\n            type: \"pointer.leave\"\n          });\n        },\n        onPointerCancel() {\n          if (disabled) return;\n          send({\n            type: \"pointer.leave\"\n          });\n        }\n      });\n    },\n    getArrowProps() {\n      return normalize.element({\n        id: getArrowId(scope),\n        ...parts.arrow.attrs,\n        dir: prop(\"dir\"),\n        style: popperStyles.arrow\n      });\n    },\n    getArrowTipProps() {\n      return normalize.element({\n        ...parts.arrowTip.attrs,\n        dir: prop(\"dir\"),\n        style: popperStyles.arrowTip\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        id: getPositionerId(scope),\n        ...parts.positioner.attrs,\n        dir: prop(\"dir\"),\n        style: popperStyles.floating\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: prop(\"dir\"),\n        hidden: !open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        role: hasAriaLabel ? void 0 : \"tooltip\",\n        id: hasAriaLabel ? void 0 : contentId,\n        \"data-placement\": context.get(\"currentPlacement\"),\n        onPointerEnter() {\n          send({\n            type: \"content.pointer.move\"\n          });\n        },\n        onPointerLeave() {\n          send({\n            type: \"content.pointer.leave\"\n          });\n        },\n        style: {\n          pointerEvents: prop(\"interactive\") ? \"auto\" : \"none\"\n        }\n      });\n    }\n  };\n}\nvar {\n  and,\n  not\n} = createGuards();\nvar machine = createMachine({\n  initialState: ({\n    prop\n  }) => {\n    const open = prop(\"open\") || prop(\"defaultOpen\");\n    return open ? \"open\" : \"closed\";\n  },\n  props({\n    props: props2\n  }) {\n    return {\n      id: \"x\",\n      openDelay: 1e3,\n      closeDelay: 500,\n      closeOnPointerDown: true,\n      closeOnEscape: true,\n      interactive: false,\n      closeOnScroll: true,\n      closeOnClick: true,\n      disabled: false,\n      ...props2,\n      positioning: {\n        placement: \"bottom\",\n        ...props2.positioning\n      }\n    };\n  },\n  effects: [\"trackFocusVisible\", \"trackStore\"],\n  context: ({\n    bindable\n  }) => ({\n    currentPlacement: bindable(() => ({\n      defaultValue: void 0\n    })),\n    hasPointerMoveOpened: bindable(() => ({\n      defaultValue: false\n    }))\n  }),\n  watch({\n    track,\n    action,\n    prop\n  }) {\n    track([() => prop(\"disabled\")], () => {\n      action([\"closeIfDisabled\"]);\n    });\n    track([() => prop(\"open\")], () => {\n      action([\"toggleVisibility\"]);\n    });\n  },\n  states: {\n    closed: {\n      entry: [\"clearGlobalId\"],\n      on: {\n        \"controlled.open\": {\n          target: \"open\"\n        },\n        open: [{\n          guard: \"isOpenControlled\",\n          actions: [\"invokeOnOpen\"]\n        }, {\n          target: \"open\",\n          actions: [\"invokeOnOpen\"]\n        }],\n        \"pointer.leave\": {\n          actions: [\"clearPointerMoveOpened\"]\n        },\n        \"pointer.move\": [{\n          guard: and(\"noVisibleTooltip\", not(\"hasPointerMoveOpened\")),\n          target: \"opening\"\n        }, {\n          guard: not(\"hasPointerMoveOpened\"),\n          target: \"open\",\n          actions: [\"setPointerMoveOpened\", \"invokeOnOpen\"]\n        }]\n      }\n    },\n    opening: {\n      effects: [\"trackScroll\", \"trackPointerlockChange\", \"waitForOpenDelay\"],\n      on: {\n        \"after.openDelay\": [{\n          guard: \"isOpenControlled\",\n          actions: [\"setPointerMoveOpened\", \"invokeOnOpen\"]\n        }, {\n          target: \"open\",\n          actions: [\"setPointerMoveOpened\", \"invokeOnOpen\"]\n        }],\n        \"controlled.open\": {\n          target: \"open\"\n        },\n        \"controlled.close\": {\n          target: \"closed\"\n        },\n        open: [{\n          guard: \"isOpenControlled\",\n          actions: [\"invokeOnOpen\"]\n        }, {\n          target: \"open\",\n          actions: [\"invokeOnOpen\"]\n        }],\n        \"pointer.leave\": [{\n          guard: \"isOpenControlled\",\n          // We trigger toggleVisibility manually since the `ctx.open` has not changed yet (at this point)\n          actions: [\"clearPointerMoveOpened\", \"invokeOnClose\", \"toggleVisibility\"]\n        }, {\n          target: \"closed\",\n          actions: [\"clearPointerMoveOpened\", \"invokeOnClose\"]\n        }],\n        close: [{\n          guard: \"isOpenControlled\",\n          // We trigger toggleVisibility manually since the `ctx.open` has not changed yet (at this point)\n          actions: [\"invokeOnClose\", \"toggleVisibility\"]\n        }, {\n          target: \"closed\",\n          actions: [\"invokeOnClose\"]\n        }]\n      }\n    },\n    open: {\n      effects: [\"trackEscapeKey\", \"trackScroll\", \"trackPointerlockChange\", \"trackPositioning\"],\n      entry: [\"setGlobalId\"],\n      on: {\n        \"controlled.close\": {\n          target: \"closed\"\n        },\n        close: [{\n          guard: \"isOpenControlled\",\n          actions: [\"invokeOnClose\"]\n        }, {\n          target: \"closed\",\n          actions: [\"invokeOnClose\"]\n        }],\n        \"pointer.leave\": [{\n          guard: \"isVisible\",\n          target: \"closing\",\n          actions: [\"clearPointerMoveOpened\"]\n        },\n        // == group ==\n        {\n          guard: \"isOpenControlled\",\n          actions: [\"clearPointerMoveOpened\", \"invokeOnClose\"]\n        }, {\n          target: \"closed\",\n          actions: [\"clearPointerMoveOpened\", \"invokeOnClose\"]\n        }],\n        \"content.pointer.leave\": {\n          guard: \"isInteractive\",\n          target: \"closing\"\n        },\n        \"positioning.set\": {\n          actions: [\"reposition\"]\n        }\n      }\n    },\n    closing: {\n      effects: [\"trackPositioning\", \"waitForCloseDelay\"],\n      on: {\n        \"after.closeDelay\": [{\n          guard: \"isOpenControlled\",\n          actions: [\"invokeOnClose\"]\n        }, {\n          target: \"closed\",\n          actions: [\"invokeOnClose\"]\n        }],\n        \"controlled.close\": {\n          target: \"closed\"\n        },\n        \"controlled.open\": {\n          target: \"open\"\n        },\n        close: [{\n          guard: \"isOpenControlled\",\n          actions: [\"invokeOnClose\"]\n        }, {\n          target: \"closed\",\n          actions: [\"invokeOnClose\"]\n        }],\n        \"pointer.move\": [{\n          guard: \"isOpenControlled\",\n          // We trigger toggleVisibility manually since the `ctx.open` has not changed yet (at this point)\n          actions: [\"setPointerMoveOpened\", \"invokeOnOpen\", \"toggleVisibility\"]\n        }, {\n          target: \"open\",\n          actions: [\"setPointerMoveOpened\", \"invokeOnOpen\"]\n        }],\n        \"content.pointer.move\": {\n          guard: \"isInteractive\",\n          target: \"open\"\n        },\n        \"positioning.set\": {\n          actions: [\"reposition\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      noVisibleTooltip: () => store.id === null,\n      isVisible: ({\n        prop\n      }) => prop(\"id\") === store.id,\n      isInteractive: ({\n        prop\n      }) => !!prop(\"interactive\"),\n      hasPointerMoveOpened: ({\n        context\n      }) => context.get(\"hasPointerMoveOpened\"),\n      isOpenControlled: ({\n        prop\n      }) => prop(\"open\") !== void 0\n    },\n    actions: {\n      setGlobalId: ({\n        prop\n      }) => {\n        store.id = prop(\"id\");\n      },\n      clearGlobalId: ({\n        prop\n      }) => {\n        if (prop(\"id\") === store.id) {\n          store.id = null;\n        }\n      },\n      invokeOnOpen: ({\n        prop\n      }) => {\n        prop(\"onOpenChange\")?.({\n          open: true\n        });\n      },\n      invokeOnClose: ({\n        prop\n      }) => {\n        prop(\"onOpenChange\")?.({\n          open: false\n        });\n      },\n      closeIfDisabled: ({\n        prop,\n        send\n      }) => {\n        if (!prop(\"disabled\")) return;\n        send({\n          type: \"close\",\n          src: \"disabled.change\"\n        });\n      },\n      reposition: ({\n        context,\n        event,\n        prop,\n        scope\n      }) => {\n        if (event.type !== \"positioning.set\") return;\n        const getPositionerEl2 = () => getPositionerEl(scope);\n        return getPlacement(getTriggerEl(scope), getPositionerEl2, {\n          ...prop(\"positioning\"),\n          ...event.options,\n          defer: true,\n          listeners: false,\n          onComplete(data) {\n            context.set(\"currentPlacement\", data.placement);\n          }\n        });\n      },\n      toggleVisibility: ({\n        prop,\n        event,\n        send\n      }) => {\n        queueMicrotask(() => {\n          send({\n            type: prop(\"open\") ? \"controlled.open\" : \"controlled.close\",\n            previousEvent: event\n          });\n        });\n      },\n      setPointerMoveOpened: ({\n        context\n      }) => {\n        context.set(\"hasPointerMoveOpened\", true);\n      },\n      clearPointerMoveOpened: ({\n        context\n      }) => {\n        context.set(\"hasPointerMoveOpened\", false);\n      }\n    },\n    effects: {\n      trackFocusVisible: ({\n        scope\n      }) => {\n        return trackFocusVisible({\n          root: scope.getRootNode?.()\n        });\n      },\n      trackPositioning: ({\n        context,\n        prop,\n        scope\n      }) => {\n        if (!context.get(\"currentPlacement\")) {\n          context.set(\"currentPlacement\", prop(\"positioning\").placement);\n        }\n        const getPositionerEl2 = () => getPositionerEl(scope);\n        return getPlacement(getTriggerEl(scope), getPositionerEl2, {\n          ...prop(\"positioning\"),\n          defer: true,\n          onComplete(data) {\n            context.set(\"currentPlacement\", data.placement);\n          }\n        });\n      },\n      trackPointerlockChange: ({\n        send,\n        scope\n      }) => {\n        const doc = scope.getDoc();\n        const onChange = () => send({\n          type: \"close\",\n          src: \"pointerlock:change\"\n        });\n        return addDomEvent(doc, \"pointerlockchange\", onChange, false);\n      },\n      trackScroll: ({\n        send,\n        prop,\n        scope\n      }) => {\n        if (!prop(\"closeOnScroll\")) return;\n        const triggerEl = getTriggerEl(scope);\n        if (!triggerEl) return;\n        const overflowParents = getOverflowAncestors(triggerEl);\n        const cleanups = overflowParents.map(overflowParent => {\n          const onScroll = () => {\n            send({\n              type: \"close\",\n              src: \"scroll\"\n            });\n          };\n          return addDomEvent(overflowParent, \"scroll\", onScroll, {\n            passive: true,\n            capture: true\n          });\n        });\n        return () => {\n          cleanups.forEach(fn => fn?.());\n        };\n      },\n      trackStore: ({\n        prop,\n        send\n      }) => {\n        let cleanup;\n        queueMicrotask(() => {\n          cleanup = subscribe(store, () => {\n            if (store.id !== prop(\"id\")) {\n              send({\n                type: \"close\",\n                src: \"id.change\"\n              });\n            }\n          });\n        });\n        return () => cleanup?.();\n      },\n      trackEscapeKey: ({\n        send,\n        prop\n      }) => {\n        if (!prop(\"closeOnEscape\")) return;\n        const onKeyDown = event => {\n          if (isComposingEvent(event)) return;\n          if (event.key !== \"Escape\") return;\n          event.stopPropagation();\n          send({\n            type: \"close\",\n            src: \"keydown.escape\"\n          });\n        };\n        return addDomEvent(document, \"keydown\", onKeyDown, true);\n      },\n      waitForOpenDelay: ({\n        send,\n        prop\n      }) => {\n        const id = setTimeout(() => {\n          send({\n            type: \"after.openDelay\"\n          });\n        }, prop(\"openDelay\"));\n        return () => clearTimeout(id);\n      },\n      waitForCloseDelay: ({\n        send,\n        prop\n      }) => {\n        const id = setTimeout(() => {\n          send({\n            type: \"after.closeDelay\"\n          });\n        }, prop(\"closeDelay\"));\n        return () => clearTimeout(id);\n      }\n    }\n  }\n});\nvar props = createProps()([\"aria-label\", \"closeDelay\", \"closeOnEscape\", \"closeOnPointerDown\", \"closeOnScroll\", \"closeOnClick\", \"dir\", \"disabled\", \"getRootNode\", \"id\", \"ids\", \"interactive\", \"onOpenChange\", \"defaultOpen\", \"open\", \"openDelay\", \"positioning\"]);\nvar splitProps = createSplitProps(props);\nexport { anatomy, connect, machine, props, splitProps };","map":{"version":3,"names":["createAnatomy","addDomEvent","getOverflowAncestors","isComposingEvent","dataAttr","trackFocusVisible","isFocusVisible","getPlacement","getPlacementStyles","proxy","subscribe","createGuards","createMachine","createProps","createSplitProps","anatomy","parts","build","getTriggerId","scope","ids","trigger","id","getContentId","content","getArrowId","arrow","getPositionerId","positioner","getTriggerEl","getById","getPositionerEl","store","connect","service","normalize","state","context","send","prop","event","_event","hasAriaLabel","open","matches","triggerId","contentId","disabled","popperStyles","placement","get","setOpen","nextOpen","open2","type","reposition","options","getTriggerProps","button","attrs","dir","onClick","defaultPrevented","src","onFocus","queueMicrotask","onBlur","onPointerDown","onPointerMove","pointerType","onPointerLeave","onPointerCancel","getArrowProps","element","style","getArrowTipProps","arrowTip","getPositionerProps","floating","getContentProps","hidden","role","onPointerEnter","pointerEvents","and","not","machine","initialState","props","props2","openDelay","closeDelay","closeOnPointerDown","closeOnEscape","interactive","closeOnScroll","closeOnClick","positioning","effects","bindable","currentPlacement","defaultValue","hasPointerMoveOpened","watch","track","action","states","closed","entry","on","target","guard","actions","opening","close","closing","implementations","guards","noVisibleTooltip","isVisible","isInteractive","isOpenControlled","setGlobalId","clearGlobalId","invokeOnOpen","invokeOnClose","closeIfDisabled","getPositionerEl2","defer","listeners","onComplete","data","set","toggleVisibility","previousEvent","setPointerMoveOpened","clearPointerMoveOpened","root","getRootNode","trackPositioning","trackPointerlockChange","doc","getDoc","onChange","trackScroll","triggerEl","overflowParents","cleanups","map","overflowParent","onScroll","passive","capture","forEach","fn","trackStore","cleanup","trackEscapeKey","onKeyDown","key","stopPropagation","document","waitForOpenDelay","setTimeout","clearTimeout","waitForCloseDelay","splitProps"],"sources":["C:/Users/tuanl/weekly-todo-frontend/node_modules/@zag-js/tooltip/dist/index.mjs"],"sourcesContent":["import { createAnatomy } from '@zag-js/anatomy';\nimport { addDomEvent, getOverflowAncestors, isComposingEvent, dataAttr } from '@zag-js/dom-query';\nimport { trackFocusVisible, isFocusVisible } from '@zag-js/focus-visible';\nimport { getPlacement, getPlacementStyles } from '@zag-js/popper';\nimport { proxy, subscribe } from '@zag-js/store';\nimport { createGuards, createMachine } from '@zag-js/core';\nimport { createProps } from '@zag-js/types';\nimport { createSplitProps } from '@zag-js/utils';\n\n// src/tooltip.anatomy.ts\nvar anatomy = createAnatomy(\"tooltip\").parts(\"trigger\", \"arrow\", \"arrowTip\", \"positioner\", \"content\");\nvar parts = anatomy.build();\n\n// src/tooltip.dom.ts\nvar getTriggerId = (scope) => scope.ids?.trigger ?? `tooltip:${scope.id}:trigger`;\nvar getContentId = (scope) => scope.ids?.content ?? `tooltip:${scope.id}:content`;\nvar getArrowId = (scope) => scope.ids?.arrow ?? `tooltip:${scope.id}:arrow`;\nvar getPositionerId = (scope) => scope.ids?.positioner ?? `tooltip:${scope.id}:popper`;\nvar getTriggerEl = (scope) => scope.getById(getTriggerId(scope));\nvar getPositionerEl = (scope) => scope.getById(getPositionerId(scope));\nvar store = proxy({ id: null });\n\n// src/tooltip.connect.ts\nfunction connect(service, normalize) {\n  const { state, context, send, scope, prop, event: _event } = service;\n  const id = prop(\"id\");\n  const hasAriaLabel = !!prop(\"aria-label\");\n  const open = state.matches(\"open\", \"closing\");\n  const triggerId = getTriggerId(scope);\n  const contentId = getContentId(scope);\n  const disabled = prop(\"disabled\");\n  const popperStyles = getPlacementStyles({\n    ...prop(\"positioning\"),\n    placement: context.get(\"currentPlacement\")\n  });\n  return {\n    open,\n    setOpen(nextOpen) {\n      const open2 = state.matches(\"open\", \"closing\");\n      if (open2 === nextOpen) return;\n      send({ type: nextOpen ? \"open\" : \"close\" });\n    },\n    reposition(options = {}) {\n      send({ type: \"positioning.set\", options });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        id: triggerId,\n        dir: prop(\"dir\"),\n        \"data-expanded\": dataAttr(open),\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-describedby\": open ? contentId : void 0,\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          if (!prop(\"closeOnClick\")) return;\n          send({ type: \"close\", src: \"trigger.click\" });\n        },\n        onFocus(event) {\n          queueMicrotask(() => {\n            if (event.defaultPrevented) return;\n            if (disabled) return;\n            if (_event.src === \"trigger.pointerdown\") return;\n            if (!isFocusVisible()) return;\n            send({ type: \"open\", src: \"trigger.focus\" });\n          });\n        },\n        onBlur(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          if (id === store.id) {\n            send({ type: \"close\", src: \"trigger.blur\" });\n          }\n        },\n        onPointerDown(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          if (!prop(\"closeOnPointerDown\")) return;\n          if (id === store.id) {\n            send({ type: \"close\", src: \"trigger.pointerdown\" });\n          }\n        },\n        onPointerMove(event) {\n          if (event.defaultPrevented) return;\n          if (disabled) return;\n          if (event.pointerType === \"touch\") return;\n          send({ type: \"pointer.move\" });\n        },\n        onPointerLeave() {\n          if (disabled) return;\n          send({ type: \"pointer.leave\" });\n        },\n        onPointerCancel() {\n          if (disabled) return;\n          send({ type: \"pointer.leave\" });\n        }\n      });\n    },\n    getArrowProps() {\n      return normalize.element({\n        id: getArrowId(scope),\n        ...parts.arrow.attrs,\n        dir: prop(\"dir\"),\n        style: popperStyles.arrow\n      });\n    },\n    getArrowTipProps() {\n      return normalize.element({\n        ...parts.arrowTip.attrs,\n        dir: prop(\"dir\"),\n        style: popperStyles.arrowTip\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        id: getPositionerId(scope),\n        ...parts.positioner.attrs,\n        dir: prop(\"dir\"),\n        style: popperStyles.floating\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: prop(\"dir\"),\n        hidden: !open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        role: hasAriaLabel ? void 0 : \"tooltip\",\n        id: hasAriaLabel ? void 0 : contentId,\n        \"data-placement\": context.get(\"currentPlacement\"),\n        onPointerEnter() {\n          send({ type: \"content.pointer.move\" });\n        },\n        onPointerLeave() {\n          send({ type: \"content.pointer.leave\" });\n        },\n        style: {\n          pointerEvents: prop(\"interactive\") ? \"auto\" : \"none\"\n        }\n      });\n    }\n  };\n}\nvar { and, not } = createGuards();\nvar machine = createMachine({\n  initialState: ({ prop }) => {\n    const open = prop(\"open\") || prop(\"defaultOpen\");\n    return open ? \"open\" : \"closed\";\n  },\n  props({ props: props2 }) {\n    return {\n      id: \"x\",\n      openDelay: 1e3,\n      closeDelay: 500,\n      closeOnPointerDown: true,\n      closeOnEscape: true,\n      interactive: false,\n      closeOnScroll: true,\n      closeOnClick: true,\n      disabled: false,\n      ...props2,\n      positioning: {\n        placement: \"bottom\",\n        ...props2.positioning\n      }\n    };\n  },\n  effects: [\"trackFocusVisible\", \"trackStore\"],\n  context: ({ bindable }) => ({\n    currentPlacement: bindable(() => ({ defaultValue: void 0 })),\n    hasPointerMoveOpened: bindable(() => ({ defaultValue: false }))\n  }),\n  watch({ track, action, prop }) {\n    track([() => prop(\"disabled\")], () => {\n      action([\"closeIfDisabled\"]);\n    });\n    track([() => prop(\"open\")], () => {\n      action([\"toggleVisibility\"]);\n    });\n  },\n  states: {\n    closed: {\n      entry: [\"clearGlobalId\"],\n      on: {\n        \"controlled.open\": {\n          target: \"open\"\n        },\n        open: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\"]\n          }\n        ],\n        \"pointer.leave\": {\n          actions: [\"clearPointerMoveOpened\"]\n        },\n        \"pointer.move\": [\n          {\n            guard: and(\"noVisibleTooltip\", not(\"hasPointerMoveOpened\")),\n            target: \"opening\"\n          },\n          {\n            guard: not(\"hasPointerMoveOpened\"),\n            target: \"open\",\n            actions: [\"setPointerMoveOpened\", \"invokeOnOpen\"]\n          }\n        ]\n      }\n    },\n    opening: {\n      effects: [\"trackScroll\", \"trackPointerlockChange\", \"waitForOpenDelay\"],\n      on: {\n        \"after.openDelay\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"setPointerMoveOpened\", \"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"setPointerMoveOpened\", \"invokeOnOpen\"]\n          }\n        ],\n        \"controlled.open\": {\n          target: \"open\"\n        },\n        \"controlled.close\": {\n          target: \"closed\"\n        },\n        open: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\"]\n          }\n        ],\n        \"pointer.leave\": [\n          {\n            guard: \"isOpenControlled\",\n            // We trigger toggleVisibility manually since the `ctx.open` has not changed yet (at this point)\n            actions: [\"clearPointerMoveOpened\", \"invokeOnClose\", \"toggleVisibility\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"clearPointerMoveOpened\", \"invokeOnClose\"]\n          }\n        ],\n        close: [\n          {\n            guard: \"isOpenControlled\",\n            // We trigger toggleVisibility manually since the `ctx.open` has not changed yet (at this point)\n            actions: [\"invokeOnClose\", \"toggleVisibility\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ]\n      }\n    },\n    open: {\n      effects: [\"trackEscapeKey\", \"trackScroll\", \"trackPointerlockChange\", \"trackPositioning\"],\n      entry: [\"setGlobalId\"],\n      on: {\n        \"controlled.close\": {\n          target: \"closed\"\n        },\n        close: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"pointer.leave\": [\n          {\n            guard: \"isVisible\",\n            target: \"closing\",\n            actions: [\"clearPointerMoveOpened\"]\n          },\n          // == group ==\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"clearPointerMoveOpened\", \"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"clearPointerMoveOpened\", \"invokeOnClose\"]\n          }\n        ],\n        \"content.pointer.leave\": {\n          guard: \"isInteractive\",\n          target: \"closing\"\n        },\n        \"positioning.set\": {\n          actions: [\"reposition\"]\n        }\n      }\n    },\n    closing: {\n      effects: [\"trackPositioning\", \"waitForCloseDelay\"],\n      on: {\n        \"after.closeDelay\": [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"controlled.close\": {\n          target: \"closed\"\n        },\n        \"controlled.open\": {\n          target: \"open\"\n        },\n        close: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        \"pointer.move\": [\n          {\n            guard: \"isOpenControlled\",\n            // We trigger toggleVisibility manually since the `ctx.open` has not changed yet (at this point)\n            actions: [\"setPointerMoveOpened\", \"invokeOnOpen\", \"toggleVisibility\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"setPointerMoveOpened\", \"invokeOnOpen\"]\n          }\n        ],\n        \"content.pointer.move\": {\n          guard: \"isInteractive\",\n          target: \"open\"\n        },\n        \"positioning.set\": {\n          actions: [\"reposition\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      noVisibleTooltip: () => store.id === null,\n      isVisible: ({ prop }) => prop(\"id\") === store.id,\n      isInteractive: ({ prop }) => !!prop(\"interactive\"),\n      hasPointerMoveOpened: ({ context }) => context.get(\"hasPointerMoveOpened\"),\n      isOpenControlled: ({ prop }) => prop(\"open\") !== void 0\n    },\n    actions: {\n      setGlobalId: ({ prop }) => {\n        store.id = prop(\"id\");\n      },\n      clearGlobalId: ({ prop }) => {\n        if (prop(\"id\") === store.id) {\n          store.id = null;\n        }\n      },\n      invokeOnOpen: ({ prop }) => {\n        prop(\"onOpenChange\")?.({ open: true });\n      },\n      invokeOnClose: ({ prop }) => {\n        prop(\"onOpenChange\")?.({ open: false });\n      },\n      closeIfDisabled: ({ prop, send }) => {\n        if (!prop(\"disabled\")) return;\n        send({ type: \"close\", src: \"disabled.change\" });\n      },\n      reposition: ({ context, event, prop, scope }) => {\n        if (event.type !== \"positioning.set\") return;\n        const getPositionerEl2 = () => getPositionerEl(scope);\n        return getPlacement(getTriggerEl(scope), getPositionerEl2, {\n          ...prop(\"positioning\"),\n          ...event.options,\n          defer: true,\n          listeners: false,\n          onComplete(data) {\n            context.set(\"currentPlacement\", data.placement);\n          }\n        });\n      },\n      toggleVisibility: ({ prop, event, send }) => {\n        queueMicrotask(() => {\n          send({\n            type: prop(\"open\") ? \"controlled.open\" : \"controlled.close\",\n            previousEvent: event\n          });\n        });\n      },\n      setPointerMoveOpened: ({ context }) => {\n        context.set(\"hasPointerMoveOpened\", true);\n      },\n      clearPointerMoveOpened: ({ context }) => {\n        context.set(\"hasPointerMoveOpened\", false);\n      }\n    },\n    effects: {\n      trackFocusVisible: ({ scope }) => {\n        return trackFocusVisible({ root: scope.getRootNode?.() });\n      },\n      trackPositioning: ({ context, prop, scope }) => {\n        if (!context.get(\"currentPlacement\")) {\n          context.set(\"currentPlacement\", prop(\"positioning\").placement);\n        }\n        const getPositionerEl2 = () => getPositionerEl(scope);\n        return getPlacement(getTriggerEl(scope), getPositionerEl2, {\n          ...prop(\"positioning\"),\n          defer: true,\n          onComplete(data) {\n            context.set(\"currentPlacement\", data.placement);\n          }\n        });\n      },\n      trackPointerlockChange: ({ send, scope }) => {\n        const doc = scope.getDoc();\n        const onChange = () => send({ type: \"close\", src: \"pointerlock:change\" });\n        return addDomEvent(doc, \"pointerlockchange\", onChange, false);\n      },\n      trackScroll: ({ send, prop, scope }) => {\n        if (!prop(\"closeOnScroll\")) return;\n        const triggerEl = getTriggerEl(scope);\n        if (!triggerEl) return;\n        const overflowParents = getOverflowAncestors(triggerEl);\n        const cleanups = overflowParents.map((overflowParent) => {\n          const onScroll = () => {\n            send({ type: \"close\", src: \"scroll\" });\n          };\n          return addDomEvent(overflowParent, \"scroll\", onScroll, {\n            passive: true,\n            capture: true\n          });\n        });\n        return () => {\n          cleanups.forEach((fn) => fn?.());\n        };\n      },\n      trackStore: ({ prop, send }) => {\n        let cleanup;\n        queueMicrotask(() => {\n          cleanup = subscribe(store, () => {\n            if (store.id !== prop(\"id\")) {\n              send({ type: \"close\", src: \"id.change\" });\n            }\n          });\n        });\n        return () => cleanup?.();\n      },\n      trackEscapeKey: ({ send, prop }) => {\n        if (!prop(\"closeOnEscape\")) return;\n        const onKeyDown = (event) => {\n          if (isComposingEvent(event)) return;\n          if (event.key !== \"Escape\") return;\n          event.stopPropagation();\n          send({ type: \"close\", src: \"keydown.escape\" });\n        };\n        return addDomEvent(document, \"keydown\", onKeyDown, true);\n      },\n      waitForOpenDelay: ({ send, prop }) => {\n        const id = setTimeout(() => {\n          send({ type: \"after.openDelay\" });\n        }, prop(\"openDelay\"));\n        return () => clearTimeout(id);\n      },\n      waitForCloseDelay: ({ send, prop }) => {\n        const id = setTimeout(() => {\n          send({ type: \"after.closeDelay\" });\n        }, prop(\"closeDelay\"));\n        return () => clearTimeout(id);\n      }\n    }\n  }\n});\nvar props = createProps()([\n  \"aria-label\",\n  \"closeDelay\",\n  \"closeOnEscape\",\n  \"closeOnPointerDown\",\n  \"closeOnScroll\",\n  \"closeOnClick\",\n  \"dir\",\n  \"disabled\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"interactive\",\n  \"onOpenChange\",\n  \"defaultOpen\",\n  \"open\",\n  \"openDelay\",\n  \"positioning\"\n]);\nvar splitProps = createSplitProps(props);\n\nexport { anatomy, connect, machine, props, splitProps };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}