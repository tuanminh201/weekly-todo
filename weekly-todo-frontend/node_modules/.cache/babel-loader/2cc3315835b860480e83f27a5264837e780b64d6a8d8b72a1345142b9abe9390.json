{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tuanl\\\\weekly-todo-frontend\\\\src\\\\components\\\\WeeklyView.tsx\";\nimport React from 'react';\nimport { Box, Heading, SimpleGrid, Text, Checkbox, Progress, VStack } from '@chakra-ui/react';\nimport dayjs from 'dayjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\nconst WeeklyView = ({\n  todos\n}) => {\n  const getTodosForDay = day => {\n    return todos.filter(todo => dayjs(todo.dueDate).format('dddd') === day);\n  };\n  const getCompletion = tasks => {\n    if (tasks.length === 0) return 0;\n    const completed = tasks.filter(t => t.completed).length;\n    return Math.round(completed / tasks.length * 100);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: 8,\n    px: 4,\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      size: \"lg\",\n      mb: 4,\n      children: \"Weekly To Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n      columns: [1, 2, 4, 8],\n      gap: 4,\n      children: [daysOfWeek.map(day => {\n        const dayTodos = getTodosForDay(day);\n        const completion = getCompletion(dayTodos);\n        return /*#__PURE__*/_jsxDEV(Box, {\n          borderWidth: \"1px\",\n          borderRadius: \"lg\",\n          p: 4,\n          minH: \"300px\",\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            size: \"md\",\n            mb: 2,\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Progress, {\n            value: completion,\n            size: \"sm\",\n            colorScheme: \"teal\",\n            mb: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(VStack, {\n            align: \"start\",\n            gap: 1,\n            children: dayTodos.map(todo => /*#__PURE__*/_jsxDEV(Checkbox, {\n              isChecked: todo.completed,\n              isReadOnly: true,\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                as: todo.completed ? 's' : undefined,\n                children: todo.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 41\n              }, this)\n            }, todo.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)]\n        }, day, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Box, {\n        borderWidth: \"1px\",\n        borderRadius: \"lg\",\n        p: 4,\n        minH: \"300px\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          size: \"md\",\n          mb: 2,\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(VStack, {\n          align: \"start\",\n          gap: 1,\n          children: [...Array(10)].map((_, i) => /*#__PURE__*/_jsxDEV(Text, {\n            color: \"gray.400\",\n            children: \"_____________\"\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_c = WeeklyView;\nexport default WeeklyView;\nvar _c;\n$RefreshReg$(_c, \"WeeklyView\");","map":{"version":3,"names":["React","Box","Heading","SimpleGrid","Text","Checkbox","Progress","VStack","dayjs","jsxDEV","_jsxDEV","daysOfWeek","WeeklyView","todos","getTodosForDay","day","filter","todo","dueDate","format","getCompletion","tasks","length","completed","t","Math","round","mt","px","children","size","mb","fileName","_jsxFileName","lineNumber","columnNumber","columns","gap","map","dayTodos","completion","borderWidth","borderRadius","p","minH","value","colorScheme","align","isChecked","isReadOnly","as","undefined","title","id","Array","_","i","color","_c","$RefreshReg$"],"sources":["C:/Users/tuanl/weekly-todo-frontend/src/components/WeeklyView.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Todo } from '../types/todo';\r\nimport {\r\n    Box,\r\n    Heading,\r\n    SimpleGrid,\r\n    Text,\r\n    Checkbox,\r\n    Progress,\r\n    VStack,\r\n} from '@chakra-ui/react';\r\nimport dayjs from 'dayjs';\r\n\r\ninterface WeeklyViewProps {\r\n    todos: Todo[];\r\n}\r\n\r\nconst daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n\r\nconst WeeklyView: React.FC<WeeklyViewProps> = ({ todos }) => {\r\n    const getTodosForDay = (day: string) => {\r\n        return todos.filter(todo => dayjs(todo.dueDate).format('dddd') === day);\r\n    };\r\n\r\n    const getCompletion = (tasks: Todo[]) => {\r\n        if (tasks.length === 0) return 0;\r\n        const completed = tasks.filter(t => t.completed).length;\r\n        return Math.round((completed / tasks.length) * 100);\r\n    };\r\n\r\n    return (\r\n        <Box mt={8} px={4}>\r\n            <Heading size=\"lg\" mb={4}>Weekly To Do List</Heading>\r\n            <SimpleGrid columns={[1, 2, 4, 8]} gap={4}>\r\n                {daysOfWeek.map(day => {\r\n                    const dayTodos = getTodosForDay(day);\r\n                    const completion = getCompletion(dayTodos);\r\n\r\n                    return (\r\n                        <Box key={day} borderWidth=\"1px\" borderRadius=\"lg\" p={4} minH=\"300px\">\r\n                            <Heading size=\"md\" mb={2}>{day}</Heading>\r\n                            <Progress value={completion} size=\"sm\" colorScheme=\"teal\" mb={2} />\r\n                            <VStack align=\"start\" gap={1}>\r\n                                {dayTodos.map(todo => (\r\n                                    <Checkbox key={todo.id} isChecked={todo.completed} isReadOnly>\r\n                                        <Text as={todo.completed ? 's' : undefined}>{todo.title}</Text>\r\n                                    </Checkbox>\r\n                                ))}\r\n                            </VStack>\r\n                        </Box>\r\n                    );\r\n                })}\r\n\r\n                <Box borderWidth=\"1px\" borderRadius=\"lg\" p={4} minH=\"300px\">\r\n                    <Heading size=\"md\" mb={2}>Notes</Heading>\r\n                    <VStack align=\"start\" gap={1}>\r\n                        {[...Array(10)].map((_, i) => (\r\n                            <Text key={i} color=\"gray.400\">_____________</Text>\r\n                        ))}\r\n                    </VStack>\r\n                </Box>\r\n            </SimpleGrid>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default WeeklyView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}