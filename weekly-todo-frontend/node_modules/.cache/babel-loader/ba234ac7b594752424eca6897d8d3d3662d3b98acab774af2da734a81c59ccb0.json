{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nimport { jsx } from 'react/jsx-runtime';\nimport { Pagination, usePaginationContext } from '@ark-ui/react/pagination';\nimport { forwardRef, useMemo } from 'react';\nimport { createSlotRecipeContext } from '../../styled-system/create-slot-recipe-context.js';\nimport { EllipsisIcon } from '../icons.js';\nimport { Box } from '../box/box.js';\nimport { For } from '../for/for.js';\nimport { IconButton } from '../button/icon-button.js';\nconst {\n  withProvider,\n  withContext,\n  useStyles: usePaginationStyles,\n  PropsProvider\n} = createSlotRecipeContext({\n  key: \"pagination\"\n});\nconst PaginationRootProvider = withProvider(Pagination.RootProvider, \"root\", {\n  forwardAsChild: true,\n  forwardProps: [\"page\"]\n});\nconst PaginationRoot = withProvider(Pagination.Root, \"root\", {\n  forwardAsChild: true,\n  forwardProps: [\"page\"]\n});\nconst PaginationPropsProvider = PropsProvider;\nconst PaginationEllipsis = withContext(Pagination.Ellipsis, \"ellipsis\", {\n  forwardAsChild: true\n});\nconst PaginationItem = withContext(Pagination.Item, \"item\", {\n  forwardAsChild: true\n});\nconst PaginationNextTrigger = withContext(Pagination.NextTrigger, \"nextTrigger\", {\n  forwardAsChild: true\n});\nconst PaginationPrevTrigger = withContext(Pagination.PrevTrigger, \"prevTrigger\", {\n  forwardAsChild: true\n});\nconst PaginationContext = Pagination.Context;\nconst PaginationPageText = forwardRef(function PaginationPageText2(props, ref) {\n  const {\n    format = \"compact\",\n    ...rest\n  } = props;\n  const {\n    page,\n    totalPages,\n    pageRange,\n    count\n  } = usePaginationContext();\n  const content = useMemo(() => {\n    if (format === \"short\") return `${page} / ${totalPages}`;\n    if (format === \"compact\") return `${page} of ${totalPages}`;\n    return `${pageRange.start + 1} - ${Math.min(pageRange.end, count)} of ${count}`;\n  }, [format, page, totalPages, pageRange, count]);\n  return /* @__PURE__ */jsx(Box, {\n    fontWeight: \"medium\",\n    ref,\n    ...rest,\n    children: content\n  });\n});\nconst PaginationItems = props => {\n  const {\n    pages\n  } = usePaginationContext();\n  const {\n    render,\n    ellipsis,\n    ...rest\n  } = props;\n  return /* @__PURE__ */jsx(For, {\n    each: pages,\n    children: (page, index) => {\n      if (page.type === \"ellipsis\") {\n        return /* @__PURE__ */jsx(PaginationEllipsis, {\n          asChild: true,\n          index,\n          ...rest,\n          children: ellipsis || /* @__PURE__ */jsx(IconButton, {\n            as: \"span\",\n            children: /* @__PURE__ */jsx(EllipsisIcon, {})\n          })\n        }, index);\n      }\n      return /* @__PURE__ */jsx(PaginationItem, {\n        asChild: true,\n        type: \"page\",\n        value: page.value,\n        ...rest,\n        children: render(page)\n      }, index);\n    }\n  });\n};\nexport { PaginationContext, PaginationEllipsis, PaginationItem, PaginationItems, PaginationNextTrigger, PaginationPageText, PaginationPrevTrigger, PaginationPropsProvider, PaginationRoot, PaginationRootProvider, usePaginationStyles };","map":{"version":3,"names":["jsx","Pagination","usePaginationContext","forwardRef","useMemo","createSlotRecipeContext","EllipsisIcon","Box","For","IconButton","withProvider","withContext","useStyles","usePaginationStyles","PropsProvider","key","PaginationRootProvider","RootProvider","forwardAsChild","forwardProps","PaginationRoot","Root","PaginationPropsProvider","PaginationEllipsis","Ellipsis","PaginationItem","Item","PaginationNextTrigger","NextTrigger","PaginationPrevTrigger","PrevTrigger","PaginationContext","Context","PaginationPageText","PaginationPageText2","props","ref","format","rest","page","totalPages","pageRange","count","content","start","Math","min","end","fontWeight","children","PaginationItems","pages","render","ellipsis","each","index","type","asChild","as","value"],"sources":["C:/Users/tuanl/weekly-todo-frontend/node_modules/@chakra-ui/react/dist/esm/components/pagination/pagination.js"],"sourcesContent":["\"use strict\";\n\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { Pagination, usePaginationContext } from '@ark-ui/react/pagination';\nimport { forwardRef, useMemo } from 'react';\nimport { createSlotRecipeContext } from '../../styled-system/create-slot-recipe-context.js';\nimport { EllipsisIcon } from '../icons.js';\nimport { Box } from '../box/box.js';\nimport { For } from '../for/for.js';\nimport { IconButton } from '../button/icon-button.js';\n\nconst {\n  withProvider,\n  withContext,\n  useStyles: usePaginationStyles,\n  PropsProvider\n} = createSlotRecipeContext({ key: \"pagination\" });\nconst PaginationRootProvider = withProvider(Pagination.RootProvider, \"root\", {\n  forwardAsChild: true,\n  forwardProps: [\"page\"]\n});\nconst PaginationRoot = withProvider(\n  Pagination.Root,\n  \"root\",\n  { forwardAsChild: true, forwardProps: [\"page\"] }\n);\nconst PaginationPropsProvider = PropsProvider;\nconst PaginationEllipsis = withContext(Pagination.Ellipsis, \"ellipsis\", { forwardAsChild: true });\nconst PaginationItem = withContext(Pagination.Item, \"item\", { forwardAsChild: true });\nconst PaginationNextTrigger = withContext(Pagination.NextTrigger, \"nextTrigger\", { forwardAsChild: true });\nconst PaginationPrevTrigger = withContext(Pagination.PrevTrigger, \"prevTrigger\", { forwardAsChild: true });\nconst PaginationContext = Pagination.Context;\nconst PaginationPageText = forwardRef(function PaginationPageText2(props, ref) {\n  const { format = \"compact\", ...rest } = props;\n  const { page, totalPages, pageRange, count } = usePaginationContext();\n  const content = useMemo(() => {\n    if (format === \"short\") return `${page} / ${totalPages}`;\n    if (format === \"compact\") return `${page} of ${totalPages}`;\n    return `${pageRange.start + 1} - ${Math.min(pageRange.end, count)} of ${count}`;\n  }, [format, page, totalPages, pageRange, count]);\n  return /* @__PURE__ */ jsx(Box, { fontWeight: \"medium\", ref, ...rest, children: content });\n});\nconst PaginationItems = (props) => {\n  const { pages } = usePaginationContext();\n  const { render, ellipsis, ...rest } = props;\n  return /* @__PURE__ */ jsx(For, { each: pages, children: (page, index) => {\n    if (page.type === \"ellipsis\") {\n      return /* @__PURE__ */ jsx(PaginationEllipsis, { asChild: true, index, ...rest, children: ellipsis || /* @__PURE__ */ jsx(IconButton, { as: \"span\", children: /* @__PURE__ */ jsx(EllipsisIcon, {}) }) }, index);\n    }\n    return /* @__PURE__ */ jsx(\n      PaginationItem,\n      {\n        asChild: true,\n        type: \"page\",\n        value: page.value,\n        ...rest,\n        children: render(page)\n      },\n      index\n    );\n  } });\n};\n\nexport { PaginationContext, PaginationEllipsis, PaginationItem, PaginationItems, PaginationNextTrigger, PaginationPageText, PaginationPrevTrigger, PaginationPropsProvider, PaginationRoot, PaginationRootProvider, usePaginationStyles };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}