{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { splitRenderStrategyProps, RenderStrategyPropsProvider } from '../../utils/render-strategy.js';\nimport { ark } from '../factory.js';\nimport { useTreeView } from './use-tree-view.js';\nimport { TreeViewProvider } from './use-tree-view-context.js';\nconst TreeViewImpl = (props, ref) => {\n  const [renderStrategyProps, treeViewProps] = splitRenderStrategyProps(props);\n  const [useTreeViewProps, localProps] = createSplitProps()(treeViewProps, [\"collection\", \"defaultExpandedValue\", \"defaultSelectedValue\", \"expandedValue\", \"expandOnClick\", \"focusedValue\", \"id\", \"ids\", \"onExpandedChange\", \"onFocusChange\", \"onSelectionChange\", \"selectedValue\", \"selectionMode\", \"typeahead\"]);\n  const treeView = useTreeView(useTreeViewProps);\n  const mergedProps = mergeProps(treeView.getRootProps(), localProps);\n  return /* @__PURE__ */jsx(TreeViewProvider, {\n    value: treeView,\n    children: /* @__PURE__ */jsx(RenderStrategyPropsProvider, {\n      value: renderStrategyProps,\n      children: /* @__PURE__ */jsx(ark.div, {\n        ...mergedProps,\n        ref\n      })\n    })\n  });\n};\nconst TreeViewRoot = forwardRef(TreeViewImpl);\nexport { TreeViewRoot };","map":{"version":3,"names":["jsx","mergeProps","forwardRef","createSplitProps","splitRenderStrategyProps","RenderStrategyPropsProvider","ark","useTreeView","TreeViewProvider","TreeViewImpl","props","ref","renderStrategyProps","treeViewProps","useTreeViewProps","localProps","treeView","mergedProps","getRootProps","value","children","div","TreeViewRoot"],"sources":["C:/Users/tuanl/weekly-todo-frontend/node_modules/@ark-ui/react/dist/components/tree-view/tree-view-root.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { splitRenderStrategyProps, RenderStrategyPropsProvider } from '../../utils/render-strategy.js';\nimport { ark } from '../factory.js';\nimport { useTreeView } from './use-tree-view.js';\nimport { TreeViewProvider } from './use-tree-view-context.js';\n\nconst TreeViewImpl = (props, ref) => {\n  const [renderStrategyProps, treeViewProps] = splitRenderStrategyProps(props);\n  const [useTreeViewProps, localProps] = createSplitProps()(treeViewProps, [\n    \"collection\",\n    \"defaultExpandedValue\",\n    \"defaultSelectedValue\",\n    \"expandedValue\",\n    \"expandOnClick\",\n    \"focusedValue\",\n    \"id\",\n    \"ids\",\n    \"onExpandedChange\",\n    \"onFocusChange\",\n    \"onSelectionChange\",\n    \"selectedValue\",\n    \"selectionMode\",\n    \"typeahead\"\n  ]);\n  const treeView = useTreeView(useTreeViewProps);\n  const mergedProps = mergeProps(treeView.getRootProps(), localProps);\n  return /* @__PURE__ */ jsx(TreeViewProvider, { value: treeView, children: /* @__PURE__ */ jsx(RenderStrategyPropsProvider, { value: renderStrategyProps, children: /* @__PURE__ */ jsx(ark.div, { ...mergedProps, ref }) }) });\n};\nconst TreeViewRoot = forwardRef(TreeViewImpl);\n\nexport { TreeViewRoot };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,gBAAgB,QAAQ,mCAAmC;AACpE,SAASC,wBAAwB,EAAEC,2BAA2B,QAAQ,gCAAgC;AACtG,SAASC,GAAG,QAAQ,eAAe;AACnC,SAASC,WAAW,QAAQ,oBAAoB;AAChD,SAASC,gBAAgB,QAAQ,4BAA4B;AAE7D,MAAMC,YAAY,GAAGA,CAACC,KAAK,EAAEC,GAAG,KAAK;EACnC,MAAM,CAACC,mBAAmB,EAAEC,aAAa,CAAC,GAAGT,wBAAwB,CAACM,KAAK,CAAC;EAC5E,MAAM,CAACI,gBAAgB,EAAEC,UAAU,CAAC,GAAGZ,gBAAgB,CAAC,CAAC,CAACU,aAAa,EAAE,CACvE,YAAY,EACZ,sBAAsB,EACtB,sBAAsB,EACtB,eAAe,EACf,eAAe,EACf,cAAc,EACd,IAAI,EACJ,KAAK,EACL,kBAAkB,EAClB,eAAe,EACf,mBAAmB,EACnB,eAAe,EACf,eAAe,EACf,WAAW,CACZ,CAAC;EACF,MAAMG,QAAQ,GAAGT,WAAW,CAACO,gBAAgB,CAAC;EAC9C,MAAMG,WAAW,GAAGhB,UAAU,CAACe,QAAQ,CAACE,YAAY,CAAC,CAAC,EAAEH,UAAU,CAAC;EACnE,OAAO,eAAgBf,GAAG,CAACQ,gBAAgB,EAAE;IAAEW,KAAK,EAAEH,QAAQ;IAAEI,QAAQ,EAAE,eAAgBpB,GAAG,CAACK,2BAA2B,EAAE;MAAEc,KAAK,EAAEP,mBAAmB;MAAEQ,QAAQ,EAAE,eAAgBpB,GAAG,CAACM,GAAG,CAACe,GAAG,EAAE;QAAE,GAAGJ,WAAW;QAAEN;MAAI,CAAC;IAAE,CAAC;EAAE,CAAC,CAAC;AAChO,CAAC;AACD,MAAMW,YAAY,GAAGpB,UAAU,CAACO,YAAY,CAAC;AAE7C,SAASa,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}