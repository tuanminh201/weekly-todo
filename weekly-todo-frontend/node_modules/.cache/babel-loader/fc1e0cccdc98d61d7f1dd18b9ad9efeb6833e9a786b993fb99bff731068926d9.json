{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { ark } from '../factory.js';\nimport { useCollapsibleContext } from './use-collapsible-context.js';\nconst CollapsibleIndicator = forwardRef((props, ref) => {\n  const collapsible = useCollapsibleContext();\n  const mergedProps = mergeProps(collapsible.getIndicatorProps(), props);\n  return /* @__PURE__ */jsx(ark.div, {\n    ...mergedProps,\n    ref\n  });\n});\nCollapsibleIndicator.displayName = \"CollapsibleIndicator\";\nexport { CollapsibleIndicator };","map":{"version":3,"names":["jsx","mergeProps","forwardRef","ark","useCollapsibleContext","CollapsibleIndicator","props","ref","collapsible","mergedProps","getIndicatorProps","div","displayName"],"sources":["C:/Users/tuanl/weekly-todo-frontend/node_modules/@ark-ui/react/dist/components/collapsible/collapsible-indicator.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { ark } from '../factory.js';\nimport { useCollapsibleContext } from './use-collapsible-context.js';\n\nconst CollapsibleIndicator = forwardRef((props, ref) => {\n  const collapsible = useCollapsibleContext();\n  const mergedProps = mergeProps(collapsible.getIndicatorProps(), props);\n  return /* @__PURE__ */ jsx(ark.div, { ...mergedProps, ref });\n});\nCollapsibleIndicator.displayName = \"CollapsibleIndicator\";\n\nexport { CollapsibleIndicator };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,GAAG,QAAQ,eAAe;AACnC,SAASC,qBAAqB,QAAQ,8BAA8B;AAEpE,MAAMC,oBAAoB,GAAGH,UAAU,CAAC,CAACI,KAAK,EAAEC,GAAG,KAAK;EACtD,MAAMC,WAAW,GAAGJ,qBAAqB,CAAC,CAAC;EAC3C,MAAMK,WAAW,GAAGR,UAAU,CAACO,WAAW,CAACE,iBAAiB,CAAC,CAAC,EAAEJ,KAAK,CAAC;EACtE,OAAO,eAAgBN,GAAG,CAACG,GAAG,CAACQ,GAAG,EAAE;IAAE,GAAGF,WAAW;IAAEF;EAAI,CAAC,CAAC;AAC9D,CAAC,CAAC;AACFF,oBAAoB,CAACO,WAAW,GAAG,sBAAsB;AAEzD,SAASP,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}