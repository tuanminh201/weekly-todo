{"ast":null,"code":"'use client';\n\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useSyncExternalStore } from 'react';\nconst noop = () => void 0;\nconst ClientOnly = props => {\n  const {\n    children,\n    fallback\n  } = props;\n  const isClient = useSyncExternalStore(() => noop, () => true, () => false);\n  if (!isClient) {\n    return fallback;\n  }\n  return /* @__PURE__ */jsx(Fragment, {\n    children\n  });\n};\nexport { ClientOnly };","map":{"version":3,"names":["jsx","Fragment","useSyncExternalStore","noop","ClientOnly","props","children","fallback","isClient"],"sources":["C:/Users/tuanl/weekly-todo-frontend/node_modules/@ark-ui/react/dist/components/client-only/client-only.js"],"sourcesContent":["'use client';\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useSyncExternalStore } from 'react';\n\nconst noop = () => void 0;\nconst ClientOnly = (props) => {\n  const { children, fallback } = props;\n  const isClient = useSyncExternalStore(\n    () => noop,\n    () => true,\n    () => false\n  );\n  if (!isClient) {\n    return fallback;\n  }\n  return /* @__PURE__ */ jsx(Fragment, { children });\n};\n\nexport { ClientOnly };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,EAAEC,QAAQ,QAAQ,mBAAmB;AACjD,SAASC,oBAAoB,QAAQ,OAAO;AAE5C,MAAMC,IAAI,GAAGA,CAAA,KAAM,KAAK,CAAC;AACzB,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAC5B,MAAM;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAGF,KAAK;EACpC,MAAMG,QAAQ,GAAGN,oBAAoB,CACnC,MAAMC,IAAI,EACV,MAAM,IAAI,EACV,MAAM,KACR,CAAC;EACD,IAAI,CAACK,QAAQ,EAAE;IACb,OAAOD,QAAQ;EACjB;EACA,OAAO,eAAgBP,GAAG,CAACC,QAAQ,EAAE;IAAEK;EAAS,CAAC,CAAC;AACpD,CAAC;AAED,SAASF,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}