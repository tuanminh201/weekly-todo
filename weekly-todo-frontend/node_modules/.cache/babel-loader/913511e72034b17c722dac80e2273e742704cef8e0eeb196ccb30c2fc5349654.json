{"ast":null,"code":"import { createAnatomy } from '@zag-js/anatomy';\nimport { dataAttr } from '@zag-js/dom-query';\nimport { createMachine } from '@zag-js/core';\nimport { createProps } from '@zag-js/types';\nimport { createSplitProps } from '@zag-js/utils';\n\n// src/toggle.anatomy.ts\nvar anatomy = createAnatomy(\"toggle\", [\"root\", \"indicator\"]);\nvar parts = anatomy.build();\nfunction connect(service, normalize) {\n  const {\n    context,\n    prop,\n    send\n  } = service;\n  const pressed = context.get(\"pressed\");\n  return {\n    pressed,\n    disabled: !!prop(\"disabled\"),\n    setPressed(value) {\n      send({\n        type: \"PRESS.SET\",\n        value\n      });\n    },\n    getRootProps() {\n      return normalize.element({\n        type: \"button\",\n        ...parts.root.attrs,\n        disabled: prop(\"disabled\"),\n        \"aria-pressed\": pressed,\n        \"data-state\": pressed ? \"on\" : \"off\",\n        \"data-pressed\": dataAttr(pressed),\n        \"data-disabled\": dataAttr(prop(\"disabled\")),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (prop(\"disabled\")) return;\n          send({\n            type: \"PRESS.TOGGLE\"\n          });\n        }\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        \"data-disabled\": dataAttr(prop(\"disabled\")),\n        \"data-pressed\": dataAttr(pressed),\n        \"data-state\": pressed ? \"on\" : \"off\"\n      });\n    }\n  };\n}\nvar machine = createMachine({\n  props({\n    props: props2\n  }) {\n    return {\n      defaultPressed: false,\n      ...props2\n    };\n  },\n  context({\n    prop,\n    bindable\n  }) {\n    return {\n      pressed: bindable(() => ({\n        value: prop(\"pressed\"),\n        defaultValue: prop(\"defaultPressed\"),\n        onChange(value) {\n          prop(\"onPressedChange\")?.(value);\n        }\n      }))\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  on: {\n    \"PRESS.TOGGLE\": {\n      actions: [\"togglePressed\"]\n    },\n    \"PRESS.SET\": {\n      actions: [\"setPressed\"]\n    }\n  },\n  states: {\n    idle: {}\n  },\n  implementations: {\n    actions: {\n      togglePressed({\n        context\n      }) {\n        context.set(\"pressed\", !context.get(\"pressed\"));\n      },\n      setPressed({\n        context,\n        event\n      }) {\n        context.set(\"pressed\", event.value);\n      }\n    }\n  }\n});\nvar props = createProps()([\"defaultPressed\", \"pressed\", \"onPressedChange\", \"disabled\"]);\nvar splitProps = createSplitProps(props);\nexport { anatomy, connect, machine, props, splitProps };","map":{"version":3,"names":["createAnatomy","dataAttr","createMachine","createProps","createSplitProps","anatomy","parts","build","connect","service","normalize","context","prop","send","pressed","get","disabled","setPressed","value","type","getRootProps","element","root","attrs","onClick","event","defaultPrevented","getIndicatorProps","indicator","machine","props","props2","defaultPressed","bindable","defaultValue","onChange","initialState","on","actions","states","idle","implementations","togglePressed","set","splitProps"],"sources":["C:/Users/tuanl/weekly-todo-frontend/node_modules/@chakra-ui/react/node_modules/@zag-js/toggle/dist/index.mjs"],"sourcesContent":["import { createAnatomy } from '@zag-js/anatomy';\nimport { dataAttr } from '@zag-js/dom-query';\nimport { createMachine } from '@zag-js/core';\nimport { createProps } from '@zag-js/types';\nimport { createSplitProps } from '@zag-js/utils';\n\n// src/toggle.anatomy.ts\nvar anatomy = createAnatomy(\"toggle\", [\"root\", \"indicator\"]);\nvar parts = anatomy.build();\nfunction connect(service, normalize) {\n  const { context, prop, send } = service;\n  const pressed = context.get(\"pressed\");\n  return {\n    pressed,\n    disabled: !!prop(\"disabled\"),\n    setPressed(value) {\n      send({ type: \"PRESS.SET\", value });\n    },\n    getRootProps() {\n      return normalize.element({\n        type: \"button\",\n        ...parts.root.attrs,\n        disabled: prop(\"disabled\"),\n        \"aria-pressed\": pressed,\n        \"data-state\": pressed ? \"on\" : \"off\",\n        \"data-pressed\": dataAttr(pressed),\n        \"data-disabled\": dataAttr(prop(\"disabled\")),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (prop(\"disabled\")) return;\n          send({ type: \"PRESS.TOGGLE\" });\n        }\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        \"data-disabled\": dataAttr(prop(\"disabled\")),\n        \"data-pressed\": dataAttr(pressed),\n        \"data-state\": pressed ? \"on\" : \"off\"\n      });\n    }\n  };\n}\nvar machine = createMachine({\n  props({ props: props2 }) {\n    return {\n      defaultPressed: false,\n      ...props2\n    };\n  },\n  context({ prop, bindable }) {\n    return {\n      pressed: bindable(() => ({\n        value: prop(\"pressed\"),\n        defaultValue: prop(\"defaultPressed\"),\n        onChange(value) {\n          prop(\"onPressedChange\")?.(value);\n        }\n      }))\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  on: {\n    \"PRESS.TOGGLE\": {\n      actions: [\"togglePressed\"]\n    },\n    \"PRESS.SET\": {\n      actions: [\"setPressed\"]\n    }\n  },\n  states: {\n    idle: {}\n  },\n  implementations: {\n    actions: {\n      togglePressed({ context }) {\n        context.set(\"pressed\", !context.get(\"pressed\"));\n      },\n      setPressed({ context, event }) {\n        context.set(\"pressed\", event.value);\n      }\n    }\n  }\n});\nvar props = createProps()([\"defaultPressed\", \"pressed\", \"onPressedChange\", \"disabled\"]);\nvar splitProps = createSplitProps(props);\n\nexport { anatomy, connect, machine, props, splitProps };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}