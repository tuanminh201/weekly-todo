{"ast":null,"code":"import { createAnatomy } from '@zag-js/anatomy';\nimport { observeAttributes, observeChildren } from '@zag-js/dom-query';\nimport { createMachine } from '@zag-js/core';\nimport { createProps } from '@zag-js/types';\nimport { createSplitProps } from '@zag-js/utils';\n\n// src/avatar.anatomy.ts\nvar anatomy = createAnatomy(\"avatar\").parts(\"root\", \"image\", \"fallback\");\nvar parts = anatomy.build();\n\n// src/avatar.dom.ts\nvar getRootId = ctx => ctx.ids?.root ?? `avatar:${ctx.id}`;\nvar getImageId = ctx => ctx.ids?.image ?? `avatar:${ctx.id}:image`;\nvar getFallbackId = ctx => ctx.ids?.fallback ?? `avatar:${ctx.id}:fallback`;\nvar getRootEl = ctx => ctx.getById(getRootId(ctx));\nvar getImageEl = ctx => ctx.getById(getImageId(ctx));\n\n// src/avatar.connect.ts\nfunction connect(service, normalize) {\n  const {\n    state,\n    send,\n    prop,\n    scope\n  } = service;\n  const loaded = state.matches(\"loaded\");\n  return {\n    loaded,\n    setSrc(src) {\n      const img = getImageEl(scope);\n      img?.setAttribute(\"src\", src);\n    },\n    setLoaded() {\n      send({\n        type: \"img.loaded\",\n        src: \"api\"\n      });\n    },\n    setError() {\n      send({\n        type: \"img.error\",\n        src: \"api\"\n      });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: prop(\"dir\"),\n        id: getRootId(scope)\n      });\n    },\n    getImageProps() {\n      return normalize.img({\n        ...parts.image.attrs,\n        hidden: !loaded,\n        dir: prop(\"dir\"),\n        id: getImageId(scope),\n        \"data-state\": loaded ? \"visible\" : \"hidden\",\n        onLoad() {\n          send({\n            type: \"img.loaded\",\n            src: \"element\"\n          });\n        },\n        onError() {\n          send({\n            type: \"img.error\",\n            src: \"element\"\n          });\n        }\n      });\n    },\n    getFallbackProps() {\n      return normalize.element({\n        ...parts.fallback.attrs,\n        dir: prop(\"dir\"),\n        id: getFallbackId(scope),\n        hidden: loaded,\n        \"data-state\": loaded ? \"hidden\" : \"visible\"\n      });\n    }\n  };\n}\nvar machine = createMachine({\n  initialState() {\n    return \"loading\";\n  },\n  effects: [\"trackImageRemoval\", \"trackSrcChange\"],\n  on: {\n    \"src.change\": {\n      target: \"loading\"\n    },\n    \"img.unmount\": {\n      target: \"error\"\n    }\n  },\n  states: {\n    loading: {\n      entry: [\"checkImageStatus\"],\n      on: {\n        \"img.loaded\": {\n          target: \"loaded\",\n          actions: [\"invokeOnLoad\"]\n        },\n        \"img.error\": {\n          target: \"error\",\n          actions: [\"invokeOnError\"]\n        }\n      }\n    },\n    error: {\n      on: {\n        \"img.loaded\": {\n          target: \"loaded\",\n          actions: [\"invokeOnLoad\"]\n        }\n      }\n    },\n    loaded: {\n      on: {\n        \"img.error\": {\n          target: \"error\",\n          actions: [\"invokeOnError\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    actions: {\n      invokeOnLoad({\n        prop\n      }) {\n        prop(\"onStatusChange\")?.({\n          status: \"loaded\"\n        });\n      },\n      invokeOnError({\n        prop\n      }) {\n        prop(\"onStatusChange\")?.({\n          status: \"error\"\n        });\n      },\n      checkImageStatus({\n        send,\n        scope\n      }) {\n        const imageEl = getImageEl(scope);\n        if (!imageEl?.complete) return;\n        const type = hasLoaded(imageEl) ? \"img.loaded\" : \"img.error\";\n        send({\n          type,\n          src: \"ssr\"\n        });\n      }\n    },\n    effects: {\n      trackImageRemoval({\n        send,\n        scope\n      }) {\n        const rootEl = getRootEl(scope);\n        return observeChildren(rootEl, {\n          callback(records) {\n            const removedNodes = Array.from(records[0].removedNodes);\n            const removed = removedNodes.find(node => node.nodeType === Node.ELEMENT_NODE && node.matches(\"[data-scope=avatar][data-part=image]\"));\n            if (removed) {\n              send({\n                type: \"img.unmount\"\n              });\n            }\n          }\n        });\n      },\n      trackSrcChange({\n        send,\n        scope\n      }) {\n        const imageEl = getImageEl(scope);\n        return observeAttributes(imageEl, {\n          attributes: [\"src\", \"srcset\"],\n          callback() {\n            send({\n              type: \"src.change\"\n            });\n          }\n        });\n      }\n    }\n  }\n});\nfunction hasLoaded(image) {\n  return image.complete && image.naturalWidth !== 0 && image.naturalHeight !== 0;\n}\nvar props = createProps()([\"dir\", \"id\", \"ids\", \"onStatusChange\", \"getRootNode\"]);\nvar splitProps = createSplitProps(props);\nexport { anatomy, connect, machine, props, splitProps };","map":{"version":3,"names":["createAnatomy","observeAttributes","observeChildren","createMachine","createProps","createSplitProps","anatomy","parts","build","getRootId","ctx","ids","root","id","getImageId","image","getFallbackId","fallback","getRootEl","getById","getImageEl","connect","service","normalize","state","send","prop","scope","loaded","matches","setSrc","src","img","setAttribute","setLoaded","type","setError","getRootProps","element","attrs","dir","getImageProps","hidden","onLoad","onError","getFallbackProps","machine","initialState","effects","on","target","states","loading","entry","actions","error","implementations","invokeOnLoad","status","invokeOnError","checkImageStatus","imageEl","complete","hasLoaded","trackImageRemoval","rootEl","callback","records","removedNodes","Array","from","removed","find","node","nodeType","Node","ELEMENT_NODE","trackSrcChange","attributes","naturalWidth","naturalHeight","props","splitProps"],"sources":["C:/Users/tuanl/weekly-todo-frontend/node_modules/@chakra-ui/react/node_modules/@zag-js/avatar/dist/index.mjs"],"sourcesContent":["import { createAnatomy } from '@zag-js/anatomy';\nimport { observeAttributes, observeChildren } from '@zag-js/dom-query';\nimport { createMachine } from '@zag-js/core';\nimport { createProps } from '@zag-js/types';\nimport { createSplitProps } from '@zag-js/utils';\n\n// src/avatar.anatomy.ts\nvar anatomy = createAnatomy(\"avatar\").parts(\"root\", \"image\", \"fallback\");\nvar parts = anatomy.build();\n\n// src/avatar.dom.ts\nvar getRootId = (ctx) => ctx.ids?.root ?? `avatar:${ctx.id}`;\nvar getImageId = (ctx) => ctx.ids?.image ?? `avatar:${ctx.id}:image`;\nvar getFallbackId = (ctx) => ctx.ids?.fallback ?? `avatar:${ctx.id}:fallback`;\nvar getRootEl = (ctx) => ctx.getById(getRootId(ctx));\nvar getImageEl = (ctx) => ctx.getById(getImageId(ctx));\n\n// src/avatar.connect.ts\nfunction connect(service, normalize) {\n  const { state, send, prop, scope } = service;\n  const loaded = state.matches(\"loaded\");\n  return {\n    loaded,\n    setSrc(src) {\n      const img = getImageEl(scope);\n      img?.setAttribute(\"src\", src);\n    },\n    setLoaded() {\n      send({ type: \"img.loaded\", src: \"api\" });\n    },\n    setError() {\n      send({ type: \"img.error\", src: \"api\" });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: prop(\"dir\"),\n        id: getRootId(scope)\n      });\n    },\n    getImageProps() {\n      return normalize.img({\n        ...parts.image.attrs,\n        hidden: !loaded,\n        dir: prop(\"dir\"),\n        id: getImageId(scope),\n        \"data-state\": loaded ? \"visible\" : \"hidden\",\n        onLoad() {\n          send({ type: \"img.loaded\", src: \"element\" });\n        },\n        onError() {\n          send({ type: \"img.error\", src: \"element\" });\n        }\n      });\n    },\n    getFallbackProps() {\n      return normalize.element({\n        ...parts.fallback.attrs,\n        dir: prop(\"dir\"),\n        id: getFallbackId(scope),\n        hidden: loaded,\n        \"data-state\": loaded ? \"hidden\" : \"visible\"\n      });\n    }\n  };\n}\nvar machine = createMachine({\n  initialState() {\n    return \"loading\";\n  },\n  effects: [\"trackImageRemoval\", \"trackSrcChange\"],\n  on: {\n    \"src.change\": {\n      target: \"loading\"\n    },\n    \"img.unmount\": {\n      target: \"error\"\n    }\n  },\n  states: {\n    loading: {\n      entry: [\"checkImageStatus\"],\n      on: {\n        \"img.loaded\": {\n          target: \"loaded\",\n          actions: [\"invokeOnLoad\"]\n        },\n        \"img.error\": {\n          target: \"error\",\n          actions: [\"invokeOnError\"]\n        }\n      }\n    },\n    error: {\n      on: {\n        \"img.loaded\": {\n          target: \"loaded\",\n          actions: [\"invokeOnLoad\"]\n        }\n      }\n    },\n    loaded: {\n      on: {\n        \"img.error\": {\n          target: \"error\",\n          actions: [\"invokeOnError\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    actions: {\n      invokeOnLoad({ prop }) {\n        prop(\"onStatusChange\")?.({ status: \"loaded\" });\n      },\n      invokeOnError({ prop }) {\n        prop(\"onStatusChange\")?.({ status: \"error\" });\n      },\n      checkImageStatus({ send, scope }) {\n        const imageEl = getImageEl(scope);\n        if (!imageEl?.complete) return;\n        const type = hasLoaded(imageEl) ? \"img.loaded\" : \"img.error\";\n        send({ type, src: \"ssr\" });\n      }\n    },\n    effects: {\n      trackImageRemoval({ send, scope }) {\n        const rootEl = getRootEl(scope);\n        return observeChildren(rootEl, {\n          callback(records) {\n            const removedNodes = Array.from(records[0].removedNodes);\n            const removed = removedNodes.find(\n              (node) => node.nodeType === Node.ELEMENT_NODE && node.matches(\"[data-scope=avatar][data-part=image]\")\n            );\n            if (removed) {\n              send({ type: \"img.unmount\" });\n            }\n          }\n        });\n      },\n      trackSrcChange({ send, scope }) {\n        const imageEl = getImageEl(scope);\n        return observeAttributes(imageEl, {\n          attributes: [\"src\", \"srcset\"],\n          callback() {\n            send({ type: \"src.change\" });\n          }\n        });\n      }\n    }\n  }\n});\nfunction hasLoaded(image) {\n  return image.complete && image.naturalWidth !== 0 && image.naturalHeight !== 0;\n}\nvar props = createProps()([\"dir\", \"id\", \"ids\", \"onStatusChange\", \"getRootNode\"]);\nvar splitProps = createSplitProps(props);\n\nexport { anatomy, connect, machine, props, splitProps };\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,iBAAiB,EAAEC,eAAe,QAAQ,mBAAmB;AACtE,SAASC,aAAa,QAAQ,cAAc;AAC5C,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,gBAAgB,QAAQ,eAAe;;AAEhD;AACA,IAAIC,OAAO,GAAGN,aAAa,CAAC,QAAQ,CAAC,CAACO,KAAK,CAAC,MAAM,EAAE,OAAO,EAAE,UAAU,CAAC;AACxE,IAAIA,KAAK,GAAGD,OAAO,CAACE,KAAK,CAAC,CAAC;;AAE3B;AACA,IAAIC,SAAS,GAAIC,GAAG,IAAKA,GAAG,CAACC,GAAG,EAAEC,IAAI,IAAI,UAAUF,GAAG,CAACG,EAAE,EAAE;AAC5D,IAAIC,UAAU,GAAIJ,GAAG,IAAKA,GAAG,CAACC,GAAG,EAAEI,KAAK,IAAI,UAAUL,GAAG,CAACG,EAAE,QAAQ;AACpE,IAAIG,aAAa,GAAIN,GAAG,IAAKA,GAAG,CAACC,GAAG,EAAEM,QAAQ,IAAI,UAAUP,GAAG,CAACG,EAAE,WAAW;AAC7E,IAAIK,SAAS,GAAIR,GAAG,IAAKA,GAAG,CAACS,OAAO,CAACV,SAAS,CAACC,GAAG,CAAC,CAAC;AACpD,IAAIU,UAAU,GAAIV,GAAG,IAAKA,GAAG,CAACS,OAAO,CAACL,UAAU,CAACJ,GAAG,CAAC,CAAC;;AAEtD;AACA,SAASW,OAAOA,CAACC,OAAO,EAAEC,SAAS,EAAE;EACnC,MAAM;IAAEC,KAAK;IAAEC,IAAI;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGL,OAAO;EAC5C,MAAMM,MAAM,GAAGJ,KAAK,CAACK,OAAO,CAAC,QAAQ,CAAC;EACtC,OAAO;IACLD,MAAM;IACNE,MAAMA,CAACC,GAAG,EAAE;MACV,MAAMC,GAAG,GAAGZ,UAAU,CAACO,KAAK,CAAC;MAC7BK,GAAG,EAAEC,YAAY,CAAC,KAAK,EAAEF,GAAG,CAAC;IAC/B,CAAC;IACDG,SAASA,CAAA,EAAG;MACVT,IAAI,CAAC;QAAEU,IAAI,EAAE,YAAY;QAAEJ,GAAG,EAAE;MAAM,CAAC,CAAC;IAC1C,CAAC;IACDK,QAAQA,CAAA,EAAG;MACTX,IAAI,CAAC;QAAEU,IAAI,EAAE,WAAW;QAAEJ,GAAG,EAAE;MAAM,CAAC,CAAC;IACzC,CAAC;IACDM,YAAYA,CAAA,EAAG;MACb,OAAOd,SAAS,CAACe,OAAO,CAAC;QACvB,GAAG/B,KAAK,CAACK,IAAI,CAAC2B,KAAK;QACnBC,GAAG,EAAEd,IAAI,CAAC,KAAK,CAAC;QAChBb,EAAE,EAAEJ,SAAS,CAACkB,KAAK;MACrB,CAAC,CAAC;IACJ,CAAC;IACDc,aAAaA,CAAA,EAAG;MACd,OAAOlB,SAAS,CAACS,GAAG,CAAC;QACnB,GAAGzB,KAAK,CAACQ,KAAK,CAACwB,KAAK;QACpBG,MAAM,EAAE,CAACd,MAAM;QACfY,GAAG,EAAEd,IAAI,CAAC,KAAK,CAAC;QAChBb,EAAE,EAAEC,UAAU,CAACa,KAAK,CAAC;QACrB,YAAY,EAAEC,MAAM,GAAG,SAAS,GAAG,QAAQ;QAC3Ce,MAAMA,CAAA,EAAG;UACPlB,IAAI,CAAC;YAAEU,IAAI,EAAE,YAAY;YAAEJ,GAAG,EAAE;UAAU,CAAC,CAAC;QAC9C,CAAC;QACDa,OAAOA,CAAA,EAAG;UACRnB,IAAI,CAAC;YAAEU,IAAI,EAAE,WAAW;YAAEJ,GAAG,EAAE;UAAU,CAAC,CAAC;QAC7C;MACF,CAAC,CAAC;IACJ,CAAC;IACDc,gBAAgBA,CAAA,EAAG;MACjB,OAAOtB,SAAS,CAACe,OAAO,CAAC;QACvB,GAAG/B,KAAK,CAACU,QAAQ,CAACsB,KAAK;QACvBC,GAAG,EAAEd,IAAI,CAAC,KAAK,CAAC;QAChBb,EAAE,EAAEG,aAAa,CAACW,KAAK,CAAC;QACxBe,MAAM,EAAEd,MAAM;QACd,YAAY,EAAEA,MAAM,GAAG,QAAQ,GAAG;MACpC,CAAC,CAAC;IACJ;EACF,CAAC;AACH;AACA,IAAIkB,OAAO,GAAG3C,aAAa,CAAC;EAC1B4C,YAAYA,CAAA,EAAG;IACb,OAAO,SAAS;EAClB,CAAC;EACDC,OAAO,EAAE,CAAC,mBAAmB,EAAE,gBAAgB,CAAC;EAChDC,EAAE,EAAE;IACF,YAAY,EAAE;MACZC,MAAM,EAAE;IACV,CAAC;IACD,aAAa,EAAE;MACbA,MAAM,EAAE;IACV;EACF,CAAC;EACDC,MAAM,EAAE;IACNC,OAAO,EAAE;MACPC,KAAK,EAAE,CAAC,kBAAkB,CAAC;MAC3BJ,EAAE,EAAE;QACF,YAAY,EAAE;UACZC,MAAM,EAAE,QAAQ;UAChBI,OAAO,EAAE,CAAC,cAAc;QAC1B,CAAC;QACD,WAAW,EAAE;UACXJ,MAAM,EAAE,OAAO;UACfI,OAAO,EAAE,CAAC,eAAe;QAC3B;MACF;IACF,CAAC;IACDC,KAAK,EAAE;MACLN,EAAE,EAAE;QACF,YAAY,EAAE;UACZC,MAAM,EAAE,QAAQ;UAChBI,OAAO,EAAE,CAAC,cAAc;QAC1B;MACF;IACF,CAAC;IACD1B,MAAM,EAAE;MACNqB,EAAE,EAAE;QACF,WAAW,EAAE;UACXC,MAAM,EAAE,OAAO;UACfI,OAAO,EAAE,CAAC,eAAe;QAC3B;MACF;IACF;EACF,CAAC;EACDE,eAAe,EAAE;IACfF,OAAO,EAAE;MACPG,YAAYA,CAAC;QAAE/B;MAAK,CAAC,EAAE;QACrBA,IAAI,CAAC,gBAAgB,CAAC,GAAG;UAAEgC,MAAM,EAAE;QAAS,CAAC,CAAC;MAChD,CAAC;MACDC,aAAaA,CAAC;QAAEjC;MAAK,CAAC,EAAE;QACtBA,IAAI,CAAC,gBAAgB,CAAC,GAAG;UAAEgC,MAAM,EAAE;QAAQ,CAAC,CAAC;MAC/C,CAAC;MACDE,gBAAgBA,CAAC;QAAEnC,IAAI;QAAEE;MAAM,CAAC,EAAE;QAChC,MAAMkC,OAAO,GAAGzC,UAAU,CAACO,KAAK,CAAC;QACjC,IAAI,CAACkC,OAAO,EAAEC,QAAQ,EAAE;QACxB,MAAM3B,IAAI,GAAG4B,SAAS,CAACF,OAAO,CAAC,GAAG,YAAY,GAAG,WAAW;QAC5DpC,IAAI,CAAC;UAAEU,IAAI;UAAEJ,GAAG,EAAE;QAAM,CAAC,CAAC;MAC5B;IACF,CAAC;IACDiB,OAAO,EAAE;MACPgB,iBAAiBA,CAAC;QAAEvC,IAAI;QAAEE;MAAM,CAAC,EAAE;QACjC,MAAMsC,MAAM,GAAG/C,SAAS,CAACS,KAAK,CAAC;QAC/B,OAAOzB,eAAe,CAAC+D,MAAM,EAAE;UAC7BC,QAAQA,CAACC,OAAO,EAAE;YAChB,MAAMC,YAAY,GAAGC,KAAK,CAACC,IAAI,CAACH,OAAO,CAAC,CAAC,CAAC,CAACC,YAAY,CAAC;YACxD,MAAMG,OAAO,GAAGH,YAAY,CAACI,IAAI,CAC9BC,IAAI,IAAKA,IAAI,CAACC,QAAQ,KAAKC,IAAI,CAACC,YAAY,IAAIH,IAAI,CAAC5C,OAAO,CAAC,sCAAsC,CACtG,CAAC;YACD,IAAI0C,OAAO,EAAE;cACX9C,IAAI,CAAC;gBAAEU,IAAI,EAAE;cAAc,CAAC,CAAC;YAC/B;UACF;QACF,CAAC,CAAC;MACJ,CAAC;MACD0C,cAAcA,CAAC;QAAEpD,IAAI;QAAEE;MAAM,CAAC,EAAE;QAC9B,MAAMkC,OAAO,GAAGzC,UAAU,CAACO,KAAK,CAAC;QACjC,OAAO1B,iBAAiB,CAAC4D,OAAO,EAAE;UAChCiB,UAAU,EAAE,CAAC,KAAK,EAAE,QAAQ,CAAC;UAC7BZ,QAAQA,CAAA,EAAG;YACTzC,IAAI,CAAC;cAAEU,IAAI,EAAE;YAAa,CAAC,CAAC;UAC9B;QACF,CAAC,CAAC;MACJ;IACF;EACF;AACF,CAAC,CAAC;AACF,SAAS4B,SAASA,CAAChD,KAAK,EAAE;EACxB,OAAOA,KAAK,CAAC+C,QAAQ,IAAI/C,KAAK,CAACgE,YAAY,KAAK,CAAC,IAAIhE,KAAK,CAACiE,aAAa,KAAK,CAAC;AAChF;AACA,IAAIC,KAAK,GAAG7E,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,gBAAgB,EAAE,aAAa,CAAC,CAAC;AAChF,IAAI8E,UAAU,GAAG7E,gBAAgB,CAAC4E,KAAK,CAAC;AAExC,SAAS3E,OAAO,EAAEe,OAAO,EAAEyB,OAAO,EAAEmC,KAAK,EAAEC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}