{"ast":null,"code":"'use client';\n\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { formatBytes } from '@zag-js/i18n-utils';\nimport { useMemo } from 'react';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nconst FormatByte = props => {\n  const {\n    locale\n  } = useLocaleContext();\n  const text = useMemo(() => {\n    const {\n      value,\n      ...intlOptions\n    } = props;\n    return formatBytes(value, locale, intlOptions);\n  }, [props, locale]);\n  return /* @__PURE__ */jsx(Fragment, {\n    children: text\n  });\n};\nFormatByte.displayName = \"FormatByte\";\nexport { FormatByte };","map":{"version":3,"names":["jsx","Fragment","formatBytes","useMemo","useLocaleContext","FormatByte","props","locale","text","value","intlOptions","children","displayName"],"sources":["C:/Users/tuanl/weekly-todo-frontend/node_modules/@chakra-ui/react/node_modules/@ark-ui/react/dist/components/format/format-byte.js"],"sourcesContent":["'use client';\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { formatBytes } from '@zag-js/i18n-utils';\nimport { useMemo } from 'react';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\n\nconst FormatByte = (props) => {\n  const { locale } = useLocaleContext();\n  const text = useMemo(() => {\n    const { value, ...intlOptions } = props;\n    return formatBytes(value, locale, intlOptions);\n  }, [props, locale]);\n  return /* @__PURE__ */ jsx(Fragment, { children: text });\n};\nFormatByte.displayName = \"FormatByte\";\n\nexport { FormatByte };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,EAAEC,QAAQ,QAAQ,mBAAmB;AACjD,SAASC,WAAW,QAAQ,oBAAoB;AAChD,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,gBAAgB,QAAQ,8CAA8C;AAE/E,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAC5B,MAAM;IAAEC;EAAO,CAAC,GAAGH,gBAAgB,CAAC,CAAC;EACrC,MAAMI,IAAI,GAAGL,OAAO,CAAC,MAAM;IACzB,MAAM;MAAEM,KAAK;MAAE,GAAGC;IAAY,CAAC,GAAGJ,KAAK;IACvC,OAAOJ,WAAW,CAACO,KAAK,EAAEF,MAAM,EAAEG,WAAW,CAAC;EAChD,CAAC,EAAE,CAACJ,KAAK,EAAEC,MAAM,CAAC,CAAC;EACnB,OAAO,eAAgBP,GAAG,CAACC,QAAQ,EAAE;IAAEU,QAAQ,EAAEH;EAAK,CAAC,CAAC;AAC1D,CAAC;AACDH,UAAU,CAACO,WAAW,GAAG,YAAY;AAErC,SAASP,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}