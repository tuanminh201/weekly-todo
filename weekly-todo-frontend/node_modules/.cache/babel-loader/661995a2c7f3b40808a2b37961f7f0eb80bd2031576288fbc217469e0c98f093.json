{"ast":null,"code":"import { createAnatomy } from '@zag-js/anatomy';\nimport { raf, isHTMLElement, addDomEvent, trackPointerMove, dataAttr, getEventTarget, isSelfTarget, getEventStep, getEventKey } from '@zag-js/dom-query';\nimport { clampPoint, clampSize, createRect, subtractPoints, resizeRect, addPoints, getElementRect, isPointEqual, isSizeEqual, getWindowRect, constrainRect } from '@zag-js/rect-utils';\nimport { invariant, match, pick, clampValue, ensureProps, createSplitProps, toPx } from '@zag-js/utils';\nimport { createGuards, createMachine } from '@zag-js/core';\nimport { proxy, subscribe } from '@zag-js/store';\nimport { createProps } from '@zag-js/types';\n\n// src/floating-panel.anatomy.ts\nvar anatomy = createAnatomy(\"floating-panel\").parts(\"trigger\", \"positioner\", \"content\", \"header\", \"body\", \"title\", \"resizeTrigger\", \"dragTrigger\", \"stageTrigger\", \"closeTrigger\", \"control\");\nvar parts = anatomy.build();\nvar getTriggerId = ctx => ctx.ids?.trigger ?? `float:${ctx.id}:trigger`;\nvar getPositionerId = ctx => ctx.ids?.positioner ?? `float:${ctx.id}:positioner`;\nvar getContentId = ctx => ctx.ids?.content ?? `float:${ctx.id}:content`;\nvar getTitleId = ctx => ctx.ids?.title ?? `float:${ctx.id}:title`;\nvar getHeaderId = ctx => ctx.ids?.header ?? `float:${ctx.id}:header`;\nvar getTriggerEl = ctx => ctx.getById(getTriggerId(ctx));\nvar getPositionerEl = ctx => ctx.getById(getPositionerId(ctx));\nvar getContentEl = ctx => ctx.getById(getContentId(ctx));\nvar getHeaderEl = ctx => ctx.getById(getHeaderId(ctx));\nvar getBoundaryRect = (ctx, boundaryEl, allowOverflow) => {\n  let boundaryRect;\n  if (isHTMLElement(boundaryEl)) {\n    boundaryRect = getElementRect(boundaryEl);\n  } else {\n    boundaryRect = getWindowRect(ctx.getWin());\n  }\n  if (allowOverflow) {\n    boundaryRect = createRect({\n      x: -boundaryRect.width,\n      // empty(left)\n      y: boundaryRect.minY,\n      width: boundaryRect.width * 3,\n      // empty(left) + win + empty(right)\n      height: boundaryRect.height * 2\n      // win + empty(bottom)\n    });\n  }\n  return pick(boundaryRect, [\"x\", \"y\", \"width\", \"height\"]);\n};\n\n// src/get-resize-axis-style.ts\nfunction getResizeAxisStyle(axis) {\n  switch (axis) {\n    case \"n\":\n      return {\n        cursor: \"n-resize\",\n        width: \"100%\",\n        left: \"50%\",\n        translate: \"-50%\"\n      };\n    case \"e\":\n      return {\n        cursor: \"e-resize\",\n        height: \"100%\",\n        right: 0,\n        top: \"50%\",\n        translate: \"0 -50%\"\n      };\n    case \"s\":\n      return {\n        cursor: \"s-resize\",\n        width: \"100%\",\n        bottom: 0,\n        left: \"50%\",\n        translate: \"-50%\"\n      };\n    case \"w\":\n      return {\n        cursor: \"w-resize\",\n        height: \"100%\",\n        left: 0,\n        top: \"50%\",\n        translate: \"0 -50%\"\n      };\n    case \"se\":\n      return {\n        cursor: \"se-resize\",\n        bottom: 0,\n        right: 0\n      };\n    case \"sw\":\n      return {\n        cursor: \"sw-resize\",\n        bottom: 0,\n        left: 0\n      };\n    case \"ne\":\n      return {\n        cursor: \"ne-resize\",\n        top: 0,\n        right: 0\n      };\n    case \"nw\":\n      return {\n        cursor: \"nw-resize\",\n        top: 0,\n        left: 0\n      };\n    default:\n      throw new Error(`Invalid axis: ${axis}`);\n  }\n}\nvar validStages = /* @__PURE__ */new Set([\"minimized\", \"maximized\", \"default\"]);\nfunction connect(service, normalize) {\n  const {\n    state,\n    send,\n    scope,\n    prop,\n    computed,\n    context\n  } = service;\n  const open = state.hasTag(\"open\");\n  const dragging = state.matches(\"open.dragging\");\n  const resizing = state.matches(\"open.resizing\");\n  const isTopmost = context.get(\"isTopmost\");\n  const size = context.get(\"size\");\n  const position = context.get(\"position\");\n  const isMaximized = computed(\"isMaximized\");\n  const isMinimized = computed(\"isMinimized\");\n  const isStaged = computed(\"isStaged\");\n  const canResize = computed(\"canResize\");\n  const canDrag = computed(\"canDrag\");\n  return {\n    open,\n    resizable: prop(\"resizable\"),\n    draggable: prop(\"draggable\"),\n    setOpen(nextOpen) {\n      const open2 = state.hasTag(\"open\");\n      if (open2 === nextOpen) return;\n      send({\n        type: nextOpen ? \"OPEN\" : \"CLOSE\"\n      });\n    },\n    dragging,\n    resizing,\n    position,\n    size,\n    setPosition(position2) {\n      send({\n        type: \"SET_POSITION\",\n        position: position2\n      });\n    },\n    setSize(size2) {\n      send({\n        type: \"SET_SIZE\",\n        size: size2\n      });\n    },\n    minimize() {\n      send({\n        type: \"MINIMIZE\"\n      });\n    },\n    maximize() {\n      send({\n        type: \"MAXIMIZE\"\n      });\n    },\n    restore() {\n      send({\n        type: \"RESTORE\"\n      });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        type: \"button\",\n        disabled: prop(\"disabled\"),\n        id: getTriggerId(scope),\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-dragging\": dataAttr(dragging),\n        \"aria-controls\": getContentId(scope),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (prop(\"disabled\")) return;\n          const open2 = state.hasTag(\"open\");\n          send({\n            type: open2 ? \"CLOSE\" : \"OPEN\",\n            src: \"trigger\"\n          });\n        }\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        ...parts.positioner.attrs,\n        id: getPositionerId(scope),\n        style: {\n          \"--width\": toPx(size?.width),\n          \"--height\": toPx(size?.height),\n          \"--x\": toPx(position?.x),\n          \"--y\": toPx(position?.y),\n          position: prop(\"strategy\"),\n          top: \"var(--y)\",\n          left: \"var(--x)\"\n        }\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        role: \"dialog\",\n        tabIndex: 0,\n        hidden: !open,\n        id: getContentId(scope),\n        \"aria-labelledby\": getTitleId(scope),\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-dragging\": dataAttr(dragging),\n        \"data-topmost\": dataAttr(isTopmost),\n        \"data-behind\": dataAttr(!isTopmost),\n        style: {\n          width: \"var(--width)\",\n          height: \"var(--height)\",\n          overflow: isMinimized ? \"hidden\" : void 0\n        },\n        onFocus() {\n          send({\n            type: \"CONTENT_FOCUS\"\n          });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!isSelfTarget(event)) return;\n          const step = getEventStep(event) * prop(\"gridSize\");\n          const keyMap = {\n            Escape() {\n              if (!isTopmost) return;\n              send({\n                type: \"ESCAPE\"\n              });\n            },\n            ArrowLeft() {\n              send({\n                type: \"MOVE\",\n                direction: \"left\",\n                step\n              });\n            },\n            ArrowRight() {\n              send({\n                type: \"MOVE\",\n                direction: \"right\",\n                step\n              });\n            },\n            ArrowUp() {\n              send({\n                type: \"MOVE\",\n                direction: \"up\",\n                step\n              });\n            },\n            ArrowDown() {\n              send({\n                type: \"MOVE\",\n                direction: \"down\",\n                step\n              });\n            }\n          };\n          const handler = keyMap[getEventKey(event, {\n            dir: prop(\"dir\")\n          })];\n          if (handler) {\n            event.preventDefault();\n            handler(event);\n          }\n        }\n      });\n    },\n    getCloseTriggerProps() {\n      return normalize.button({\n        ...parts.closeTrigger.attrs,\n        disabled: prop(\"disabled\"),\n        \"aria-label\": \"Close Window\",\n        type: \"button\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send({\n            type: \"CLOSE\"\n          });\n        }\n      });\n    },\n    getStageTriggerProps(props2) {\n      if (!validStages.has(props2.stage)) {\n        throw new Error(`[zag-js] Invalid stage: ${props2.stage}. Must be one of: ${Array.from(validStages).join(\", \")}`);\n      }\n      const translations = prop(\"translations\");\n      const actionProps = match(props2.stage, {\n        minimized: () => ({\n          \"aria-label\": translations.minimize,\n          hidden: isStaged\n        }),\n        maximized: () => ({\n          \"aria-label\": translations.maximize,\n          hidden: isStaged\n        }),\n        default: () => ({\n          \"aria-label\": translations.restore,\n          hidden: !isStaged\n        })\n      });\n      return normalize.button({\n        ...parts.stageTrigger.attrs,\n        disabled: prop(\"disabled\"),\n        ...actionProps,\n        type: \"button\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          const type = match(props2.stage, {\n            minimized: () => \"MINIMIZE\",\n            maximized: () => \"MAXIMIZE\",\n            default: () => \"RESTORE\"\n          });\n          send({\n            type: type.toUpperCase()\n          });\n        }\n      });\n    },\n    getResizeTriggerProps(props2) {\n      return normalize.element({\n        ...parts.resizeTrigger.attrs,\n        \"data-disabled\": dataAttr(!canResize),\n        \"data-axis\": props2.axis,\n        onPointerDown(event) {\n          if (!canResize || event.button == 2) return;\n          event.currentTarget.setPointerCapture(event.pointerId);\n          event.stopPropagation();\n          send({\n            type: \"RESIZE_START\",\n            axis: props2.axis,\n            position: {\n              x: event.clientX,\n              y: event.clientY\n            }\n          });\n        },\n        onPointerUp(event) {\n          if (!canResize) return;\n          const node = event.currentTarget;\n          if (node.hasPointerCapture(event.pointerId)) {\n            node.releasePointerCapture(event.pointerId);\n          }\n        },\n        style: {\n          position: \"absolute\",\n          touchAction: \"none\",\n          ...getResizeAxisStyle(props2.axis)\n        }\n      });\n    },\n    getDragTriggerProps() {\n      return normalize.element({\n        ...parts.dragTrigger.attrs,\n        \"data-disabled\": dataAttr(!canDrag),\n        onPointerDown(event) {\n          if (!canDrag || event.button == 2) return;\n          const target = getEventTarget(event);\n          if (target?.closest(\"button\") || target?.closest(\"[data-no-drag]\")) {\n            return;\n          }\n          event.currentTarget.setPointerCapture(event.pointerId);\n          event.stopPropagation();\n          send({\n            type: \"DRAG_START\",\n            pointerId: event.pointerId,\n            position: {\n              x: event.clientX,\n              y: event.clientY\n            }\n          });\n        },\n        onPointerUp(event) {\n          if (!canDrag) return;\n          const node = event.currentTarget;\n          if (node.hasPointerCapture(event.pointerId)) {\n            node.releasePointerCapture(event.pointerId);\n          }\n        },\n        onDoubleClick() {\n          send({\n            type: isMaximized ? \"RESTORE\" : \"MAXIMIZE\"\n          });\n        },\n        style: {\n          WebkitUserSelect: \"none\",\n          userSelect: \"none\",\n          touchAction: \"none\",\n          cursor: \"move\"\n        }\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        \"data-disabled\": dataAttr(prop(\"disabled\")),\n        \"data-stage\": context.get(\"stage\")\n      });\n    },\n    getTitleProps() {\n      return normalize.element({\n        ...parts.title.attrs,\n        id: getTitleId(scope)\n      });\n    },\n    getHeaderProps() {\n      return normalize.element({\n        ...parts.header.attrs,\n        id: getHeaderId(scope),\n        \"data-dragging\": dataAttr(dragging),\n        \"data-topmost\": dataAttr(isTopmost),\n        \"data-behind\": dataAttr(!isTopmost)\n      });\n    },\n    getBodyProps() {\n      return normalize.element({\n        ...parts.body.attrs,\n        \"data-dragging\": dataAttr(dragging),\n        hidden: isMinimized\n      });\n    }\n  };\n}\nvar panelStack = proxy({\n  stack: [],\n  count() {\n    return this.stack.length;\n  },\n  add(panelId) {\n    if (this.stack.includes(panelId)) return;\n    this.stack.push(panelId);\n  },\n  remove(panelId) {\n    const index = this.stack.indexOf(panelId);\n    if (index < 0) return;\n    this.stack.splice(index, 1);\n  },\n  bringToFront(id) {\n    this.remove(id);\n    this.add(id);\n  },\n  isTopmost(id) {\n    return this.stack[this.stack.length - 1] === id;\n  },\n  indexOf(id) {\n    return this.stack.indexOf(id);\n  }\n});\n\n// src/floating-panel.machine.ts\nvar {\n  not,\n  and\n} = createGuards();\nvar defaultTranslations = {\n  minimize: \"Minimize window\",\n  maximize: \"Maximize window\",\n  restore: \"Restore window\"\n};\nvar machine = createMachine({\n  props({\n    props: props2\n  }) {\n    ensureProps(props2, [\"id\"], \"floating-panel\");\n    return {\n      strategy: \"fixed\",\n      gridSize: 1,\n      defaultSize: {\n        width: 320,\n        height: 240\n      },\n      defaultPosition: {\n        x: 300,\n        y: 100\n      },\n      allowOverflow: true,\n      resizable: true,\n      draggable: true,\n      ...props2,\n      hasSpecifiedPosition: !!props2.defaultPosition || !!props2.position,\n      translations: {\n        ...defaultTranslations,\n        ...props2.translations\n      }\n    };\n  },\n  initialState({\n    prop\n  }) {\n    const open = prop(\"open\") || prop(\"defaultOpen\");\n    return open ? \"open\" : \"closed\";\n  },\n  context({\n    prop,\n    bindable\n  }) {\n    return {\n      size: bindable(() => ({\n        defaultValue: prop(\"defaultSize\"),\n        value: prop(\"size\"),\n        isEqual: isSizeEqual,\n        sync: true,\n        hash(v) {\n          return `W:${v.width} H:${v.height}`;\n        },\n        onChange(value) {\n          prop(\"onSizeChange\")?.({\n            size: value\n          });\n        }\n      })),\n      position: bindable(() => ({\n        defaultValue: prop(\"defaultPosition\"),\n        value: prop(\"position\"),\n        isEqual: isPointEqual,\n        sync: true,\n        hash(v) {\n          return `X:${v.x} Y:${v.y}`;\n        },\n        onChange(value) {\n          prop(\"onPositionChange\")?.({\n            position: value\n          });\n        }\n      })),\n      stage: bindable(() => ({\n        defaultValue: \"default\",\n        onChange(value) {\n          prop(\"onStageChange\")?.({\n            stage: value\n          });\n        }\n      })),\n      lastEventPosition: bindable(() => ({\n        defaultValue: null\n      })),\n      prevPosition: bindable(() => ({\n        defaultValue: null\n      })),\n      prevSize: bindable(() => ({\n        defaultValue: null\n      })),\n      isTopmost: bindable(() => ({\n        defaultValue: void 0\n      }))\n    };\n  },\n  computed: {\n    isMaximized: ({\n      context\n    }) => context.get(\"stage\") === \"maximized\",\n    isMinimized: ({\n      context\n    }) => context.get(\"stage\") === \"minimized\",\n    isStaged: ({\n      context\n    }) => context.get(\"stage\") !== \"default\",\n    canResize: ({\n      context,\n      prop\n    }) => (prop(\"resizable\") || !prop(\"disabled\")) && context.get(\"stage\") === \"default\",\n    canDrag: ({\n      prop,\n      computed\n    }) => (prop(\"draggable\") || !prop(\"disabled\")) && !computed(\"isMaximized\")\n  },\n  watch({\n    track,\n    context,\n    action,\n    prop\n  }) {\n    track([() => context.hash(\"position\")], () => {\n      action([\"setPositionStyle\"]);\n    });\n    track([() => context.hash(\"size\")], () => {\n      action([\"setSizeStyle\"]);\n    });\n    track([() => prop(\"open\")], () => {\n      action([\"toggleVisibility\"]);\n    });\n  },\n  effects: [\"trackPanelStack\"],\n  on: {\n    CONTENT_FOCUS: {\n      actions: [\"bringToFrontOfPanelStack\"]\n    },\n    SET_POSITION: {\n      actions: [\"setPosition\"]\n    },\n    SET_SIZE: {\n      actions: [\"setSize\"]\n    }\n  },\n  states: {\n    closed: {\n      tags: [\"closed\"],\n      on: {\n        \"CONTROLLED.OPEN\": {\n          target: \"open\",\n          actions: [\"setAnchorPosition\", \"setPositionStyle\", \"setSizeStyle\", \"focusContentEl\"]\n        },\n        OPEN: [{\n          guard: \"isOpenControlled\",\n          actions: [\"invokeOnOpen\"]\n        }, {\n          target: \"open\",\n          actions: [\"invokeOnOpen\", \"setAnchorPosition\", \"setPositionStyle\", \"setSizeStyle\", \"focusContentEl\"]\n        }]\n      }\n    },\n    open: {\n      tags: [\"open\"],\n      entry: [\"bringToFrontOfPanelStack\"],\n      effects: [\"trackBoundaryRect\"],\n      on: {\n        DRAG_START: {\n          guard: not(\"isMaximized\"),\n          target: \"open.dragging\",\n          actions: [\"setPrevPosition\"]\n        },\n        RESIZE_START: {\n          guard: not(\"isMinimized\"),\n          target: \"open.resizing\",\n          actions: [\"setPrevSize\"]\n        },\n        \"CONTROLLED.CLOSE\": {\n          target: \"closed\",\n          actions: [\"resetRect\", \"focusTriggerEl\"]\n        },\n        CLOSE: [{\n          guard: \"isOpenControlled\",\n          target: \"closed\",\n          actions: [\"invokeOnClose\"]\n        }, {\n          target: \"closed\",\n          actions: [\"invokeOnClose\", \"resetRect\", \"focusTriggerEl\"]\n        }],\n        ESCAPE: [{\n          guard: and(\"isOpenControlled\", \"closeOnEsc\"),\n          actions: [\"invokeOnClose\"]\n        }, {\n          guard: \"closeOnEsc\",\n          target: \"closed\",\n          actions: [\"invokeOnClose\", \"resetRect\", \"focusTriggerEl\"]\n        }],\n        MINIMIZE: {\n          actions: [\"setMinimized\"]\n        },\n        MAXIMIZE: {\n          actions: [\"setMaximized\"]\n        },\n        RESTORE: {\n          actions: [\"setRestored\"]\n        },\n        MOVE: {\n          actions: [\"setPositionFromKeyboard\"]\n        }\n      }\n    },\n    \"open.dragging\": {\n      tags: [\"open\"],\n      effects: [\"trackPointerMove\"],\n      exit: [\"clearPrevPosition\"],\n      on: {\n        DRAG: {\n          actions: [\"setPosition\"]\n        },\n        DRAG_END: {\n          target: \"open\",\n          actions: [\"invokeOnDragEnd\"]\n        },\n        \"CONTROLLED.CLOSE\": {\n          target: \"closed\",\n          actions: [\"resetRect\"]\n        },\n        CLOSE: [{\n          guard: \"isOpenControlled\",\n          target: \"closed\",\n          actions: [\"invokeOnClose\"]\n        }, {\n          target: \"closed\",\n          actions: [\"invokeOnClose\", \"resetRect\"]\n        }],\n        ESCAPE: {\n          target: \"open\"\n        }\n      }\n    },\n    \"open.resizing\": {\n      tags: [\"open\"],\n      effects: [\"trackPointerMove\"],\n      exit: [\"clearPrevSize\"],\n      on: {\n        DRAG: {\n          actions: [\"setSize\"]\n        },\n        DRAG_END: {\n          target: \"open\",\n          actions: [\"invokeOnResizeEnd\"]\n        },\n        \"CONTROLLED.CLOSE\": {\n          target: \"closed\",\n          actions: [\"resetRect\"]\n        },\n        CLOSE: [{\n          guard: \"isOpenControlled\",\n          target: \"closed\",\n          actions: [\"invokeOnClose\"]\n        }, {\n          target: \"closed\",\n          actions: [\"invokeOnClose\", \"resetRect\"]\n        }],\n        ESCAPE: {\n          target: \"open\"\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      closeOnEsc: ({\n        prop\n      }) => !!prop(\"closeOnEscape\"),\n      isMaximized: ({\n        context\n      }) => context.get(\"stage\") === \"maximized\",\n      isMinimized: ({\n        context\n      }) => context.get(\"stage\") === \"minimized\",\n      isOpenControlled: ({\n        prop\n      }) => prop(\"open\") != void 0\n    },\n    effects: {\n      trackPointerMove({\n        scope,\n        send,\n        event: evt,\n        prop\n      }) {\n        const doc = scope.getDoc();\n        const boundaryEl = prop(\"getBoundaryEl\")?.();\n        const boundaryRect = getBoundaryRect(scope, boundaryEl, false);\n        return trackPointerMove(doc, {\n          onPointerMove({\n            point,\n            event\n          }) {\n            const {\n              altKey,\n              shiftKey\n            } = event;\n            let x = clampValue(point.x, boundaryRect.x, boundaryRect.x + boundaryRect.width);\n            let y = clampValue(point.y, boundaryRect.y, boundaryRect.y + boundaryRect.height);\n            send({\n              type: \"DRAG\",\n              position: {\n                x,\n                y\n              },\n              axis: evt.axis,\n              altKey,\n              shiftKey\n            });\n          },\n          onPointerUp() {\n            send({\n              type: \"DRAG_END\"\n            });\n          }\n        });\n      },\n      trackBoundaryRect({\n        context,\n        scope,\n        prop,\n        computed\n      }) {\n        const win = scope.getWin();\n        let skip = true;\n        const exec = () => {\n          if (skip) {\n            skip = false;\n            return;\n          }\n          const boundaryEl2 = prop(\"getBoundaryEl\")?.();\n          let boundaryRect = getBoundaryRect(scope, boundaryEl2, false);\n          if (!computed(\"isMaximized\")) {\n            const rect = {\n              ...context.get(\"position\"),\n              ...context.get(\"size\")\n            };\n            boundaryRect = constrainRect(rect, boundaryRect);\n          }\n          context.set(\"size\", pick(boundaryRect, [\"width\", \"height\"]));\n          context.set(\"position\", pick(boundaryRect, [\"x\", \"y\"]));\n        };\n        const boundaryEl = prop(\"getBoundaryEl\")?.();\n        if (isHTMLElement(boundaryEl)) {\n          const obs = new win.ResizeObserver(exec);\n          obs.observe(boundaryEl);\n          return () => obs.disconnect();\n        }\n        return addDomEvent(win, \"resize\", exec);\n      },\n      trackPanelStack({\n        context,\n        scope\n      }) {\n        const unsub = subscribe(panelStack, () => {\n          context.set(\"isTopmost\", panelStack.isTopmost(scope.id));\n          const contentEl = getContentEl(scope);\n          if (!contentEl) return;\n          const index = panelStack.indexOf(scope.id);\n          if (index === -1) return;\n          contentEl.style.setProperty(\"--z-index\", `${index + 1}`);\n        });\n        return () => {\n          panelStack.remove(scope.id);\n          unsub();\n        };\n      }\n    },\n    actions: {\n      setAnchorPosition({\n        context,\n        prop,\n        scope\n      }) {\n        if (prop(\"hasSpecifiedPosition\")) return;\n        const hasPrevRect = context.get(\"prevPosition\") || context.get(\"prevSize\");\n        if (prop(\"persistRect\") && hasPrevRect) return;\n        raf(() => {\n          const triggerRect = getTriggerEl(scope);\n          const boundaryRect = getBoundaryRect(scope, prop(\"getBoundaryEl\")?.(), false);\n          let anchorPosition = prop(\"getAnchorPosition\")?.({\n            triggerRect: triggerRect ? DOMRect.fromRect(getElementRect(triggerRect)) : null,\n            boundaryRect: DOMRect.fromRect(boundaryRect)\n          });\n          if (!anchorPosition) {\n            const size = context.get(\"size\");\n            anchorPosition = {\n              x: boundaryRect.x + (boundaryRect.width - size.width) / 2,\n              y: boundaryRect.y + (boundaryRect.height - size.height) / 2\n            };\n          }\n          if (!anchorPosition) return;\n          context.set(\"position\", anchorPosition);\n        });\n      },\n      setPrevPosition({\n        context,\n        event\n      }) {\n        context.set(\"prevPosition\", {\n          ...context.get(\"position\")\n        });\n        context.set(\"lastEventPosition\", event.position);\n      },\n      clearPrevPosition({\n        context,\n        prop\n      }) {\n        if (!prop(\"persistRect\")) context.set(\"prevPosition\", null);\n        context.set(\"lastEventPosition\", null);\n      },\n      setPosition({\n        context,\n        event,\n        prop,\n        scope\n      }) {\n        let diff = subtractPoints(event.position, context.get(\"lastEventPosition\"));\n        diff.x = Math.round(diff.x / prop(\"gridSize\")) * prop(\"gridSize\");\n        diff.y = Math.round(diff.y / prop(\"gridSize\")) * prop(\"gridSize\");\n        const prevPosition = context.get(\"prevPosition\");\n        if (!prevPosition) return;\n        let position = addPoints(prevPosition, diff);\n        const boundaryEl = prop(\"getBoundaryEl\")?.();\n        const boundaryRect = getBoundaryRect(scope, boundaryEl, prop(\"allowOverflow\"));\n        position = clampPoint(position, context.get(\"size\"), boundaryRect);\n        context.set(\"position\", position);\n      },\n      setPositionStyle({\n        scope,\n        context\n      }) {\n        const el = getPositionerEl(scope);\n        const position = context.get(\"position\");\n        el?.style.setProperty(\"--x\", `${position.x}px`);\n        el?.style.setProperty(\"--y\", `${position.y}px`);\n      },\n      resetRect({\n        context,\n        prop\n      }) {\n        context.set(\"stage\", \"default\");\n        if (!prop(\"persistRect\")) {\n          context.set(\"position\", context.initial(\"position\"));\n          context.set(\"size\", context.initial(\"size\"));\n        }\n      },\n      setPrevSize({\n        context,\n        event\n      }) {\n        context.set(\"prevSize\", {\n          ...context.get(\"size\")\n        });\n        context.set(\"prevPosition\", {\n          ...context.get(\"position\")\n        });\n        context.set(\"lastEventPosition\", event.position);\n      },\n      clearPrevSize({\n        context\n      }) {\n        context.set(\"prevSize\", null);\n        context.set(\"prevPosition\", null);\n        context.set(\"lastEventPosition\", null);\n      },\n      setSize({\n        context,\n        event,\n        scope,\n        prop\n      }) {\n        const prevSize = context.get(\"prevSize\");\n        const prevPosition = context.get(\"prevPosition\");\n        const lastEventPosition = context.get(\"lastEventPosition\");\n        if (!prevSize || !prevPosition || !lastEventPosition) return;\n        const prevRect = createRect({\n          ...prevPosition,\n          ...prevSize\n        });\n        const offset = subtractPoints(event.position, lastEventPosition);\n        const nextRect = resizeRect(prevRect, offset, event.axis, {\n          scalingOriginMode: event.altKey ? \"center\" : \"extent\",\n          lockAspectRatio: !!prop(\"lockAspectRatio\") || event.shiftKey\n        });\n        let nextSize = pick(nextRect, [\"width\", \"height\"]);\n        let nextPosition = pick(nextRect, [\"x\", \"y\"]);\n        const boundaryEl = prop(\"getBoundaryEl\")?.();\n        const boundaryRect = getBoundaryRect(scope, boundaryEl, false);\n        nextSize = clampSize(nextSize, prop(\"minSize\"), prop(\"maxSize\"));\n        nextSize = clampSize(nextSize, prop(\"minSize\"), boundaryRect);\n        context.set(\"size\", nextSize);\n        if (nextPosition) {\n          const point = clampPoint(nextPosition, nextSize, boundaryRect);\n          context.set(\"position\", point);\n        }\n      },\n      setSizeStyle({\n        scope,\n        context\n      }) {\n        queueMicrotask(() => {\n          const el = getPositionerEl(scope);\n          const size = context.get(\"size\");\n          el?.style.setProperty(\"--width\", `${size.width}px`);\n          el?.style.setProperty(\"--height\", `${size.height}px`);\n        });\n      },\n      setMaximized({\n        context,\n        prop,\n        scope\n      }) {\n        context.set(\"stage\", \"maximized\");\n        context.set(\"prevSize\", context.get(\"size\"));\n        context.set(\"prevPosition\", context.get(\"position\"));\n        const boundaryEl = prop(\"getBoundaryEl\")?.();\n        const boundaryRect = getBoundaryRect(scope, boundaryEl, false);\n        context.set(\"position\", pick(boundaryRect, [\"x\", \"y\"]));\n        context.set(\"size\", pick(boundaryRect, [\"height\", \"width\"]));\n      },\n      setMinimized({\n        context,\n        scope\n      }) {\n        context.set(\"stage\", \"minimized\");\n        context.set(\"prevSize\", context.get(\"size\"));\n        context.set(\"prevPosition\", context.get(\"position\"));\n        const headerEl = getHeaderEl(scope);\n        if (!headerEl) return;\n        const size = {\n          ...context.get(\"size\"),\n          height: headerEl?.offsetHeight\n        };\n        context.set(\"size\", size);\n      },\n      setRestored({\n        context,\n        prop,\n        scope\n      }) {\n        const boundaryRect = getBoundaryRect(scope, prop(\"getBoundaryEl\")?.(), false);\n        context.set(\"stage\", \"default\");\n        const prevSize = context.get(\"prevSize\");\n        if (prevSize) {\n          let nextSize = prevSize;\n          nextSize = clampSize(nextSize, prop(\"minSize\"), prop(\"maxSize\"));\n          nextSize = clampSize(nextSize, prop(\"minSize\"), boundaryRect);\n          context.set(\"size\", nextSize);\n          context.set(\"prevSize\", null);\n        }\n        if (context.get(\"prevPosition\")) {\n          let nextPosition = context.get(\"prevPosition\");\n          nextPosition = clampPoint(nextPosition, context.get(\"size\"), boundaryRect);\n          context.set(\"position\", nextPosition);\n          context.set(\"prevPosition\", null);\n        }\n      },\n      setPositionFromKeyboard({\n        context,\n        event,\n        prop,\n        scope\n      }) {\n        invariant(event.step == null, \"step is required\");\n        const position = context.get(\"position\");\n        const step = event.step;\n        let nextPosition = match(event.direction, {\n          left: {\n            x: position.x - step,\n            y: position.y\n          },\n          right: {\n            x: position.x + step,\n            y: position.y\n          },\n          up: {\n            x: position.x,\n            y: position.y - step\n          },\n          down: {\n            x: position.x,\n            y: position.y + step\n          }\n        });\n        const boundaryEl = prop(\"getBoundaryEl\")?.();\n        const boundaryRect = getBoundaryRect(scope, boundaryEl, false);\n        nextPosition = clampPoint(nextPosition, context.get(\"size\"), boundaryRect);\n        context.set(\"position\", nextPosition);\n      },\n      bringToFrontOfPanelStack({\n        prop\n      }) {\n        panelStack.bringToFront(prop(\"id\"));\n      },\n      invokeOnOpen({\n        prop\n      }) {\n        prop(\"onOpenChange\")?.({\n          open: true\n        });\n      },\n      invokeOnClose({\n        prop\n      }) {\n        prop(\"onOpenChange\")?.({\n          open: false\n        });\n      },\n      invokeOnDragEnd({\n        context,\n        prop\n      }) {\n        prop(\"onPositionChangeEnd\")?.({\n          position: context.get(\"position\")\n        });\n      },\n      invokeOnResizeEnd({\n        context,\n        prop\n      }) {\n        prop(\"onSizeChangeEnd\")?.({\n          size: context.get(\"size\")\n        });\n      },\n      focusTriggerEl({\n        scope\n      }) {\n        raf(() => {\n          getTriggerEl(scope)?.focus();\n        });\n      },\n      focusContentEl({\n        scope\n      }) {\n        raf(() => {\n          getContentEl(scope)?.focus();\n        });\n      },\n      toggleVisibility({\n        send,\n        prop,\n        event\n      }) {\n        send({\n          type: prop(\"open\") ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\",\n          previousEvent: event\n        });\n      }\n    }\n  }\n});\nvar props = createProps()([\"allowOverflow\", \"closeOnEscape\", \"defaultOpen\", \"defaultPosition\", \"defaultSize\", \"dir\", \"disabled\", \"draggable\", \"getAnchorPosition\", \"getBoundaryEl\", \"getRootNode\", \"gridSize\", \"id\", \"ids\", \"lockAspectRatio\", \"maxSize\", \"minSize\", \"onOpenChange\", \"onPositionChange\", \"onPositionChangeEnd\", \"onSizeChange\", \"onSizeChangeEnd\", \"onStageChange\", \"open\", \"persistRect\", \"position\", \"resizable\", \"size\", \"strategy\", \"translations\"]);\nvar splitProps = createSplitProps(props);\nvar resizeTriggerProps = createProps()([\"axis\"]);\nvar splitResizeTriggerProps = createSplitProps(resizeTriggerProps);\nexport { anatomy, connect, machine, props, resizeTriggerProps, splitProps, splitResizeTriggerProps };","map":{"version":3,"names":["createAnatomy","raf","isHTMLElement","addDomEvent","trackPointerMove","dataAttr","getEventTarget","isSelfTarget","getEventStep","getEventKey","clampPoint","clampSize","createRect","subtractPoints","resizeRect","addPoints","getElementRect","isPointEqual","isSizeEqual","getWindowRect","constrainRect","invariant","match","pick","clampValue","ensureProps","createSplitProps","toPx","createGuards","createMachine","proxy","subscribe","createProps","anatomy","parts","build","getTriggerId","ctx","ids","trigger","id","getPositionerId","positioner","getContentId","content","getTitleId","title","getHeaderId","header","getTriggerEl","getById","getPositionerEl","getContentEl","getHeaderEl","getBoundaryRect","boundaryEl","allowOverflow","boundaryRect","getWin","x","width","y","minY","height","getResizeAxisStyle","axis","cursor","left","translate","right","top","bottom","Error","validStages","Set","connect","service","normalize","state","send","scope","prop","computed","context","open","hasTag","dragging","matches","resizing","isTopmost","get","size","position","isMaximized","isMinimized","isStaged","canResize","canDrag","resizable","draggable","setOpen","nextOpen","open2","type","setPosition","position2","setSize","size2","minimize","maximize","restore","getTriggerProps","button","attrs","disabled","onClick","event","defaultPrevented","src","getPositionerProps","element","style","getContentProps","role","tabIndex","hidden","overflow","onFocus","onKeyDown","step","keyMap","Escape","ArrowLeft","direction","ArrowRight","ArrowUp","ArrowDown","handler","dir","preventDefault","getCloseTriggerProps","closeTrigger","getStageTriggerProps","props2","has","stage","Array","from","join","translations","actionProps","minimized","maximized","default","stageTrigger","toUpperCase","getResizeTriggerProps","resizeTrigger","onPointerDown","currentTarget","setPointerCapture","pointerId","stopPropagation","clientX","clientY","onPointerUp","node","hasPointerCapture","releasePointerCapture","touchAction","getDragTriggerProps","dragTrigger","target","closest","onDoubleClick","WebkitUserSelect","userSelect","getControlProps","control","getTitleProps","getHeaderProps","getBodyProps","body","panelStack","stack","count","length","add","panelId","includes","push","remove","index","indexOf","splice","bringToFront","not","and","defaultTranslations","machine","props","strategy","gridSize","defaultSize","defaultPosition","hasSpecifiedPosition","initialState","bindable","defaultValue","value","isEqual","sync","hash","v","onChange","lastEventPosition","prevPosition","prevSize","watch","track","action","effects","on","CONTENT_FOCUS","actions","SET_POSITION","SET_SIZE","states","closed","tags","OPEN","guard","entry","DRAG_START","RESIZE_START","CLOSE","ESCAPE","MINIMIZE","MAXIMIZE","RESTORE","MOVE","exit","DRAG","DRAG_END","implementations","guards","closeOnEsc","isOpenControlled","evt","doc","getDoc","onPointerMove","point","altKey","shiftKey","trackBoundaryRect","win","skip","exec","boundaryEl2","rect","set","obs","ResizeObserver","observe","disconnect","trackPanelStack","unsub","contentEl","setProperty","setAnchorPosition","hasPrevRect","triggerRect","anchorPosition","DOMRect","fromRect","setPrevPosition","clearPrevPosition","diff","Math","round","setPositionStyle","el","resetRect","initial","setPrevSize","clearPrevSize","prevRect","offset","nextRect","scalingOriginMode","lockAspectRatio","nextSize","nextPosition","setSizeStyle","queueMicrotask","setMaximized","setMinimized","headerEl","offsetHeight","setRestored","setPositionFromKeyboard","up","down","bringToFrontOfPanelStack","invokeOnOpen","invokeOnClose","invokeOnDragEnd","invokeOnResizeEnd","focusTriggerEl","focus","focusContentEl","toggleVisibility","previousEvent","splitProps","resizeTriggerProps","splitResizeTriggerProps"],"sources":["C:/Users/tuanl/weekly-todo-frontend/node_modules/@zag-js/floating-panel/dist/index.mjs"],"sourcesContent":["import { createAnatomy } from '@zag-js/anatomy';\nimport { raf, isHTMLElement, addDomEvent, trackPointerMove, dataAttr, getEventTarget, isSelfTarget, getEventStep, getEventKey } from '@zag-js/dom-query';\nimport { clampPoint, clampSize, createRect, subtractPoints, resizeRect, addPoints, getElementRect, isPointEqual, isSizeEqual, getWindowRect, constrainRect } from '@zag-js/rect-utils';\nimport { invariant, match, pick, clampValue, ensureProps, createSplitProps, toPx } from '@zag-js/utils';\nimport { createGuards, createMachine } from '@zag-js/core';\nimport { proxy, subscribe } from '@zag-js/store';\nimport { createProps } from '@zag-js/types';\n\n// src/floating-panel.anatomy.ts\nvar anatomy = createAnatomy(\"floating-panel\").parts(\n  \"trigger\",\n  \"positioner\",\n  \"content\",\n  \"header\",\n  \"body\",\n  \"title\",\n  \"resizeTrigger\",\n  \"dragTrigger\",\n  \"stageTrigger\",\n  \"closeTrigger\",\n  \"control\"\n);\nvar parts = anatomy.build();\nvar getTriggerId = (ctx) => ctx.ids?.trigger ?? `float:${ctx.id}:trigger`;\nvar getPositionerId = (ctx) => ctx.ids?.positioner ?? `float:${ctx.id}:positioner`;\nvar getContentId = (ctx) => ctx.ids?.content ?? `float:${ctx.id}:content`;\nvar getTitleId = (ctx) => ctx.ids?.title ?? `float:${ctx.id}:title`;\nvar getHeaderId = (ctx) => ctx.ids?.header ?? `float:${ctx.id}:header`;\nvar getTriggerEl = (ctx) => ctx.getById(getTriggerId(ctx));\nvar getPositionerEl = (ctx) => ctx.getById(getPositionerId(ctx));\nvar getContentEl = (ctx) => ctx.getById(getContentId(ctx));\nvar getHeaderEl = (ctx) => ctx.getById(getHeaderId(ctx));\nvar getBoundaryRect = (ctx, boundaryEl, allowOverflow) => {\n  let boundaryRect;\n  if (isHTMLElement(boundaryEl)) {\n    boundaryRect = getElementRect(boundaryEl);\n  } else {\n    boundaryRect = getWindowRect(ctx.getWin());\n  }\n  if (allowOverflow) {\n    boundaryRect = createRect({\n      x: -boundaryRect.width,\n      // empty(left)\n      y: boundaryRect.minY,\n      width: boundaryRect.width * 3,\n      // empty(left) + win + empty(right)\n      height: boundaryRect.height * 2\n      // win + empty(bottom)\n    });\n  }\n  return pick(boundaryRect, [\"x\", \"y\", \"width\", \"height\"]);\n};\n\n// src/get-resize-axis-style.ts\nfunction getResizeAxisStyle(axis) {\n  switch (axis) {\n    case \"n\":\n      return {\n        cursor: \"n-resize\",\n        width: \"100%\",\n        left: \"50%\",\n        translate: \"-50%\"\n      };\n    case \"e\":\n      return {\n        cursor: \"e-resize\",\n        height: \"100%\",\n        right: 0,\n        top: \"50%\",\n        translate: \"0 -50%\"\n      };\n    case \"s\":\n      return {\n        cursor: \"s-resize\",\n        width: \"100%\",\n        bottom: 0,\n        left: \"50%\",\n        translate: \"-50%\"\n      };\n    case \"w\":\n      return {\n        cursor: \"w-resize\",\n        height: \"100%\",\n        left: 0,\n        top: \"50%\",\n        translate: \"0 -50%\"\n      };\n    case \"se\":\n      return {\n        cursor: \"se-resize\",\n        bottom: 0,\n        right: 0\n      };\n    case \"sw\":\n      return {\n        cursor: \"sw-resize\",\n        bottom: 0,\n        left: 0\n      };\n    case \"ne\":\n      return {\n        cursor: \"ne-resize\",\n        top: 0,\n        right: 0\n      };\n    case \"nw\":\n      return {\n        cursor: \"nw-resize\",\n        top: 0,\n        left: 0\n      };\n    default:\n      throw new Error(`Invalid axis: ${axis}`);\n  }\n}\nvar validStages = /* @__PURE__ */ new Set([\"minimized\", \"maximized\", \"default\"]);\nfunction connect(service, normalize) {\n  const { state, send, scope, prop, computed, context } = service;\n  const open = state.hasTag(\"open\");\n  const dragging = state.matches(\"open.dragging\");\n  const resizing = state.matches(\"open.resizing\");\n  const isTopmost = context.get(\"isTopmost\");\n  const size = context.get(\"size\");\n  const position = context.get(\"position\");\n  const isMaximized = computed(\"isMaximized\");\n  const isMinimized = computed(\"isMinimized\");\n  const isStaged = computed(\"isStaged\");\n  const canResize = computed(\"canResize\");\n  const canDrag = computed(\"canDrag\");\n  return {\n    open,\n    resizable: prop(\"resizable\"),\n    draggable: prop(\"draggable\"),\n    setOpen(nextOpen) {\n      const open2 = state.hasTag(\"open\");\n      if (open2 === nextOpen) return;\n      send({ type: nextOpen ? \"OPEN\" : \"CLOSE\" });\n    },\n    dragging,\n    resizing,\n    position,\n    size,\n    setPosition(position2) {\n      send({ type: \"SET_POSITION\", position: position2 });\n    },\n    setSize(size2) {\n      send({ type: \"SET_SIZE\", size: size2 });\n    },\n    minimize() {\n      send({ type: \"MINIMIZE\" });\n    },\n    maximize() {\n      send({ type: \"MAXIMIZE\" });\n    },\n    restore() {\n      send({ type: \"RESTORE\" });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        type: \"button\",\n        disabled: prop(\"disabled\"),\n        id: getTriggerId(scope),\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-dragging\": dataAttr(dragging),\n        \"aria-controls\": getContentId(scope),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (prop(\"disabled\")) return;\n          const open2 = state.hasTag(\"open\");\n          send({ type: open2 ? \"CLOSE\" : \"OPEN\", src: \"trigger\" });\n        }\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        ...parts.positioner.attrs,\n        id: getPositionerId(scope),\n        style: {\n          \"--width\": toPx(size?.width),\n          \"--height\": toPx(size?.height),\n          \"--x\": toPx(position?.x),\n          \"--y\": toPx(position?.y),\n          position: prop(\"strategy\"),\n          top: \"var(--y)\",\n          left: \"var(--x)\"\n        }\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        role: \"dialog\",\n        tabIndex: 0,\n        hidden: !open,\n        id: getContentId(scope),\n        \"aria-labelledby\": getTitleId(scope),\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-dragging\": dataAttr(dragging),\n        \"data-topmost\": dataAttr(isTopmost),\n        \"data-behind\": dataAttr(!isTopmost),\n        style: {\n          width: \"var(--width)\",\n          height: \"var(--height)\",\n          overflow: isMinimized ? \"hidden\" : void 0\n        },\n        onFocus() {\n          send({ type: \"CONTENT_FOCUS\" });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!isSelfTarget(event)) return;\n          const step = getEventStep(event) * prop(\"gridSize\");\n          const keyMap = {\n            Escape() {\n              if (!isTopmost) return;\n              send({ type: \"ESCAPE\" });\n            },\n            ArrowLeft() {\n              send({ type: \"MOVE\", direction: \"left\", step });\n            },\n            ArrowRight() {\n              send({ type: \"MOVE\", direction: \"right\", step });\n            },\n            ArrowUp() {\n              send({ type: \"MOVE\", direction: \"up\", step });\n            },\n            ArrowDown() {\n              send({ type: \"MOVE\", direction: \"down\", step });\n            }\n          };\n          const handler = keyMap[getEventKey(event, { dir: prop(\"dir\") })];\n          if (handler) {\n            event.preventDefault();\n            handler(event);\n          }\n        }\n      });\n    },\n    getCloseTriggerProps() {\n      return normalize.button({\n        ...parts.closeTrigger.attrs,\n        disabled: prop(\"disabled\"),\n        \"aria-label\": \"Close Window\",\n        type: \"button\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send({ type: \"CLOSE\" });\n        }\n      });\n    },\n    getStageTriggerProps(props2) {\n      if (!validStages.has(props2.stage)) {\n        throw new Error(`[zag-js] Invalid stage: ${props2.stage}. Must be one of: ${Array.from(validStages).join(\", \")}`);\n      }\n      const translations = prop(\"translations\");\n      const actionProps = match(props2.stage, {\n        minimized: () => ({\n          \"aria-label\": translations.minimize,\n          hidden: isStaged\n        }),\n        maximized: () => ({\n          \"aria-label\": translations.maximize,\n          hidden: isStaged\n        }),\n        default: () => ({\n          \"aria-label\": translations.restore,\n          hidden: !isStaged\n        })\n      });\n      return normalize.button({\n        ...parts.stageTrigger.attrs,\n        disabled: prop(\"disabled\"),\n        ...actionProps,\n        type: \"button\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          const type = match(props2.stage, {\n            minimized: () => \"MINIMIZE\",\n            maximized: () => \"MAXIMIZE\",\n            default: () => \"RESTORE\"\n          });\n          send({ type: type.toUpperCase() });\n        }\n      });\n    },\n    getResizeTriggerProps(props2) {\n      return normalize.element({\n        ...parts.resizeTrigger.attrs,\n        \"data-disabled\": dataAttr(!canResize),\n        \"data-axis\": props2.axis,\n        onPointerDown(event) {\n          if (!canResize || event.button == 2) return;\n          event.currentTarget.setPointerCapture(event.pointerId);\n          event.stopPropagation();\n          send({\n            type: \"RESIZE_START\",\n            axis: props2.axis,\n            position: { x: event.clientX, y: event.clientY }\n          });\n        },\n        onPointerUp(event) {\n          if (!canResize) return;\n          const node = event.currentTarget;\n          if (node.hasPointerCapture(event.pointerId)) {\n            node.releasePointerCapture(event.pointerId);\n          }\n        },\n        style: {\n          position: \"absolute\",\n          touchAction: \"none\",\n          ...getResizeAxisStyle(props2.axis)\n        }\n      });\n    },\n    getDragTriggerProps() {\n      return normalize.element({\n        ...parts.dragTrigger.attrs,\n        \"data-disabled\": dataAttr(!canDrag),\n        onPointerDown(event) {\n          if (!canDrag || event.button == 2) return;\n          const target = getEventTarget(event);\n          if (target?.closest(\"button\") || target?.closest(\"[data-no-drag]\")) {\n            return;\n          }\n          event.currentTarget.setPointerCapture(event.pointerId);\n          event.stopPropagation();\n          send({\n            type: \"DRAG_START\",\n            pointerId: event.pointerId,\n            position: { x: event.clientX, y: event.clientY }\n          });\n        },\n        onPointerUp(event) {\n          if (!canDrag) return;\n          const node = event.currentTarget;\n          if (node.hasPointerCapture(event.pointerId)) {\n            node.releasePointerCapture(event.pointerId);\n          }\n        },\n        onDoubleClick() {\n          send({ type: isMaximized ? \"RESTORE\" : \"MAXIMIZE\" });\n        },\n        style: {\n          WebkitUserSelect: \"none\",\n          userSelect: \"none\",\n          touchAction: \"none\",\n          cursor: \"move\"\n        }\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        \"data-disabled\": dataAttr(prop(\"disabled\")),\n        \"data-stage\": context.get(\"stage\")\n      });\n    },\n    getTitleProps() {\n      return normalize.element({\n        ...parts.title.attrs,\n        id: getTitleId(scope)\n      });\n    },\n    getHeaderProps() {\n      return normalize.element({\n        ...parts.header.attrs,\n        id: getHeaderId(scope),\n        \"data-dragging\": dataAttr(dragging),\n        \"data-topmost\": dataAttr(isTopmost),\n        \"data-behind\": dataAttr(!isTopmost)\n      });\n    },\n    getBodyProps() {\n      return normalize.element({\n        ...parts.body.attrs,\n        \"data-dragging\": dataAttr(dragging),\n        hidden: isMinimized\n      });\n    }\n  };\n}\nvar panelStack = proxy({\n  stack: [],\n  count() {\n    return this.stack.length;\n  },\n  add(panelId) {\n    if (this.stack.includes(panelId)) return;\n    this.stack.push(panelId);\n  },\n  remove(panelId) {\n    const index = this.stack.indexOf(panelId);\n    if (index < 0) return;\n    this.stack.splice(index, 1);\n  },\n  bringToFront(id) {\n    this.remove(id);\n    this.add(id);\n  },\n  isTopmost(id) {\n    return this.stack[this.stack.length - 1] === id;\n  },\n  indexOf(id) {\n    return this.stack.indexOf(id);\n  }\n});\n\n// src/floating-panel.machine.ts\nvar { not, and } = createGuards();\nvar defaultTranslations = {\n  minimize: \"Minimize window\",\n  maximize: \"Maximize window\",\n  restore: \"Restore window\"\n};\nvar machine = createMachine({\n  props({ props: props2 }) {\n    ensureProps(props2, [\"id\"], \"floating-panel\");\n    return {\n      strategy: \"fixed\",\n      gridSize: 1,\n      defaultSize: { width: 320, height: 240 },\n      defaultPosition: { x: 300, y: 100 },\n      allowOverflow: true,\n      resizable: true,\n      draggable: true,\n      ...props2,\n      hasSpecifiedPosition: !!props2.defaultPosition || !!props2.position,\n      translations: {\n        ...defaultTranslations,\n        ...props2.translations\n      }\n    };\n  },\n  initialState({ prop }) {\n    const open = prop(\"open\") || prop(\"defaultOpen\");\n    return open ? \"open\" : \"closed\";\n  },\n  context({ prop, bindable }) {\n    return {\n      size: bindable(() => ({\n        defaultValue: prop(\"defaultSize\"),\n        value: prop(\"size\"),\n        isEqual: isSizeEqual,\n        sync: true,\n        hash(v) {\n          return `W:${v.width} H:${v.height}`;\n        },\n        onChange(value) {\n          prop(\"onSizeChange\")?.({ size: value });\n        }\n      })),\n      position: bindable(() => ({\n        defaultValue: prop(\"defaultPosition\"),\n        value: prop(\"position\"),\n        isEqual: isPointEqual,\n        sync: true,\n        hash(v) {\n          return `X:${v.x} Y:${v.y}`;\n        },\n        onChange(value) {\n          prop(\"onPositionChange\")?.({ position: value });\n        }\n      })),\n      stage: bindable(() => ({\n        defaultValue: \"default\",\n        onChange(value) {\n          prop(\"onStageChange\")?.({ stage: value });\n        }\n      })),\n      lastEventPosition: bindable(() => ({\n        defaultValue: null\n      })),\n      prevPosition: bindable(() => ({\n        defaultValue: null\n      })),\n      prevSize: bindable(() => ({\n        defaultValue: null\n      })),\n      isTopmost: bindable(() => ({\n        defaultValue: void 0\n      }))\n    };\n  },\n  computed: {\n    isMaximized: ({ context }) => context.get(\"stage\") === \"maximized\",\n    isMinimized: ({ context }) => context.get(\"stage\") === \"minimized\",\n    isStaged: ({ context }) => context.get(\"stage\") !== \"default\",\n    canResize: ({ context, prop }) => (prop(\"resizable\") || !prop(\"disabled\")) && context.get(\"stage\") === \"default\",\n    canDrag: ({ prop, computed }) => (prop(\"draggable\") || !prop(\"disabled\")) && !computed(\"isMaximized\")\n  },\n  watch({ track, context, action, prop }) {\n    track([() => context.hash(\"position\")], () => {\n      action([\"setPositionStyle\"]);\n    });\n    track([() => context.hash(\"size\")], () => {\n      action([\"setSizeStyle\"]);\n    });\n    track([() => prop(\"open\")], () => {\n      action([\"toggleVisibility\"]);\n    });\n  },\n  effects: [\"trackPanelStack\"],\n  on: {\n    CONTENT_FOCUS: {\n      actions: [\"bringToFrontOfPanelStack\"]\n    },\n    SET_POSITION: {\n      actions: [\"setPosition\"]\n    },\n    SET_SIZE: {\n      actions: [\"setSize\"]\n    }\n  },\n  states: {\n    closed: {\n      tags: [\"closed\"],\n      on: {\n        \"CONTROLLED.OPEN\": {\n          target: \"open\",\n          actions: [\"setAnchorPosition\", \"setPositionStyle\", \"setSizeStyle\", \"focusContentEl\"]\n        },\n        OPEN: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\", \"setAnchorPosition\", \"setPositionStyle\", \"setSizeStyle\", \"focusContentEl\"]\n          }\n        ]\n      }\n    },\n    open: {\n      tags: [\"open\"],\n      entry: [\"bringToFrontOfPanelStack\"],\n      effects: [\"trackBoundaryRect\"],\n      on: {\n        DRAG_START: {\n          guard: not(\"isMaximized\"),\n          target: \"open.dragging\",\n          actions: [\"setPrevPosition\"]\n        },\n        RESIZE_START: {\n          guard: not(\"isMinimized\"),\n          target: \"open.resizing\",\n          actions: [\"setPrevSize\"]\n        },\n        \"CONTROLLED.CLOSE\": {\n          target: \"closed\",\n          actions: [\"resetRect\", \"focusTriggerEl\"]\n        },\n        CLOSE: [\n          {\n            guard: \"isOpenControlled\",\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\", \"resetRect\", \"focusTriggerEl\"]\n          }\n        ],\n        ESCAPE: [\n          {\n            guard: and(\"isOpenControlled\", \"closeOnEsc\"),\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            guard: \"closeOnEsc\",\n            target: \"closed\",\n            actions: [\"invokeOnClose\", \"resetRect\", \"focusTriggerEl\"]\n          }\n        ],\n        MINIMIZE: {\n          actions: [\"setMinimized\"]\n        },\n        MAXIMIZE: {\n          actions: [\"setMaximized\"]\n        },\n        RESTORE: {\n          actions: [\"setRestored\"]\n        },\n        MOVE: {\n          actions: [\"setPositionFromKeyboard\"]\n        }\n      }\n    },\n    \"open.dragging\": {\n      tags: [\"open\"],\n      effects: [\"trackPointerMove\"],\n      exit: [\"clearPrevPosition\"],\n      on: {\n        DRAG: {\n          actions: [\"setPosition\"]\n        },\n        DRAG_END: {\n          target: \"open\",\n          actions: [\"invokeOnDragEnd\"]\n        },\n        \"CONTROLLED.CLOSE\": {\n          target: \"closed\",\n          actions: [\"resetRect\"]\n        },\n        CLOSE: [\n          {\n            guard: \"isOpenControlled\",\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\", \"resetRect\"]\n          }\n        ],\n        ESCAPE: {\n          target: \"open\"\n        }\n      }\n    },\n    \"open.resizing\": {\n      tags: [\"open\"],\n      effects: [\"trackPointerMove\"],\n      exit: [\"clearPrevSize\"],\n      on: {\n        DRAG: {\n          actions: [\"setSize\"]\n        },\n        DRAG_END: {\n          target: \"open\",\n          actions: [\"invokeOnResizeEnd\"]\n        },\n        \"CONTROLLED.CLOSE\": {\n          target: \"closed\",\n          actions: [\"resetRect\"]\n        },\n        CLOSE: [\n          {\n            guard: \"isOpenControlled\",\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\", \"resetRect\"]\n          }\n        ],\n        ESCAPE: {\n          target: \"open\"\n        }\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      closeOnEsc: ({ prop }) => !!prop(\"closeOnEscape\"),\n      isMaximized: ({ context }) => context.get(\"stage\") === \"maximized\",\n      isMinimized: ({ context }) => context.get(\"stage\") === \"minimized\",\n      isOpenControlled: ({ prop }) => prop(\"open\") != void 0\n    },\n    effects: {\n      trackPointerMove({ scope, send, event: evt, prop }) {\n        const doc = scope.getDoc();\n        const boundaryEl = prop(\"getBoundaryEl\")?.();\n        const boundaryRect = getBoundaryRect(scope, boundaryEl, false);\n        return trackPointerMove(doc, {\n          onPointerMove({ point, event }) {\n            const { altKey, shiftKey } = event;\n            let x = clampValue(point.x, boundaryRect.x, boundaryRect.x + boundaryRect.width);\n            let y = clampValue(point.y, boundaryRect.y, boundaryRect.y + boundaryRect.height);\n            send({ type: \"DRAG\", position: { x, y }, axis: evt.axis, altKey, shiftKey });\n          },\n          onPointerUp() {\n            send({ type: \"DRAG_END\" });\n          }\n        });\n      },\n      trackBoundaryRect({ context, scope, prop, computed }) {\n        const win = scope.getWin();\n        let skip = true;\n        const exec = () => {\n          if (skip) {\n            skip = false;\n            return;\n          }\n          const boundaryEl2 = prop(\"getBoundaryEl\")?.();\n          let boundaryRect = getBoundaryRect(scope, boundaryEl2, false);\n          if (!computed(\"isMaximized\")) {\n            const rect = { ...context.get(\"position\"), ...context.get(\"size\") };\n            boundaryRect = constrainRect(rect, boundaryRect);\n          }\n          context.set(\"size\", pick(boundaryRect, [\"width\", \"height\"]));\n          context.set(\"position\", pick(boundaryRect, [\"x\", \"y\"]));\n        };\n        const boundaryEl = prop(\"getBoundaryEl\")?.();\n        if (isHTMLElement(boundaryEl)) {\n          const obs = new win.ResizeObserver(exec);\n          obs.observe(boundaryEl);\n          return () => obs.disconnect();\n        }\n        return addDomEvent(win, \"resize\", exec);\n      },\n      trackPanelStack({ context, scope }) {\n        const unsub = subscribe(panelStack, () => {\n          context.set(\"isTopmost\", panelStack.isTopmost(scope.id));\n          const contentEl = getContentEl(scope);\n          if (!contentEl) return;\n          const index = panelStack.indexOf(scope.id);\n          if (index === -1) return;\n          contentEl.style.setProperty(\"--z-index\", `${index + 1}`);\n        });\n        return () => {\n          panelStack.remove(scope.id);\n          unsub();\n        };\n      }\n    },\n    actions: {\n      setAnchorPosition({ context, prop, scope }) {\n        if (prop(\"hasSpecifiedPosition\")) return;\n        const hasPrevRect = context.get(\"prevPosition\") || context.get(\"prevSize\");\n        if (prop(\"persistRect\") && hasPrevRect) return;\n        raf(() => {\n          const triggerRect = getTriggerEl(scope);\n          const boundaryRect = getBoundaryRect(scope, prop(\"getBoundaryEl\")?.(), false);\n          let anchorPosition = prop(\"getAnchorPosition\")?.({\n            triggerRect: triggerRect ? DOMRect.fromRect(getElementRect(triggerRect)) : null,\n            boundaryRect: DOMRect.fromRect(boundaryRect)\n          });\n          if (!anchorPosition) {\n            const size = context.get(\"size\");\n            anchorPosition = {\n              x: boundaryRect.x + (boundaryRect.width - size.width) / 2,\n              y: boundaryRect.y + (boundaryRect.height - size.height) / 2\n            };\n          }\n          if (!anchorPosition) return;\n          context.set(\"position\", anchorPosition);\n        });\n      },\n      setPrevPosition({ context, event }) {\n        context.set(\"prevPosition\", { ...context.get(\"position\") });\n        context.set(\"lastEventPosition\", event.position);\n      },\n      clearPrevPosition({ context, prop }) {\n        if (!prop(\"persistRect\")) context.set(\"prevPosition\", null);\n        context.set(\"lastEventPosition\", null);\n      },\n      setPosition({ context, event, prop, scope }) {\n        let diff = subtractPoints(event.position, context.get(\"lastEventPosition\"));\n        diff.x = Math.round(diff.x / prop(\"gridSize\")) * prop(\"gridSize\");\n        diff.y = Math.round(diff.y / prop(\"gridSize\")) * prop(\"gridSize\");\n        const prevPosition = context.get(\"prevPosition\");\n        if (!prevPosition) return;\n        let position = addPoints(prevPosition, diff);\n        const boundaryEl = prop(\"getBoundaryEl\")?.();\n        const boundaryRect = getBoundaryRect(scope, boundaryEl, prop(\"allowOverflow\"));\n        position = clampPoint(position, context.get(\"size\"), boundaryRect);\n        context.set(\"position\", position);\n      },\n      setPositionStyle({ scope, context }) {\n        const el = getPositionerEl(scope);\n        const position = context.get(\"position\");\n        el?.style.setProperty(\"--x\", `${position.x}px`);\n        el?.style.setProperty(\"--y\", `${position.y}px`);\n      },\n      resetRect({ context, prop }) {\n        context.set(\"stage\", \"default\");\n        if (!prop(\"persistRect\")) {\n          context.set(\"position\", context.initial(\"position\"));\n          context.set(\"size\", context.initial(\"size\"));\n        }\n      },\n      setPrevSize({ context, event }) {\n        context.set(\"prevSize\", { ...context.get(\"size\") });\n        context.set(\"prevPosition\", { ...context.get(\"position\") });\n        context.set(\"lastEventPosition\", event.position);\n      },\n      clearPrevSize({ context }) {\n        context.set(\"prevSize\", null);\n        context.set(\"prevPosition\", null);\n        context.set(\"lastEventPosition\", null);\n      },\n      setSize({ context, event, scope, prop }) {\n        const prevSize = context.get(\"prevSize\");\n        const prevPosition = context.get(\"prevPosition\");\n        const lastEventPosition = context.get(\"lastEventPosition\");\n        if (!prevSize || !prevPosition || !lastEventPosition) return;\n        const prevRect = createRect({ ...prevPosition, ...prevSize });\n        const offset = subtractPoints(event.position, lastEventPosition);\n        const nextRect = resizeRect(prevRect, offset, event.axis, {\n          scalingOriginMode: event.altKey ? \"center\" : \"extent\",\n          lockAspectRatio: !!prop(\"lockAspectRatio\") || event.shiftKey\n        });\n        let nextSize = pick(nextRect, [\"width\", \"height\"]);\n        let nextPosition = pick(nextRect, [\"x\", \"y\"]);\n        const boundaryEl = prop(\"getBoundaryEl\")?.();\n        const boundaryRect = getBoundaryRect(scope, boundaryEl, false);\n        nextSize = clampSize(nextSize, prop(\"minSize\"), prop(\"maxSize\"));\n        nextSize = clampSize(nextSize, prop(\"minSize\"), boundaryRect);\n        context.set(\"size\", nextSize);\n        if (nextPosition) {\n          const point = clampPoint(nextPosition, nextSize, boundaryRect);\n          context.set(\"position\", point);\n        }\n      },\n      setSizeStyle({ scope, context }) {\n        queueMicrotask(() => {\n          const el = getPositionerEl(scope);\n          const size = context.get(\"size\");\n          el?.style.setProperty(\"--width\", `${size.width}px`);\n          el?.style.setProperty(\"--height\", `${size.height}px`);\n        });\n      },\n      setMaximized({ context, prop, scope }) {\n        context.set(\"stage\", \"maximized\");\n        context.set(\"prevSize\", context.get(\"size\"));\n        context.set(\"prevPosition\", context.get(\"position\"));\n        const boundaryEl = prop(\"getBoundaryEl\")?.();\n        const boundaryRect = getBoundaryRect(scope, boundaryEl, false);\n        context.set(\"position\", pick(boundaryRect, [\"x\", \"y\"]));\n        context.set(\"size\", pick(boundaryRect, [\"height\", \"width\"]));\n      },\n      setMinimized({ context, scope }) {\n        context.set(\"stage\", \"minimized\");\n        context.set(\"prevSize\", context.get(\"size\"));\n        context.set(\"prevPosition\", context.get(\"position\"));\n        const headerEl = getHeaderEl(scope);\n        if (!headerEl) return;\n        const size = {\n          ...context.get(\"size\"),\n          height: headerEl?.offsetHeight\n        };\n        context.set(\"size\", size);\n      },\n      setRestored({ context, prop, scope }) {\n        const boundaryRect = getBoundaryRect(scope, prop(\"getBoundaryEl\")?.(), false);\n        context.set(\"stage\", \"default\");\n        const prevSize = context.get(\"prevSize\");\n        if (prevSize) {\n          let nextSize = prevSize;\n          nextSize = clampSize(nextSize, prop(\"minSize\"), prop(\"maxSize\"));\n          nextSize = clampSize(nextSize, prop(\"minSize\"), boundaryRect);\n          context.set(\"size\", nextSize);\n          context.set(\"prevSize\", null);\n        }\n        if (context.get(\"prevPosition\")) {\n          let nextPosition = context.get(\"prevPosition\");\n          nextPosition = clampPoint(nextPosition, context.get(\"size\"), boundaryRect);\n          context.set(\"position\", nextPosition);\n          context.set(\"prevPosition\", null);\n        }\n      },\n      setPositionFromKeyboard({ context, event, prop, scope }) {\n        invariant(event.step == null, \"step is required\");\n        const position = context.get(\"position\");\n        const step = event.step;\n        let nextPosition = match(event.direction, {\n          left: { x: position.x - step, y: position.y },\n          right: { x: position.x + step, y: position.y },\n          up: { x: position.x, y: position.y - step },\n          down: { x: position.x, y: position.y + step }\n        });\n        const boundaryEl = prop(\"getBoundaryEl\")?.();\n        const boundaryRect = getBoundaryRect(scope, boundaryEl, false);\n        nextPosition = clampPoint(nextPosition, context.get(\"size\"), boundaryRect);\n        context.set(\"position\", nextPosition);\n      },\n      bringToFrontOfPanelStack({ prop }) {\n        panelStack.bringToFront(prop(\"id\"));\n      },\n      invokeOnOpen({ prop }) {\n        prop(\"onOpenChange\")?.({ open: true });\n      },\n      invokeOnClose({ prop }) {\n        prop(\"onOpenChange\")?.({ open: false });\n      },\n      invokeOnDragEnd({ context, prop }) {\n        prop(\"onPositionChangeEnd\")?.({ position: context.get(\"position\") });\n      },\n      invokeOnResizeEnd({ context, prop }) {\n        prop(\"onSizeChangeEnd\")?.({ size: context.get(\"size\") });\n      },\n      focusTriggerEl({ scope }) {\n        raf(() => {\n          getTriggerEl(scope)?.focus();\n        });\n      },\n      focusContentEl({ scope }) {\n        raf(() => {\n          getContentEl(scope)?.focus();\n        });\n      },\n      toggleVisibility({ send, prop, event }) {\n        send({ type: prop(\"open\") ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: event });\n      }\n    }\n  }\n});\nvar props = createProps()([\n  \"allowOverflow\",\n  \"closeOnEscape\",\n  \"defaultOpen\",\n  \"defaultPosition\",\n  \"defaultSize\",\n  \"dir\",\n  \"disabled\",\n  \"draggable\",\n  \"getAnchorPosition\",\n  \"getBoundaryEl\",\n  \"getRootNode\",\n  \"gridSize\",\n  \"id\",\n  \"ids\",\n  \"lockAspectRatio\",\n  \"maxSize\",\n  \"minSize\",\n  \"onOpenChange\",\n  \"onPositionChange\",\n  \"onPositionChangeEnd\",\n  \"onSizeChange\",\n  \"onSizeChangeEnd\",\n  \"onStageChange\",\n  \"open\",\n  \"persistRect\",\n  \"position\",\n  \"resizable\",\n  \"size\",\n  \"strategy\",\n  \"translations\"\n]);\nvar splitProps = createSplitProps(props);\nvar resizeTriggerProps = createProps()([\"axis\"]);\nvar splitResizeTriggerProps = createSplitProps(resizeTriggerProps);\n\nexport { anatomy, connect, machine, props, resizeTriggerProps, splitProps, splitResizeTriggerProps };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}