{"ast":null,"code":"import { createAnatomy } from '@zag-js/anatomy';\nimport { raf, setElementValue, addDomEvent, isSafari, requestPointerLock, observeAttributes, trackFormControl, MAX_Z_INDEX, dataAttr, getEventPoint, getWindow, isLeftClick, ariaAttr, isComposingEvent, getEventStep, isModifierKey } from '@zag-js/dom-query';\nimport { isValueAtMax, isValueAtMin, clampValue, decrementValue, incrementValue, callAll, isValueWithinRange, createSplitProps, roundToDpr, wrap } from '@zag-js/utils';\nimport { setup, memo } from '@zag-js/core';\nimport { NumberParser } from '@internationalized/number';\nimport { createProps } from '@zag-js/types';\n\n// src/number-input.anatomy.ts\nvar anatomy = createAnatomy(\"numberInput\").parts(\"root\", \"label\", \"input\", \"control\", \"valueText\", \"incrementTrigger\", \"decrementTrigger\", \"scrubber\");\nvar parts = anatomy.build();\nvar getRootId = ctx => ctx.ids?.root ?? `number-input:${ctx.id}`;\nvar getInputId = ctx => ctx.ids?.input ?? `number-input:${ctx.id}:input`;\nvar getIncrementTriggerId = ctx => ctx.ids?.incrementTrigger ?? `number-input:${ctx.id}:inc`;\nvar getDecrementTriggerId = ctx => ctx.ids?.decrementTrigger ?? `number-input:${ctx.id}:dec`;\nvar getScrubberId = ctx => ctx.ids?.scrubber ?? `number-input:${ctx.id}:scrubber`;\nvar getCursorId = ctx => `number-input:${ctx.id}:cursor`;\nvar getLabelId = ctx => ctx.ids?.label ?? `number-input:${ctx.id}:label`;\nvar getInputEl = ctx => ctx.getById(getInputId(ctx));\nvar getIncrementTriggerEl = ctx => ctx.getById(getIncrementTriggerId(ctx));\nvar getDecrementTriggerEl = ctx => ctx.getById(getDecrementTriggerId(ctx));\nvar getCursorEl = ctx => ctx.getDoc().getElementById(getCursorId(ctx));\nvar getPressedTriggerEl = (ctx, hint) => {\n  let btnEl = null;\n  if (hint === \"increment\") {\n    btnEl = getIncrementTriggerEl(ctx);\n  }\n  if (hint === \"decrement\") {\n    btnEl = getDecrementTriggerEl(ctx);\n  }\n  return btnEl;\n};\nvar setupVirtualCursor = (ctx, point) => {\n  if (isSafari()) return;\n  createVirtualCursor(ctx, point);\n  return () => {\n    getCursorEl(ctx)?.remove();\n  };\n};\nvar preventTextSelection = ctx => {\n  const doc = ctx.getDoc();\n  const html = doc.documentElement;\n  const body = doc.body;\n  body.style.pointerEvents = \"none\";\n  html.style.userSelect = \"none\";\n  html.style.cursor = \"ew-resize\";\n  return () => {\n    body.style.pointerEvents = \"\";\n    html.style.userSelect = \"\";\n    html.style.cursor = \"\";\n    if (!html.style.length) {\n      html.removeAttribute(\"style\");\n    }\n    if (!body.style.length) {\n      body.removeAttribute(\"style\");\n    }\n  };\n};\nvar getMousemoveValue = (ctx, opts) => {\n  const {\n    point,\n    isRtl,\n    event\n  } = opts;\n  const win = ctx.getWin();\n  const x = roundToDpr(event.movementX, win.devicePixelRatio);\n  const y = roundToDpr(event.movementY, win.devicePixelRatio);\n  let hint = x > 0 ? \"increment\" : x < 0 ? \"decrement\" : null;\n  if (isRtl && hint === \"increment\") hint = \"decrement\";\n  if (isRtl && hint === \"decrement\") hint = \"increment\";\n  const newPoint = {\n    x: point.x + x,\n    y: point.y + y\n  };\n  const width = win.innerWidth;\n  const half = roundToDpr(7.5, win.devicePixelRatio);\n  newPoint.x = wrap(newPoint.x + half, width) - half;\n  return {\n    hint,\n    point: newPoint\n  };\n};\nvar createVirtualCursor = (ctx, point) => {\n  const doc = ctx.getDoc();\n  const el = doc.createElement(\"div\");\n  el.className = \"scrubber--cursor\";\n  el.id = getCursorId(ctx);\n  Object.assign(el.style, {\n    width: \"15px\",\n    height: \"15px\",\n    position: \"fixed\",\n    pointerEvents: \"none\",\n    left: \"0px\",\n    top: \"0px\",\n    zIndex: MAX_Z_INDEX,\n    transform: point ? `translate3d(${point.x}px, ${point.y}px, 0px)` : void 0,\n    willChange: \"transform\"\n  });\n  el.innerHTML = `\n      <svg width=\"46\" height=\"15\" style=\"left: -15.5px; position: absolute; top: 0; filter: drop-shadow(rgba(0, 0, 0, 0.4) 0px 1px 1.1px);\">\n        <g transform=\"translate(2 3)\">\n          <path fill-rule=\"evenodd\" d=\"M 15 4.5L 15 2L 11.5 5.5L 15 9L 15 6.5L 31 6.5L 31 9L 34.5 5.5L 31 2L 31 4.5Z\" style=\"stroke-width: 2px; stroke: white;\"></path>\n          <path fill-rule=\"evenodd\" d=\"M 15 4.5L 15 2L 11.5 5.5L 15 9L 15 6.5L 31 6.5L 31 9L 34.5 5.5L 31 2L 31 4.5Z\"></path>\n        </g>\n      </svg>`;\n  doc.body.appendChild(el);\n};\n\n// src/number-input.connect.ts\nfunction connect(service, normalize) {\n  const {\n    state,\n    send,\n    prop,\n    scope,\n    computed\n  } = service;\n  const focused = state.hasTag(\"focus\");\n  const disabled = computed(\"isDisabled\");\n  const readOnly = prop(\"readOnly\");\n  const empty = computed(\"isValueEmpty\");\n  const invalid = computed(\"isOutOfRange\") || !!prop(\"invalid\");\n  const isIncrementDisabled = disabled || !computed(\"canIncrement\") || readOnly;\n  const isDecrementDisabled = disabled || !computed(\"canDecrement\") || readOnly;\n  const translations = prop(\"translations\");\n  return {\n    focused,\n    invalid,\n    empty,\n    value: computed(\"formattedValue\"),\n    valueAsNumber: computed(\"valueAsNumber\"),\n    setValue(value) {\n      send({\n        type: \"VALUE.SET\",\n        value\n      });\n    },\n    clearValue() {\n      send({\n        type: \"VALUE.CLEAR\"\n      });\n    },\n    increment() {\n      send({\n        type: \"VALUE.INCREMENT\"\n      });\n    },\n    decrement() {\n      send({\n        type: \"VALUE.DECREMENT\"\n      });\n    },\n    setToMax() {\n      send({\n        type: \"VALUE.SET\",\n        value: prop(\"max\")\n      });\n    },\n    setToMin() {\n      send({\n        type: \"VALUE.SET\",\n        value: prop(\"min\")\n      });\n    },\n    focus() {\n      getInputEl(scope)?.focus();\n    },\n    getRootProps() {\n      return normalize.element({\n        id: getRootId(scope),\n        ...parts.root.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-focus\": dataAttr(focused),\n        \"data-invalid\": dataAttr(invalid)\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-focus\": dataAttr(focused),\n        \"data-invalid\": dataAttr(invalid),\n        id: getLabelId(scope),\n        htmlFor: getInputId(scope)\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        dir: prop(\"dir\"),\n        role: \"group\",\n        \"aria-disabled\": disabled,\n        \"data-focus\": dataAttr(focused),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n        \"aria-invalid\": ariaAttr(invalid)\n      });\n    },\n    getValueTextProps() {\n      return normalize.element({\n        ...parts.valueText.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-focus\": dataAttr(focused)\n      });\n    },\n    getInputProps() {\n      return normalize.input({\n        ...parts.input.attrs,\n        dir: prop(\"dir\"),\n        name: prop(\"name\"),\n        form: prop(\"form\"),\n        id: getInputId(scope),\n        role: \"spinbutton\",\n        defaultValue: computed(\"formattedValue\"),\n        pattern: prop(\"pattern\"),\n        inputMode: prop(\"inputMode\"),\n        \"aria-invalid\": ariaAttr(invalid),\n        \"data-invalid\": dataAttr(invalid),\n        disabled,\n        \"data-disabled\": dataAttr(disabled),\n        readOnly,\n        required: prop(\"required\"),\n        autoComplete: \"off\",\n        autoCorrect: \"off\",\n        spellCheck: \"false\",\n        type: \"text\",\n        \"aria-roledescription\": \"numberfield\",\n        \"aria-valuemin\": prop(\"min\"),\n        \"aria-valuemax\": prop(\"max\"),\n        \"aria-valuenow\": Number.isNaN(computed(\"valueAsNumber\")) ? void 0 : computed(\"valueAsNumber\"),\n        \"aria-valuetext\": computed(\"valueText\"),\n        onFocus() {\n          send({\n            type: \"INPUT.FOCUS\"\n          });\n        },\n        onBlur() {\n          send({\n            type: \"INPUT.BLUR\"\n          });\n        },\n        onInput(event) {\n          send({\n            type: \"INPUT.CHANGE\",\n            target: event.currentTarget,\n            hint: \"set\"\n          });\n        },\n        onBeforeInput(event) {\n          try {\n            const {\n              selectionStart,\n              selectionEnd,\n              value\n            } = event.currentTarget;\n            const nextValue = value.slice(0, selectionStart) + (event.data ?? \"\") + value.slice(selectionEnd);\n            const isValid = computed(\"parser\").isValidPartialNumber(nextValue);\n            if (!isValid) {\n              event.preventDefault();\n            }\n          } catch {}\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (readOnly) return;\n          if (isComposingEvent(event)) return;\n          const step = getEventStep(event) * prop(\"step\");\n          const keyMap = {\n            ArrowUp() {\n              send({\n                type: \"INPUT.ARROW_UP\",\n                step\n              });\n              event.preventDefault();\n            },\n            ArrowDown() {\n              send({\n                type: \"INPUT.ARROW_DOWN\",\n                step\n              });\n              event.preventDefault();\n            },\n            Home() {\n              if (isModifierKey(event)) return;\n              send({\n                type: \"INPUT.HOME\"\n              });\n              event.preventDefault();\n            },\n            End() {\n              if (isModifierKey(event)) return;\n              send({\n                type: \"INPUT.END\"\n              });\n              event.preventDefault();\n            },\n            Enter() {\n              send({\n                type: \"INPUT.ENTER\"\n              });\n            }\n          };\n          const exec = keyMap[event.key];\n          exec?.(event);\n        }\n      });\n    },\n    getDecrementTriggerProps() {\n      return normalize.button({\n        ...parts.decrementTrigger.attrs,\n        dir: prop(\"dir\"),\n        id: getDecrementTriggerId(scope),\n        disabled: isDecrementDisabled,\n        \"data-disabled\": dataAttr(isDecrementDisabled),\n        \"aria-label\": translations.decrementLabel,\n        type: \"button\",\n        tabIndex: -1,\n        \"aria-controls\": getInputId(scope),\n        onPointerDown(event) {\n          if (isDecrementDisabled || !isLeftClick(event)) return;\n          send({\n            type: \"TRIGGER.PRESS_DOWN\",\n            hint: \"decrement\",\n            pointerType: event.pointerType\n          });\n          if (event.pointerType === \"mouse\") {\n            event.preventDefault();\n          }\n          if (event.pointerType === \"touch\") {\n            event.currentTarget?.focus({\n              preventScroll: true\n            });\n          }\n        },\n        onPointerUp(event) {\n          send({\n            type: \"TRIGGER.PRESS_UP\",\n            hint: \"decrement\",\n            pointerType: event.pointerType\n          });\n        },\n        onPointerLeave() {\n          if (isDecrementDisabled) return;\n          send({\n            type: \"TRIGGER.PRESS_UP\",\n            hint: \"decrement\"\n          });\n        }\n      });\n    },\n    getIncrementTriggerProps() {\n      return normalize.button({\n        ...parts.incrementTrigger.attrs,\n        dir: prop(\"dir\"),\n        id: getIncrementTriggerId(scope),\n        disabled: isIncrementDisabled,\n        \"data-disabled\": dataAttr(isIncrementDisabled),\n        \"aria-label\": translations.incrementLabel,\n        type: \"button\",\n        tabIndex: -1,\n        \"aria-controls\": getInputId(scope),\n        onPointerDown(event) {\n          if (isIncrementDisabled || !isLeftClick(event)) return;\n          send({\n            type: \"TRIGGER.PRESS_DOWN\",\n            hint: \"increment\",\n            pointerType: event.pointerType\n          });\n          if (event.pointerType === \"mouse\") {\n            event.preventDefault();\n          }\n          if (event.pointerType === \"touch\") {\n            event.currentTarget?.focus({\n              preventScroll: true\n            });\n          }\n        },\n        onPointerUp(event) {\n          send({\n            type: \"TRIGGER.PRESS_UP\",\n            hint: \"increment\",\n            pointerType: event.pointerType\n          });\n        },\n        onPointerLeave(event) {\n          send({\n            type: \"TRIGGER.PRESS_UP\",\n            hint: \"increment\",\n            pointerType: event.pointerType\n          });\n        }\n      });\n    },\n    getScrubberProps() {\n      return normalize.element({\n        ...parts.scrubber.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": dataAttr(disabled),\n        id: getScrubberId(scope),\n        role: \"presentation\",\n        onMouseDown(event) {\n          if (disabled) return;\n          const point = getEventPoint(event);\n          const win = getWindow(event.currentTarget);\n          const dpr = win.devicePixelRatio;\n          point.x = point.x - roundToDpr(7.5, dpr);\n          point.y = point.y - roundToDpr(7.5, dpr);\n          send({\n            type: \"SCRUBBER.PRESS_DOWN\",\n            point\n          });\n          event.preventDefault();\n        },\n        style: {\n          cursor: disabled ? void 0 : \"ew-resize\"\n        }\n      });\n    }\n  };\n}\n\n// src/cursor.ts\nfunction recordCursor(inputEl) {\n  if (!inputEl || inputEl.ownerDocument.activeElement !== inputEl) return;\n  try {\n    const {\n      selectionStart: start,\n      selectionEnd: end,\n      value\n    } = inputEl;\n    const beforeTxt = value.substring(0, start);\n    const afterTxt = value.substring(end);\n    return {\n      start,\n      end,\n      value,\n      beforeTxt,\n      afterTxt\n    };\n  } catch {}\n}\nfunction restoreCursor(inputEl, selection) {\n  if (!inputEl || inputEl.ownerDocument.activeElement !== inputEl) return;\n  if (!selection) {\n    inputEl.setSelectionRange(inputEl.value.length, inputEl.value.length);\n    return;\n  }\n  try {\n    const {\n      value\n    } = inputEl;\n    const {\n      beforeTxt = \"\",\n      afterTxt = \"\",\n      start\n    } = selection;\n    let startPos = value.length;\n    if (value.endsWith(afterTxt)) {\n      startPos = value.length - afterTxt.length;\n    } else if (value.startsWith(beforeTxt)) {\n      startPos = beforeTxt.length;\n    } else if (start != null) {\n      const beforeLastChar = beforeTxt[start - 1];\n      const newIndex = value.indexOf(beforeLastChar, start - 1);\n      if (newIndex !== -1) {\n        startPos = newIndex + 1;\n      }\n    }\n    inputEl.setSelectionRange(startPos, startPos);\n  } catch {}\n}\nvar createFormatter = (locale, options = {}) => {\n  return new Intl.NumberFormat(locale, options);\n};\nvar createParser = (locale, options = {}) => {\n  return new NumberParser(locale, options);\n};\nvar parseValue = (value, params) => {\n  const {\n    prop,\n    computed\n  } = params;\n  if (!prop(\"formatOptions\")) return parseFloat(value);\n  return computed(\"parser\").parse(String(value));\n};\nvar formatValue = (value, params) => {\n  const {\n    prop,\n    computed\n  } = params;\n  if (Number.isNaN(value)) return \"\";\n  if (!prop(\"formatOptions\")) return value.toString();\n  return computed(\"formatter\").format(value);\n};\nvar getDefaultStep = (step, formatOptions) => {\n  let defaultStep = step !== void 0 && !Number.isNaN(step) ? step : 1;\n  if (formatOptions?.style === \"percent\" && (step === void 0 || Number.isNaN(step))) {\n    defaultStep = 0.01;\n  }\n  return defaultStep;\n};\n\n// src/number-input.machine.ts\nvar {\n  choose,\n  guards,\n  createMachine\n} = setup();\nvar {\n  not,\n  and\n} = guards;\nvar machine = createMachine({\n  props({\n    props: props2\n  }) {\n    const step = getDefaultStep(props2.step, props2.formatOptions);\n    return {\n      dir: \"ltr\",\n      locale: \"en-US\",\n      focusInputOnChange: true,\n      clampValueOnBlur: !props2.allowOverflow,\n      allowOverflow: false,\n      inputMode: \"decimal\",\n      pattern: \"[0-9]*(.[0-9]+)?\",\n      defaultValue: \"\",\n      step,\n      min: Number.MIN_SAFE_INTEGER,\n      max: Number.MAX_SAFE_INTEGER,\n      spinOnPress: true,\n      ...props2,\n      translations: {\n        incrementLabel: \"increment value\",\n        decrementLabel: \"decrease value\",\n        ...props2.translations\n      }\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context({\n    prop,\n    bindable,\n    getComputed\n  }) {\n    return {\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        onChange(value) {\n          const computed = getComputed();\n          const valueAsNumber = parseValue(value, {\n            computed,\n            prop\n          });\n          prop(\"onValueChange\")?.({\n            value,\n            valueAsNumber\n          });\n        }\n      })),\n      hint: bindable(() => ({\n        defaultValue: null\n      })),\n      scrubberCursorPoint: bindable(() => ({\n        defaultValue: null,\n        hash(value) {\n          return value ? `x:${value.x}, y:${value.y}` : \"\";\n        }\n      })),\n      fieldsetDisabled: bindable(() => ({\n        defaultValue: false\n      }))\n    };\n  },\n  computed: {\n    isRtl: ({\n      prop\n    }) => prop(\"dir\") === \"rtl\",\n    valueAsNumber: ({\n      context,\n      computed,\n      prop\n    }) => parseValue(context.get(\"value\"), {\n      computed,\n      prop\n    }),\n    formattedValue: ({\n      computed,\n      prop\n    }) => formatValue(computed(\"valueAsNumber\"), {\n      computed,\n      prop\n    }),\n    isAtMin: ({\n      computed,\n      prop\n    }) => isValueAtMin(computed(\"valueAsNumber\"), prop(\"min\")),\n    isAtMax: ({\n      computed,\n      prop\n    }) => isValueAtMax(computed(\"valueAsNumber\"), prop(\"max\")),\n    isOutOfRange: ({\n      computed,\n      prop\n    }) => !isValueWithinRange(computed(\"valueAsNumber\"), prop(\"min\"), prop(\"max\")),\n    isValueEmpty: ({\n      context\n    }) => context.get(\"value\") === \"\",\n    isDisabled: ({\n      prop,\n      context\n    }) => !!prop(\"disabled\") || context.get(\"fieldsetDisabled\"),\n    canIncrement: ({\n      prop,\n      computed\n    }) => prop(\"allowOverflow\") || !computed(\"isAtMax\"),\n    canDecrement: ({\n      prop,\n      computed\n    }) => prop(\"allowOverflow\") || !computed(\"isAtMin\"),\n    valueText: ({\n      prop,\n      context\n    }) => prop(\"translations\").valueText?.(context.get(\"value\")),\n    formatter: memo(({\n      prop\n    }) => [prop(\"locale\"), prop(\"formatOptions\")], (locale, formatOptions) => createFormatter(locale, formatOptions)),\n    parser: memo(({\n      prop\n    }) => [prop(\"locale\"), prop(\"formatOptions\")], (locale, formatOptions) => createParser(locale, formatOptions))\n  },\n  watch({\n    track,\n    action,\n    context,\n    computed,\n    prop\n  }) {\n    track([() => context.get(\"value\"), () => prop(\"locale\")], () => {\n      action([\"syncInputElement\"]);\n    });\n    track([() => computed(\"isOutOfRange\")], () => {\n      action([\"invokeOnInvalid\"]);\n    });\n    track([() => context.hash(\"scrubberCursorPoint\")], () => {\n      action([\"setVirtualCursorPosition\"]);\n    });\n  },\n  effects: [\"trackFormControl\"],\n  on: {\n    \"VALUE.SET\": {\n      actions: [\"setRawValue\"]\n    },\n    \"VALUE.CLEAR\": {\n      actions: [\"clearValue\"]\n    },\n    \"VALUE.INCREMENT\": {\n      actions: [\"increment\"]\n    },\n    \"VALUE.DECREMENT\": {\n      actions: [\"decrement\"]\n    }\n  },\n  states: {\n    idle: {\n      on: {\n        \"TRIGGER.PRESS_DOWN\": [{\n          guard: \"isTouchPointer\",\n          target: \"before:spin\",\n          actions: [\"setHint\"]\n        }, {\n          target: \"before:spin\",\n          actions: [\"focusInput\", \"invokeOnFocus\", \"setHint\"]\n        }],\n        \"SCRUBBER.PRESS_DOWN\": {\n          target: \"scrubbing\",\n          actions: [\"focusInput\", \"invokeOnFocus\", \"setHint\", \"setCursorPoint\"]\n        },\n        \"INPUT.FOCUS\": {\n          target: \"focused\",\n          actions: [\"focusInput\", \"invokeOnFocus\"]\n        }\n      }\n    },\n    focused: {\n      tags: [\"focus\"],\n      effects: [\"attachWheelListener\"],\n      on: {\n        \"TRIGGER.PRESS_DOWN\": [{\n          guard: \"isTouchPointer\",\n          target: \"before:spin\",\n          actions: [\"setHint\"]\n        }, {\n          target: \"before:spin\",\n          actions: [\"focusInput\", \"setHint\"]\n        }],\n        \"SCRUBBER.PRESS_DOWN\": {\n          target: \"scrubbing\",\n          actions: [\"focusInput\", \"setHint\", \"setCursorPoint\"]\n        },\n        \"INPUT.ARROW_UP\": {\n          actions: [\"increment\"]\n        },\n        \"INPUT.ARROW_DOWN\": {\n          actions: [\"decrement\"]\n        },\n        \"INPUT.HOME\": {\n          actions: [\"decrementToMin\"]\n        },\n        \"INPUT.END\": {\n          actions: [\"incrementToMax\"]\n        },\n        \"INPUT.CHANGE\": {\n          actions: [\"setValue\", \"setHint\"]\n        },\n        \"INPUT.BLUR\": [{\n          guard: and(\"clampValueOnBlur\", not(\"isInRange\")),\n          target: \"idle\",\n          actions: [\"setClampedValue\", \"clearHint\", \"invokeOnBlur\"]\n        }, {\n          guard: not(\"isInRange\"),\n          target: \"idle\",\n          actions: [\"setFormattedValue\", \"clearHint\", \"invokeOnBlur\", \"invokeOnInvalid\"]\n        }, {\n          target: \"idle\",\n          actions: [\"setFormattedValue\", \"clearHint\", \"invokeOnBlur\"]\n        }],\n        \"INPUT.ENTER\": {\n          actions: [\"setFormattedValue\", \"clearHint\", \"invokeOnBlur\"]\n        }\n      }\n    },\n    \"before:spin\": {\n      tags: [\"focus\"],\n      effects: [\"trackButtonDisabled\", \"waitForChangeDelay\"],\n      entry: choose([{\n        guard: \"isIncrementHint\",\n        actions: [\"increment\"]\n      }, {\n        guard: \"isDecrementHint\",\n        actions: [\"decrement\"]\n      }]),\n      on: {\n        CHANGE_DELAY: {\n          target: \"spinning\",\n          guard: and(\"isInRange\", \"spinOnPress\")\n        },\n        \"TRIGGER.PRESS_UP\": [{\n          guard: \"isTouchPointer\",\n          target: \"focused\",\n          actions: [\"clearHint\"]\n        }, {\n          target: \"focused\",\n          actions: [\"focusInput\", \"clearHint\"]\n        }]\n      }\n    },\n    spinning: {\n      tags: [\"focus\"],\n      effects: [\"trackButtonDisabled\", \"spinValue\"],\n      on: {\n        SPIN: [{\n          guard: \"isIncrementHint\",\n          actions: [\"increment\"]\n        }, {\n          guard: \"isDecrementHint\",\n          actions: [\"decrement\"]\n        }],\n        \"TRIGGER.PRESS_UP\": {\n          target: \"focused\",\n          actions: [\"focusInput\", \"clearHint\"]\n        }\n      }\n    },\n    scrubbing: {\n      tags: [\"focus\"],\n      effects: [\"activatePointerLock\", \"trackMousemove\", \"setupVirtualCursor\", \"preventTextSelection\"],\n      on: {\n        \"SCRUBBER.POINTER_UP\": {\n          target: \"focused\",\n          actions: [\"focusInput\", \"clearCursorPoint\"]\n        },\n        \"SCRUBBER.POINTER_MOVE\": [{\n          guard: \"isIncrementHint\",\n          actions: [\"increment\", \"setCursorPoint\"]\n        }, {\n          guard: \"isDecrementHint\",\n          actions: [\"decrement\", \"setCursorPoint\"]\n        }]\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      clampValueOnBlur: ({\n        prop\n      }) => prop(\"clampValueOnBlur\"),\n      spinOnPress: ({\n        prop\n      }) => !!prop(\"spinOnPress\"),\n      isInRange: ({\n        computed\n      }) => !computed(\"isOutOfRange\"),\n      isDecrementHint: ({\n        context,\n        event\n      }) => (event.hint ?? context.get(\"hint\")) === \"decrement\",\n      isIncrementHint: ({\n        context,\n        event\n      }) => (event.hint ?? context.get(\"hint\")) === \"increment\",\n      isTouchPointer: ({\n        event\n      }) => event.pointerType === \"touch\"\n    },\n    effects: {\n      waitForChangeDelay({\n        send\n      }) {\n        const id = setTimeout(() => {\n          send({\n            type: \"CHANGE_DELAY\"\n          });\n        }, 300);\n        return () => clearTimeout(id);\n      },\n      spinValue({\n        send\n      }) {\n        const id = setInterval(() => {\n          send({\n            type: \"SPIN\"\n          });\n        }, 50);\n        return () => clearInterval(id);\n      },\n      trackFormControl({\n        context,\n        scope\n      }) {\n        const inputEl = getInputEl(scope);\n        return trackFormControl(inputEl, {\n          onFieldsetDisabledChange(disabled) {\n            context.set(\"fieldsetDisabled\", disabled);\n          },\n          onFormReset() {\n            context.set(\"value\", context.initial(\"value\"));\n          }\n        });\n      },\n      setupVirtualCursor({\n        context,\n        scope\n      }) {\n        const point = context.get(\"scrubberCursorPoint\");\n        return setupVirtualCursor(scope, point);\n      },\n      preventTextSelection({\n        scope\n      }) {\n        return preventTextSelection(scope);\n      },\n      trackButtonDisabled({\n        context,\n        scope,\n        send\n      }) {\n        const hint = context.get(\"hint\");\n        const btn = getPressedTriggerEl(scope, hint);\n        return observeAttributes(btn, {\n          attributes: [\"disabled\"],\n          callback() {\n            send({\n              type: \"TRIGGER.PRESS_UP\",\n              src: \"attr\"\n            });\n          }\n        });\n      },\n      attachWheelListener({\n        scope,\n        send,\n        prop\n      }) {\n        const inputEl = getInputEl(scope);\n        if (!inputEl || !scope.isActiveElement(inputEl) || !prop(\"allowMouseWheel\")) return;\n        function onWheel(event) {\n          event.preventDefault();\n          const dir = Math.sign(event.deltaY) * -1;\n          if (dir === 1) {\n            send({\n              type: \"VALUE.INCREMENT\"\n            });\n          } else if (dir === -1) {\n            send({\n              type: \"VALUE.DECREMENT\"\n            });\n          }\n        }\n        return addDomEvent(inputEl, \"wheel\", onWheel, {\n          passive: false\n        });\n      },\n      activatePointerLock({\n        scope\n      }) {\n        if (isSafari()) return;\n        return requestPointerLock(scope.getDoc());\n      },\n      trackMousemove({\n        scope,\n        send,\n        context,\n        computed\n      }) {\n        const doc = scope.getDoc();\n        function onMousemove(event) {\n          const point = context.get(\"scrubberCursorPoint\");\n          const isRtl = computed(\"isRtl\");\n          const value = getMousemoveValue(scope, {\n            point,\n            isRtl,\n            event\n          });\n          if (!value.hint) return;\n          send({\n            type: \"SCRUBBER.POINTER_MOVE\",\n            hint: value.hint,\n            point: value.point\n          });\n        }\n        function onMouseup() {\n          send({\n            type: \"SCRUBBER.POINTER_UP\"\n          });\n        }\n        return callAll(addDomEvent(doc, \"mousemove\", onMousemove, false), addDomEvent(doc, \"mouseup\", onMouseup, false));\n      }\n    },\n    actions: {\n      focusInput({\n        scope,\n        prop\n      }) {\n        if (!prop(\"focusInputOnChange\")) return;\n        const inputEl = getInputEl(scope);\n        if (scope.isActiveElement(inputEl)) return;\n        raf(() => inputEl?.focus({\n          preventScroll: true\n        }));\n      },\n      increment({\n        context,\n        event,\n        prop,\n        computed\n      }) {\n        let nextValue = incrementValue(computed(\"valueAsNumber\"), event.step ?? prop(\"step\"));\n        if (!prop(\"allowOverflow\")) nextValue = clampValue(nextValue, prop(\"min\"), prop(\"max\"));\n        context.set(\"value\", formatValue(nextValue, {\n          computed,\n          prop\n        }));\n      },\n      decrement({\n        context,\n        event,\n        prop,\n        computed\n      }) {\n        let nextValue = decrementValue(computed(\"valueAsNumber\"), event.step ?? prop(\"step\"));\n        if (!prop(\"allowOverflow\")) nextValue = clampValue(nextValue, prop(\"min\"), prop(\"max\"));\n        context.set(\"value\", formatValue(nextValue, {\n          computed,\n          prop\n        }));\n      },\n      setClampedValue({\n        context,\n        prop,\n        computed\n      }) {\n        const nextValue = clampValue(computed(\"valueAsNumber\"), prop(\"min\"), prop(\"max\"));\n        context.set(\"value\", formatValue(nextValue, {\n          computed,\n          prop\n        }));\n      },\n      setRawValue({\n        context,\n        event,\n        prop,\n        computed\n      }) {\n        let nextValue = parseValue(event.value, {\n          computed,\n          prop\n        });\n        if (!prop(\"allowOverflow\")) nextValue = clampValue(nextValue, prop(\"min\"), prop(\"max\"));\n        context.set(\"value\", formatValue(nextValue, {\n          computed,\n          prop\n        }));\n      },\n      setValue({\n        context,\n        event\n      }) {\n        const value = event.target?.value ?? event.value;\n        context.set(\"value\", value);\n      },\n      clearValue({\n        context\n      }) {\n        context.set(\"value\", \"\");\n      },\n      incrementToMax({\n        context,\n        prop,\n        computed\n      }) {\n        const value = formatValue(prop(\"max\"), {\n          computed,\n          prop\n        });\n        context.set(\"value\", value);\n      },\n      decrementToMin({\n        context,\n        prop,\n        computed\n      }) {\n        const value = formatValue(prop(\"min\"), {\n          computed,\n          prop\n        });\n        context.set(\"value\", value);\n      },\n      setHint({\n        context,\n        event\n      }) {\n        context.set(\"hint\", event.hint);\n      },\n      clearHint({\n        context\n      }) {\n        context.set(\"hint\", null);\n      },\n      invokeOnFocus({\n        computed,\n        prop\n      }) {\n        prop(\"onFocusChange\")?.({\n          focused: true,\n          value: computed(\"formattedValue\"),\n          valueAsNumber: computed(\"valueAsNumber\")\n        });\n      },\n      invokeOnBlur({\n        computed,\n        prop\n      }) {\n        prop(\"onFocusChange\")?.({\n          focused: false,\n          value: computed(\"formattedValue\"),\n          valueAsNumber: computed(\"valueAsNumber\")\n        });\n      },\n      invokeOnInvalid({\n        computed,\n        prop,\n        event\n      }) {\n        if (event.type === \"INPUT.CHANGE\") return;\n        const reason = computed(\"valueAsNumber\") > prop(\"max\") ? \"rangeOverflow\" : \"rangeUnderflow\";\n        prop(\"onValueInvalid\")?.({\n          reason,\n          value: computed(\"formattedValue\"),\n          valueAsNumber: computed(\"valueAsNumber\")\n        });\n      },\n      syncInputElement({\n        context,\n        event,\n        computed,\n        scope\n      }) {\n        const value = event.type.endsWith(\"CHANGE\") ? context.get(\"value\") : computed(\"formattedValue\");\n        const inputEl = getInputEl(scope);\n        const sel = recordCursor(inputEl);\n        raf(() => {\n          setElementValue(inputEl, value);\n          restoreCursor(inputEl, sel);\n        });\n      },\n      setFormattedValue({\n        context,\n        computed\n      }) {\n        context.set(\"value\", computed(\"formattedValue\"));\n      },\n      setCursorPoint({\n        context,\n        event\n      }) {\n        context.set(\"scrubberCursorPoint\", event.point);\n      },\n      clearCursorPoint({\n        context\n      }) {\n        context.set(\"scrubberCursorPoint\", null);\n      },\n      setVirtualCursorPosition({\n        context,\n        scope\n      }) {\n        const cursorEl = getCursorEl(scope);\n        const point = context.get(\"scrubberCursorPoint\");\n        if (!cursorEl || !point) return;\n        cursorEl.style.transform = `translate3d(${point.x}px, ${point.y}px, 0px)`;\n      }\n    }\n  }\n});\nvar props = createProps()([\"allowMouseWheel\", \"allowOverflow\", \"clampValueOnBlur\", \"dir\", \"disabled\", \"focusInputOnChange\", \"form\", \"formatOptions\", \"getRootNode\", \"id\", \"ids\", \"inputMode\", \"invalid\", \"locale\", \"max\", \"min\", \"name\", \"onFocusChange\", \"onValueChange\", \"onValueInvalid\", \"pattern\", \"required\", \"readOnly\", \"spinOnPress\", \"step\", \"translations\", \"value\", \"defaultValue\"]);\nvar splitProps = createSplitProps(props);\nexport { anatomy, connect, machine, props, splitProps };","map":{"version":3,"names":["createAnatomy","raf","setElementValue","addDomEvent","isSafari","requestPointerLock","observeAttributes","trackFormControl","MAX_Z_INDEX","dataAttr","getEventPoint","getWindow","isLeftClick","ariaAttr","isComposingEvent","getEventStep","isModifierKey","isValueAtMax","isValueAtMin","clampValue","decrementValue","incrementValue","callAll","isValueWithinRange","createSplitProps","roundToDpr","wrap","setup","memo","NumberParser","createProps","anatomy","parts","build","getRootId","ctx","ids","root","id","getInputId","input","getIncrementTriggerId","incrementTrigger","getDecrementTriggerId","decrementTrigger","getScrubberId","scrubber","getCursorId","getLabelId","label","getInputEl","getById","getIncrementTriggerEl","getDecrementTriggerEl","getCursorEl","getDoc","getElementById","getPressedTriggerEl","hint","btnEl","setupVirtualCursor","point","createVirtualCursor","remove","preventTextSelection","doc","html","documentElement","body","style","pointerEvents","userSelect","cursor","length","removeAttribute","getMousemoveValue","opts","isRtl","event","win","getWin","x","movementX","devicePixelRatio","y","movementY","newPoint","width","innerWidth","half","el","createElement","className","Object","assign","height","position","left","top","zIndex","transform","willChange","innerHTML","appendChild","connect","service","normalize","state","send","prop","scope","computed","focused","hasTag","disabled","readOnly","empty","invalid","isIncrementDisabled","isDecrementDisabled","translations","value","valueAsNumber","setValue","type","clearValue","increment","decrement","setToMax","setToMin","focus","getRootProps","element","attrs","dir","getLabelProps","htmlFor","getControlProps","control","role","getValueTextProps","valueText","getInputProps","name","form","defaultValue","pattern","inputMode","required","autoComplete","autoCorrect","spellCheck","Number","isNaN","onFocus","onBlur","onInput","target","currentTarget","onBeforeInput","selectionStart","selectionEnd","nextValue","slice","data","isValid","isValidPartialNumber","preventDefault","onKeyDown","defaultPrevented","step","keyMap","ArrowUp","ArrowDown","Home","End","Enter","exec","key","getDecrementTriggerProps","button","decrementLabel","tabIndex","onPointerDown","pointerType","preventScroll","onPointerUp","onPointerLeave","getIncrementTriggerProps","incrementLabel","getScrubberProps","onMouseDown","dpr","recordCursor","inputEl","ownerDocument","activeElement","start","end","beforeTxt","substring","afterTxt","restoreCursor","selection","setSelectionRange","startPos","endsWith","startsWith","beforeLastChar","newIndex","indexOf","createFormatter","locale","options","Intl","NumberFormat","createParser","parseValue","params","parseFloat","parse","String","formatValue","toString","format","getDefaultStep","formatOptions","defaultStep","choose","guards","createMachine","not","and","machine","props","props2","focusInputOnChange","clampValueOnBlur","allowOverflow","min","MIN_SAFE_INTEGER","max","MAX_SAFE_INTEGER","spinOnPress","initialState","context","bindable","getComputed","onChange","scrubberCursorPoint","hash","fieldsetDisabled","get","formattedValue","isAtMin","isAtMax","isOutOfRange","isValueEmpty","isDisabled","canIncrement","canDecrement","formatter","parser","watch","track","action","effects","on","actions","states","idle","guard","tags","entry","CHANGE_DELAY","spinning","SPIN","scrubbing","implementations","isInRange","isDecrementHint","isIncrementHint","isTouchPointer","waitForChangeDelay","setTimeout","clearTimeout","spinValue","setInterval","clearInterval","onFieldsetDisabledChange","set","onFormReset","initial","trackButtonDisabled","btn","attributes","callback","src","attachWheelListener","isActiveElement","onWheel","Math","sign","deltaY","passive","activatePointerLock","trackMousemove","onMousemove","onMouseup","focusInput","setClampedValue","setRawValue","incrementToMax","decrementToMin","setHint","clearHint","invokeOnFocus","invokeOnBlur","invokeOnInvalid","reason","syncInputElement","sel","setFormattedValue","setCursorPoint","clearCursorPoint","setVirtualCursorPosition","cursorEl","splitProps"],"sources":["C:/Users/tuanl/weekly-todo-frontend/node_modules/@zag-js/number-input/dist/index.mjs"],"sourcesContent":["import { createAnatomy } from '@zag-js/anatomy';\nimport { raf, setElementValue, addDomEvent, isSafari, requestPointerLock, observeAttributes, trackFormControl, MAX_Z_INDEX, dataAttr, getEventPoint, getWindow, isLeftClick, ariaAttr, isComposingEvent, getEventStep, isModifierKey } from '@zag-js/dom-query';\nimport { isValueAtMax, isValueAtMin, clampValue, decrementValue, incrementValue, callAll, isValueWithinRange, createSplitProps, roundToDpr, wrap } from '@zag-js/utils';\nimport { setup, memo } from '@zag-js/core';\nimport { NumberParser } from '@internationalized/number';\nimport { createProps } from '@zag-js/types';\n\n// src/number-input.anatomy.ts\nvar anatomy = createAnatomy(\"numberInput\").parts(\n  \"root\",\n  \"label\",\n  \"input\",\n  \"control\",\n  \"valueText\",\n  \"incrementTrigger\",\n  \"decrementTrigger\",\n  \"scrubber\"\n);\nvar parts = anatomy.build();\nvar getRootId = (ctx) => ctx.ids?.root ?? `number-input:${ctx.id}`;\nvar getInputId = (ctx) => ctx.ids?.input ?? `number-input:${ctx.id}:input`;\nvar getIncrementTriggerId = (ctx) => ctx.ids?.incrementTrigger ?? `number-input:${ctx.id}:inc`;\nvar getDecrementTriggerId = (ctx) => ctx.ids?.decrementTrigger ?? `number-input:${ctx.id}:dec`;\nvar getScrubberId = (ctx) => ctx.ids?.scrubber ?? `number-input:${ctx.id}:scrubber`;\nvar getCursorId = (ctx) => `number-input:${ctx.id}:cursor`;\nvar getLabelId = (ctx) => ctx.ids?.label ?? `number-input:${ctx.id}:label`;\nvar getInputEl = (ctx) => ctx.getById(getInputId(ctx));\nvar getIncrementTriggerEl = (ctx) => ctx.getById(getIncrementTriggerId(ctx));\nvar getDecrementTriggerEl = (ctx) => ctx.getById(getDecrementTriggerId(ctx));\nvar getCursorEl = (ctx) => ctx.getDoc().getElementById(getCursorId(ctx));\nvar getPressedTriggerEl = (ctx, hint) => {\n  let btnEl = null;\n  if (hint === \"increment\") {\n    btnEl = getIncrementTriggerEl(ctx);\n  }\n  if (hint === \"decrement\") {\n    btnEl = getDecrementTriggerEl(ctx);\n  }\n  return btnEl;\n};\nvar setupVirtualCursor = (ctx, point) => {\n  if (isSafari()) return;\n  createVirtualCursor(ctx, point);\n  return () => {\n    getCursorEl(ctx)?.remove();\n  };\n};\nvar preventTextSelection = (ctx) => {\n  const doc = ctx.getDoc();\n  const html = doc.documentElement;\n  const body = doc.body;\n  body.style.pointerEvents = \"none\";\n  html.style.userSelect = \"none\";\n  html.style.cursor = \"ew-resize\";\n  return () => {\n    body.style.pointerEvents = \"\";\n    html.style.userSelect = \"\";\n    html.style.cursor = \"\";\n    if (!html.style.length) {\n      html.removeAttribute(\"style\");\n    }\n    if (!body.style.length) {\n      body.removeAttribute(\"style\");\n    }\n  };\n};\nvar getMousemoveValue = (ctx, opts) => {\n  const { point, isRtl, event } = opts;\n  const win = ctx.getWin();\n  const x = roundToDpr(event.movementX, win.devicePixelRatio);\n  const y = roundToDpr(event.movementY, win.devicePixelRatio);\n  let hint = x > 0 ? \"increment\" : x < 0 ? \"decrement\" : null;\n  if (isRtl && hint === \"increment\") hint = \"decrement\";\n  if (isRtl && hint === \"decrement\") hint = \"increment\";\n  const newPoint = { x: point.x + x, y: point.y + y };\n  const width = win.innerWidth;\n  const half = roundToDpr(7.5, win.devicePixelRatio);\n  newPoint.x = wrap(newPoint.x + half, width) - half;\n  return { hint, point: newPoint };\n};\nvar createVirtualCursor = (ctx, point) => {\n  const doc = ctx.getDoc();\n  const el = doc.createElement(\"div\");\n  el.className = \"scrubber--cursor\";\n  el.id = getCursorId(ctx);\n  Object.assign(el.style, {\n    width: \"15px\",\n    height: \"15px\",\n    position: \"fixed\",\n    pointerEvents: \"none\",\n    left: \"0px\",\n    top: \"0px\",\n    zIndex: MAX_Z_INDEX,\n    transform: point ? `translate3d(${point.x}px, ${point.y}px, 0px)` : void 0,\n    willChange: \"transform\"\n  });\n  el.innerHTML = `\n      <svg width=\"46\" height=\"15\" style=\"left: -15.5px; position: absolute; top: 0; filter: drop-shadow(rgba(0, 0, 0, 0.4) 0px 1px 1.1px);\">\n        <g transform=\"translate(2 3)\">\n          <path fill-rule=\"evenodd\" d=\"M 15 4.5L 15 2L 11.5 5.5L 15 9L 15 6.5L 31 6.5L 31 9L 34.5 5.5L 31 2L 31 4.5Z\" style=\"stroke-width: 2px; stroke: white;\"></path>\n          <path fill-rule=\"evenodd\" d=\"M 15 4.5L 15 2L 11.5 5.5L 15 9L 15 6.5L 31 6.5L 31 9L 34.5 5.5L 31 2L 31 4.5Z\"></path>\n        </g>\n      </svg>`;\n  doc.body.appendChild(el);\n};\n\n// src/number-input.connect.ts\nfunction connect(service, normalize) {\n  const { state, send, prop, scope, computed } = service;\n  const focused = state.hasTag(\"focus\");\n  const disabled = computed(\"isDisabled\");\n  const readOnly = prop(\"readOnly\");\n  const empty = computed(\"isValueEmpty\");\n  const invalid = computed(\"isOutOfRange\") || !!prop(\"invalid\");\n  const isIncrementDisabled = disabled || !computed(\"canIncrement\") || readOnly;\n  const isDecrementDisabled = disabled || !computed(\"canDecrement\") || readOnly;\n  const translations = prop(\"translations\");\n  return {\n    focused,\n    invalid,\n    empty,\n    value: computed(\"formattedValue\"),\n    valueAsNumber: computed(\"valueAsNumber\"),\n    setValue(value) {\n      send({ type: \"VALUE.SET\", value });\n    },\n    clearValue() {\n      send({ type: \"VALUE.CLEAR\" });\n    },\n    increment() {\n      send({ type: \"VALUE.INCREMENT\" });\n    },\n    decrement() {\n      send({ type: \"VALUE.DECREMENT\" });\n    },\n    setToMax() {\n      send({ type: \"VALUE.SET\", value: prop(\"max\") });\n    },\n    setToMin() {\n      send({ type: \"VALUE.SET\", value: prop(\"min\") });\n    },\n    focus() {\n      getInputEl(scope)?.focus();\n    },\n    getRootProps() {\n      return normalize.element({\n        id: getRootId(scope),\n        ...parts.root.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-focus\": dataAttr(focused),\n        \"data-invalid\": dataAttr(invalid)\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-focus\": dataAttr(focused),\n        \"data-invalid\": dataAttr(invalid),\n        id: getLabelId(scope),\n        htmlFor: getInputId(scope)\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        dir: prop(\"dir\"),\n        role: \"group\",\n        \"aria-disabled\": disabled,\n        \"data-focus\": dataAttr(focused),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n        \"aria-invalid\": ariaAttr(invalid)\n      });\n    },\n    getValueTextProps() {\n      return normalize.element({\n        ...parts.valueText.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-focus\": dataAttr(focused)\n      });\n    },\n    getInputProps() {\n      return normalize.input({\n        ...parts.input.attrs,\n        dir: prop(\"dir\"),\n        name: prop(\"name\"),\n        form: prop(\"form\"),\n        id: getInputId(scope),\n        role: \"spinbutton\",\n        defaultValue: computed(\"formattedValue\"),\n        pattern: prop(\"pattern\"),\n        inputMode: prop(\"inputMode\"),\n        \"aria-invalid\": ariaAttr(invalid),\n        \"data-invalid\": dataAttr(invalid),\n        disabled,\n        \"data-disabled\": dataAttr(disabled),\n        readOnly,\n        required: prop(\"required\"),\n        autoComplete: \"off\",\n        autoCorrect: \"off\",\n        spellCheck: \"false\",\n        type: \"text\",\n        \"aria-roledescription\": \"numberfield\",\n        \"aria-valuemin\": prop(\"min\"),\n        \"aria-valuemax\": prop(\"max\"),\n        \"aria-valuenow\": Number.isNaN(computed(\"valueAsNumber\")) ? void 0 : computed(\"valueAsNumber\"),\n        \"aria-valuetext\": computed(\"valueText\"),\n        onFocus() {\n          send({ type: \"INPUT.FOCUS\" });\n        },\n        onBlur() {\n          send({ type: \"INPUT.BLUR\" });\n        },\n        onInput(event) {\n          send({ type: \"INPUT.CHANGE\", target: event.currentTarget, hint: \"set\" });\n        },\n        onBeforeInput(event) {\n          try {\n            const { selectionStart, selectionEnd, value } = event.currentTarget;\n            const nextValue = value.slice(0, selectionStart) + (event.data ?? \"\") + value.slice(selectionEnd);\n            const isValid = computed(\"parser\").isValidPartialNumber(nextValue);\n            if (!isValid) {\n              event.preventDefault();\n            }\n          } catch {\n          }\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (readOnly) return;\n          if (isComposingEvent(event)) return;\n          const step = getEventStep(event) * prop(\"step\");\n          const keyMap = {\n            ArrowUp() {\n              send({ type: \"INPUT.ARROW_UP\", step });\n              event.preventDefault();\n            },\n            ArrowDown() {\n              send({ type: \"INPUT.ARROW_DOWN\", step });\n              event.preventDefault();\n            },\n            Home() {\n              if (isModifierKey(event)) return;\n              send({ type: \"INPUT.HOME\" });\n              event.preventDefault();\n            },\n            End() {\n              if (isModifierKey(event)) return;\n              send({ type: \"INPUT.END\" });\n              event.preventDefault();\n            },\n            Enter() {\n              send({ type: \"INPUT.ENTER\" });\n            }\n          };\n          const exec = keyMap[event.key];\n          exec?.(event);\n        }\n      });\n    },\n    getDecrementTriggerProps() {\n      return normalize.button({\n        ...parts.decrementTrigger.attrs,\n        dir: prop(\"dir\"),\n        id: getDecrementTriggerId(scope),\n        disabled: isDecrementDisabled,\n        \"data-disabled\": dataAttr(isDecrementDisabled),\n        \"aria-label\": translations.decrementLabel,\n        type: \"button\",\n        tabIndex: -1,\n        \"aria-controls\": getInputId(scope),\n        onPointerDown(event) {\n          if (isDecrementDisabled || !isLeftClick(event)) return;\n          send({ type: \"TRIGGER.PRESS_DOWN\", hint: \"decrement\", pointerType: event.pointerType });\n          if (event.pointerType === \"mouse\") {\n            event.preventDefault();\n          }\n          if (event.pointerType === \"touch\") {\n            event.currentTarget?.focus({ preventScroll: true });\n          }\n        },\n        onPointerUp(event) {\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"decrement\", pointerType: event.pointerType });\n        },\n        onPointerLeave() {\n          if (isDecrementDisabled) return;\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"decrement\" });\n        }\n      });\n    },\n    getIncrementTriggerProps() {\n      return normalize.button({\n        ...parts.incrementTrigger.attrs,\n        dir: prop(\"dir\"),\n        id: getIncrementTriggerId(scope),\n        disabled: isIncrementDisabled,\n        \"data-disabled\": dataAttr(isIncrementDisabled),\n        \"aria-label\": translations.incrementLabel,\n        type: \"button\",\n        tabIndex: -1,\n        \"aria-controls\": getInputId(scope),\n        onPointerDown(event) {\n          if (isIncrementDisabled || !isLeftClick(event)) return;\n          send({ type: \"TRIGGER.PRESS_DOWN\", hint: \"increment\", pointerType: event.pointerType });\n          if (event.pointerType === \"mouse\") {\n            event.preventDefault();\n          }\n          if (event.pointerType === \"touch\") {\n            event.currentTarget?.focus({ preventScroll: true });\n          }\n        },\n        onPointerUp(event) {\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"increment\", pointerType: event.pointerType });\n        },\n        onPointerLeave(event) {\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"increment\", pointerType: event.pointerType });\n        }\n      });\n    },\n    getScrubberProps() {\n      return normalize.element({\n        ...parts.scrubber.attrs,\n        dir: prop(\"dir\"),\n        \"data-disabled\": dataAttr(disabled),\n        id: getScrubberId(scope),\n        role: \"presentation\",\n        onMouseDown(event) {\n          if (disabled) return;\n          const point = getEventPoint(event);\n          const win = getWindow(event.currentTarget);\n          const dpr = win.devicePixelRatio;\n          point.x = point.x - roundToDpr(7.5, dpr);\n          point.y = point.y - roundToDpr(7.5, dpr);\n          send({ type: \"SCRUBBER.PRESS_DOWN\", point });\n          event.preventDefault();\n        },\n        style: {\n          cursor: disabled ? void 0 : \"ew-resize\"\n        }\n      });\n    }\n  };\n}\n\n// src/cursor.ts\nfunction recordCursor(inputEl) {\n  if (!inputEl || inputEl.ownerDocument.activeElement !== inputEl) return;\n  try {\n    const { selectionStart: start, selectionEnd: end, value } = inputEl;\n    const beforeTxt = value.substring(0, start);\n    const afterTxt = value.substring(end);\n    return {\n      start,\n      end,\n      value,\n      beforeTxt,\n      afterTxt\n    };\n  } catch {\n  }\n}\nfunction restoreCursor(inputEl, selection) {\n  if (!inputEl || inputEl.ownerDocument.activeElement !== inputEl) return;\n  if (!selection) {\n    inputEl.setSelectionRange(inputEl.value.length, inputEl.value.length);\n    return;\n  }\n  try {\n    const { value } = inputEl;\n    const { beforeTxt = \"\", afterTxt = \"\", start } = selection;\n    let startPos = value.length;\n    if (value.endsWith(afterTxt)) {\n      startPos = value.length - afterTxt.length;\n    } else if (value.startsWith(beforeTxt)) {\n      startPos = beforeTxt.length;\n    } else if (start != null) {\n      const beforeLastChar = beforeTxt[start - 1];\n      const newIndex = value.indexOf(beforeLastChar, start - 1);\n      if (newIndex !== -1) {\n        startPos = newIndex + 1;\n      }\n    }\n    inputEl.setSelectionRange(startPos, startPos);\n  } catch {\n  }\n}\nvar createFormatter = (locale, options = {}) => {\n  return new Intl.NumberFormat(locale, options);\n};\nvar createParser = (locale, options = {}) => {\n  return new NumberParser(locale, options);\n};\nvar parseValue = (value, params) => {\n  const { prop, computed } = params;\n  if (!prop(\"formatOptions\")) return parseFloat(value);\n  return computed(\"parser\").parse(String(value));\n};\nvar formatValue = (value, params) => {\n  const { prop, computed } = params;\n  if (Number.isNaN(value)) return \"\";\n  if (!prop(\"formatOptions\")) return value.toString();\n  return computed(\"formatter\").format(value);\n};\nvar getDefaultStep = (step, formatOptions) => {\n  let defaultStep = step !== void 0 && !Number.isNaN(step) ? step : 1;\n  if (formatOptions?.style === \"percent\" && (step === void 0 || Number.isNaN(step))) {\n    defaultStep = 0.01;\n  }\n  return defaultStep;\n};\n\n// src/number-input.machine.ts\nvar { choose, guards, createMachine } = setup();\nvar { not, and } = guards;\nvar machine = createMachine({\n  props({ props: props2 }) {\n    const step = getDefaultStep(props2.step, props2.formatOptions);\n    return {\n      dir: \"ltr\",\n      locale: \"en-US\",\n      focusInputOnChange: true,\n      clampValueOnBlur: !props2.allowOverflow,\n      allowOverflow: false,\n      inputMode: \"decimal\",\n      pattern: \"[0-9]*(.[0-9]+)?\",\n      defaultValue: \"\",\n      step,\n      min: Number.MIN_SAFE_INTEGER,\n      max: Number.MAX_SAFE_INTEGER,\n      spinOnPress: true,\n      ...props2,\n      translations: {\n        incrementLabel: \"increment value\",\n        decrementLabel: \"decrease value\",\n        ...props2.translations\n      }\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context({ prop, bindable, getComputed }) {\n    return {\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        onChange(value) {\n          const computed = getComputed();\n          const valueAsNumber = parseValue(value, { computed, prop });\n          prop(\"onValueChange\")?.({ value, valueAsNumber });\n        }\n      })),\n      hint: bindable(() => ({ defaultValue: null })),\n      scrubberCursorPoint: bindable(() => ({\n        defaultValue: null,\n        hash(value) {\n          return value ? `x:${value.x}, y:${value.y}` : \"\";\n        }\n      })),\n      fieldsetDisabled: bindable(() => ({ defaultValue: false }))\n    };\n  },\n  computed: {\n    isRtl: ({ prop }) => prop(\"dir\") === \"rtl\",\n    valueAsNumber: ({ context, computed, prop }) => parseValue(context.get(\"value\"), { computed, prop }),\n    formattedValue: ({ computed, prop }) => formatValue(computed(\"valueAsNumber\"), { computed, prop }),\n    isAtMin: ({ computed, prop }) => isValueAtMin(computed(\"valueAsNumber\"), prop(\"min\")),\n    isAtMax: ({ computed, prop }) => isValueAtMax(computed(\"valueAsNumber\"), prop(\"max\")),\n    isOutOfRange: ({ computed, prop }) => !isValueWithinRange(computed(\"valueAsNumber\"), prop(\"min\"), prop(\"max\")),\n    isValueEmpty: ({ context }) => context.get(\"value\") === \"\",\n    isDisabled: ({ prop, context }) => !!prop(\"disabled\") || context.get(\"fieldsetDisabled\"),\n    canIncrement: ({ prop, computed }) => prop(\"allowOverflow\") || !computed(\"isAtMax\"),\n    canDecrement: ({ prop, computed }) => prop(\"allowOverflow\") || !computed(\"isAtMin\"),\n    valueText: ({ prop, context }) => prop(\"translations\").valueText?.(context.get(\"value\")),\n    formatter: memo(\n      ({ prop }) => [prop(\"locale\"), prop(\"formatOptions\")],\n      (locale, formatOptions) => createFormatter(locale, formatOptions)\n    ),\n    parser: memo(\n      ({ prop }) => [prop(\"locale\"), prop(\"formatOptions\")],\n      (locale, formatOptions) => createParser(locale, formatOptions)\n    )\n  },\n  watch({ track, action, context, computed, prop }) {\n    track([() => context.get(\"value\"), () => prop(\"locale\")], () => {\n      action([\"syncInputElement\"]);\n    });\n    track([() => computed(\"isOutOfRange\")], () => {\n      action([\"invokeOnInvalid\"]);\n    });\n    track([() => context.hash(\"scrubberCursorPoint\")], () => {\n      action([\"setVirtualCursorPosition\"]);\n    });\n  },\n  effects: [\"trackFormControl\"],\n  on: {\n    \"VALUE.SET\": {\n      actions: [\"setRawValue\"]\n    },\n    \"VALUE.CLEAR\": {\n      actions: [\"clearValue\"]\n    },\n    \"VALUE.INCREMENT\": {\n      actions: [\"increment\"]\n    },\n    \"VALUE.DECREMENT\": {\n      actions: [\"decrement\"]\n    }\n  },\n  states: {\n    idle: {\n      on: {\n        \"TRIGGER.PRESS_DOWN\": [\n          { guard: \"isTouchPointer\", target: \"before:spin\", actions: [\"setHint\"] },\n          {\n            target: \"before:spin\",\n            actions: [\"focusInput\", \"invokeOnFocus\", \"setHint\"]\n          }\n        ],\n        \"SCRUBBER.PRESS_DOWN\": {\n          target: \"scrubbing\",\n          actions: [\"focusInput\", \"invokeOnFocus\", \"setHint\", \"setCursorPoint\"]\n        },\n        \"INPUT.FOCUS\": {\n          target: \"focused\",\n          actions: [\"focusInput\", \"invokeOnFocus\"]\n        }\n      }\n    },\n    focused: {\n      tags: [\"focus\"],\n      effects: [\"attachWheelListener\"],\n      on: {\n        \"TRIGGER.PRESS_DOWN\": [\n          { guard: \"isTouchPointer\", target: \"before:spin\", actions: [\"setHint\"] },\n          { target: \"before:spin\", actions: [\"focusInput\", \"setHint\"] }\n        ],\n        \"SCRUBBER.PRESS_DOWN\": {\n          target: \"scrubbing\",\n          actions: [\"focusInput\", \"setHint\", \"setCursorPoint\"]\n        },\n        \"INPUT.ARROW_UP\": {\n          actions: [\"increment\"]\n        },\n        \"INPUT.ARROW_DOWN\": {\n          actions: [\"decrement\"]\n        },\n        \"INPUT.HOME\": {\n          actions: [\"decrementToMin\"]\n        },\n        \"INPUT.END\": {\n          actions: [\"incrementToMax\"]\n        },\n        \"INPUT.CHANGE\": {\n          actions: [\"setValue\", \"setHint\"]\n        },\n        \"INPUT.BLUR\": [\n          {\n            guard: and(\"clampValueOnBlur\", not(\"isInRange\")),\n            target: \"idle\",\n            actions: [\"setClampedValue\", \"clearHint\", \"invokeOnBlur\"]\n          },\n          {\n            guard: not(\"isInRange\"),\n            target: \"idle\",\n            actions: [\"setFormattedValue\", \"clearHint\", \"invokeOnBlur\", \"invokeOnInvalid\"]\n          },\n          {\n            target: \"idle\",\n            actions: [\"setFormattedValue\", \"clearHint\", \"invokeOnBlur\"]\n          }\n        ],\n        \"INPUT.ENTER\": {\n          actions: [\"setFormattedValue\", \"clearHint\", \"invokeOnBlur\"]\n        }\n      }\n    },\n    \"before:spin\": {\n      tags: [\"focus\"],\n      effects: [\"trackButtonDisabled\", \"waitForChangeDelay\"],\n      entry: choose([\n        { guard: \"isIncrementHint\", actions: [\"increment\"] },\n        { guard: \"isDecrementHint\", actions: [\"decrement\"] }\n      ]),\n      on: {\n        CHANGE_DELAY: {\n          target: \"spinning\",\n          guard: and(\"isInRange\", \"spinOnPress\")\n        },\n        \"TRIGGER.PRESS_UP\": [\n          { guard: \"isTouchPointer\", target: \"focused\", actions: [\"clearHint\"] },\n          { target: \"focused\", actions: [\"focusInput\", \"clearHint\"] }\n        ]\n      }\n    },\n    spinning: {\n      tags: [\"focus\"],\n      effects: [\"trackButtonDisabled\", \"spinValue\"],\n      on: {\n        SPIN: [\n          {\n            guard: \"isIncrementHint\",\n            actions: [\"increment\"]\n          },\n          {\n            guard: \"isDecrementHint\",\n            actions: [\"decrement\"]\n          }\n        ],\n        \"TRIGGER.PRESS_UP\": {\n          target: \"focused\",\n          actions: [\"focusInput\", \"clearHint\"]\n        }\n      }\n    },\n    scrubbing: {\n      tags: [\"focus\"],\n      effects: [\"activatePointerLock\", \"trackMousemove\", \"setupVirtualCursor\", \"preventTextSelection\"],\n      on: {\n        \"SCRUBBER.POINTER_UP\": {\n          target: \"focused\",\n          actions: [\"focusInput\", \"clearCursorPoint\"]\n        },\n        \"SCRUBBER.POINTER_MOVE\": [\n          {\n            guard: \"isIncrementHint\",\n            actions: [\"increment\", \"setCursorPoint\"]\n          },\n          {\n            guard: \"isDecrementHint\",\n            actions: [\"decrement\", \"setCursorPoint\"]\n          }\n        ]\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      clampValueOnBlur: ({ prop }) => prop(\"clampValueOnBlur\"),\n      spinOnPress: ({ prop }) => !!prop(\"spinOnPress\"),\n      isInRange: ({ computed }) => !computed(\"isOutOfRange\"),\n      isDecrementHint: ({ context, event }) => (event.hint ?? context.get(\"hint\")) === \"decrement\",\n      isIncrementHint: ({ context, event }) => (event.hint ?? context.get(\"hint\")) === \"increment\",\n      isTouchPointer: ({ event }) => event.pointerType === \"touch\"\n    },\n    effects: {\n      waitForChangeDelay({ send }) {\n        const id = setTimeout(() => {\n          send({ type: \"CHANGE_DELAY\" });\n        }, 300);\n        return () => clearTimeout(id);\n      },\n      spinValue({ send }) {\n        const id = setInterval(() => {\n          send({ type: \"SPIN\" });\n        }, 50);\n        return () => clearInterval(id);\n      },\n      trackFormControl({ context, scope }) {\n        const inputEl = getInputEl(scope);\n        return trackFormControl(inputEl, {\n          onFieldsetDisabledChange(disabled) {\n            context.set(\"fieldsetDisabled\", disabled);\n          },\n          onFormReset() {\n            context.set(\"value\", context.initial(\"value\"));\n          }\n        });\n      },\n      setupVirtualCursor({ context, scope }) {\n        const point = context.get(\"scrubberCursorPoint\");\n        return setupVirtualCursor(scope, point);\n      },\n      preventTextSelection({ scope }) {\n        return preventTextSelection(scope);\n      },\n      trackButtonDisabled({ context, scope, send }) {\n        const hint = context.get(\"hint\");\n        const btn = getPressedTriggerEl(scope, hint);\n        return observeAttributes(btn, {\n          attributes: [\"disabled\"],\n          callback() {\n            send({ type: \"TRIGGER.PRESS_UP\", src: \"attr\" });\n          }\n        });\n      },\n      attachWheelListener({ scope, send, prop }) {\n        const inputEl = getInputEl(scope);\n        if (!inputEl || !scope.isActiveElement(inputEl) || !prop(\"allowMouseWheel\")) return;\n        function onWheel(event) {\n          event.preventDefault();\n          const dir = Math.sign(event.deltaY) * -1;\n          if (dir === 1) {\n            send({ type: \"VALUE.INCREMENT\" });\n          } else if (dir === -1) {\n            send({ type: \"VALUE.DECREMENT\" });\n          }\n        }\n        return addDomEvent(inputEl, \"wheel\", onWheel, { passive: false });\n      },\n      activatePointerLock({ scope }) {\n        if (isSafari()) return;\n        return requestPointerLock(scope.getDoc());\n      },\n      trackMousemove({ scope, send, context, computed }) {\n        const doc = scope.getDoc();\n        function onMousemove(event) {\n          const point = context.get(\"scrubberCursorPoint\");\n          const isRtl = computed(\"isRtl\");\n          const value = getMousemoveValue(scope, { point, isRtl, event });\n          if (!value.hint) return;\n          send({\n            type: \"SCRUBBER.POINTER_MOVE\",\n            hint: value.hint,\n            point: value.point\n          });\n        }\n        function onMouseup() {\n          send({ type: \"SCRUBBER.POINTER_UP\" });\n        }\n        return callAll(addDomEvent(doc, \"mousemove\", onMousemove, false), addDomEvent(doc, \"mouseup\", onMouseup, false));\n      }\n    },\n    actions: {\n      focusInput({ scope, prop }) {\n        if (!prop(\"focusInputOnChange\")) return;\n        const inputEl = getInputEl(scope);\n        if (scope.isActiveElement(inputEl)) return;\n        raf(() => inputEl?.focus({ preventScroll: true }));\n      },\n      increment({ context, event, prop, computed }) {\n        let nextValue = incrementValue(computed(\"valueAsNumber\"), event.step ?? prop(\"step\"));\n        if (!prop(\"allowOverflow\")) nextValue = clampValue(nextValue, prop(\"min\"), prop(\"max\"));\n        context.set(\"value\", formatValue(nextValue, { computed, prop }));\n      },\n      decrement({ context, event, prop, computed }) {\n        let nextValue = decrementValue(computed(\"valueAsNumber\"), event.step ?? prop(\"step\"));\n        if (!prop(\"allowOverflow\")) nextValue = clampValue(nextValue, prop(\"min\"), prop(\"max\"));\n        context.set(\"value\", formatValue(nextValue, { computed, prop }));\n      },\n      setClampedValue({ context, prop, computed }) {\n        const nextValue = clampValue(computed(\"valueAsNumber\"), prop(\"min\"), prop(\"max\"));\n        context.set(\"value\", formatValue(nextValue, { computed, prop }));\n      },\n      setRawValue({ context, event, prop, computed }) {\n        let nextValue = parseValue(event.value, { computed, prop });\n        if (!prop(\"allowOverflow\")) nextValue = clampValue(nextValue, prop(\"min\"), prop(\"max\"));\n        context.set(\"value\", formatValue(nextValue, { computed, prop }));\n      },\n      setValue({ context, event }) {\n        const value = event.target?.value ?? event.value;\n        context.set(\"value\", value);\n      },\n      clearValue({ context }) {\n        context.set(\"value\", \"\");\n      },\n      incrementToMax({ context, prop, computed }) {\n        const value = formatValue(prop(\"max\"), { computed, prop });\n        context.set(\"value\", value);\n      },\n      decrementToMin({ context, prop, computed }) {\n        const value = formatValue(prop(\"min\"), { computed, prop });\n        context.set(\"value\", value);\n      },\n      setHint({ context, event }) {\n        context.set(\"hint\", event.hint);\n      },\n      clearHint({ context }) {\n        context.set(\"hint\", null);\n      },\n      invokeOnFocus({ computed, prop }) {\n        prop(\"onFocusChange\")?.({\n          focused: true,\n          value: computed(\"formattedValue\"),\n          valueAsNumber: computed(\"valueAsNumber\")\n        });\n      },\n      invokeOnBlur({ computed, prop }) {\n        prop(\"onFocusChange\")?.({\n          focused: false,\n          value: computed(\"formattedValue\"),\n          valueAsNumber: computed(\"valueAsNumber\")\n        });\n      },\n      invokeOnInvalid({ computed, prop, event }) {\n        if (event.type === \"INPUT.CHANGE\") return;\n        const reason = computed(\"valueAsNumber\") > prop(\"max\") ? \"rangeOverflow\" : \"rangeUnderflow\";\n        prop(\"onValueInvalid\")?.({\n          reason,\n          value: computed(\"formattedValue\"),\n          valueAsNumber: computed(\"valueAsNumber\")\n        });\n      },\n      syncInputElement({ context, event, computed, scope }) {\n        const value = event.type.endsWith(\"CHANGE\") ? context.get(\"value\") : computed(\"formattedValue\");\n        const inputEl = getInputEl(scope);\n        const sel = recordCursor(inputEl);\n        raf(() => {\n          setElementValue(inputEl, value);\n          restoreCursor(inputEl, sel);\n        });\n      },\n      setFormattedValue({ context, computed }) {\n        context.set(\"value\", computed(\"formattedValue\"));\n      },\n      setCursorPoint({ context, event }) {\n        context.set(\"scrubberCursorPoint\", event.point);\n      },\n      clearCursorPoint({ context }) {\n        context.set(\"scrubberCursorPoint\", null);\n      },\n      setVirtualCursorPosition({ context, scope }) {\n        const cursorEl = getCursorEl(scope);\n        const point = context.get(\"scrubberCursorPoint\");\n        if (!cursorEl || !point) return;\n        cursorEl.style.transform = `translate3d(${point.x}px, ${point.y}px, 0px)`;\n      }\n    }\n  }\n});\nvar props = createProps()([\n  \"allowMouseWheel\",\n  \"allowOverflow\",\n  \"clampValueOnBlur\",\n  \"dir\",\n  \"disabled\",\n  \"focusInputOnChange\",\n  \"form\",\n  \"formatOptions\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"inputMode\",\n  \"invalid\",\n  \"locale\",\n  \"max\",\n  \"min\",\n  \"name\",\n  \"onFocusChange\",\n  \"onValueChange\",\n  \"onValueInvalid\",\n  \"pattern\",\n  \"required\",\n  \"readOnly\",\n  \"spinOnPress\",\n  \"step\",\n  \"translations\",\n  \"value\",\n  \"defaultValue\"\n]);\nvar splitProps = createSplitProps(props);\n\nexport { anatomy, connect, machine, props, splitProps };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}