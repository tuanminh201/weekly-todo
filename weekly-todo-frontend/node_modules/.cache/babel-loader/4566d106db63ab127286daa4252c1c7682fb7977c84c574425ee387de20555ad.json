{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { splitRenderStrategyProps, RenderStrategyPropsProvider } from '../../utils/render-strategy.js';\nimport { ark } from '../factory.js';\nimport { TreeViewProvider } from './use-tree-view-context.js';\nconst TreeViewImpl = (props, ref) => {\n  const [renderStrategyProps, treeViewProps] = splitRenderStrategyProps(props);\n  const [{\n    value: treeView\n  }, localProps] = createSplitProps()(treeViewProps, [\"value\"]);\n  const mergedProps = mergeProps(treeView.getRootProps(), localProps);\n  return /* @__PURE__ */jsx(TreeViewProvider, {\n    value: treeView,\n    children: /* @__PURE__ */jsx(RenderStrategyPropsProvider, {\n      value: renderStrategyProps,\n      children: /* @__PURE__ */jsx(ark.div, {\n        ...mergedProps,\n        ref\n      })\n    })\n  });\n};\nconst TreeViewRootProvider = forwardRef(TreeViewImpl);\nexport { TreeViewRootProvider };","map":{"version":3,"names":["jsx","mergeProps","forwardRef","createSplitProps","splitRenderStrategyProps","RenderStrategyPropsProvider","ark","TreeViewProvider","TreeViewImpl","props","ref","renderStrategyProps","treeViewProps","value","treeView","localProps","mergedProps","getRootProps","children","div","TreeViewRootProvider"],"sources":["C:/Users/tuanl/weekly-todo-frontend/node_modules/@chakra-ui/react/node_modules/@ark-ui/react/dist/components/tree-view/tree-view-root-provider.js"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { splitRenderStrategyProps, RenderStrategyPropsProvider } from '../../utils/render-strategy.js';\nimport { ark } from '../factory.js';\nimport { TreeViewProvider } from './use-tree-view-context.js';\n\nconst TreeViewImpl = (props, ref) => {\n  const [renderStrategyProps, treeViewProps] = splitRenderStrategyProps(props);\n  const [{ value: treeView }, localProps] = createSplitProps()(treeViewProps, [\"value\"]);\n  const mergedProps = mergeProps(treeView.getRootProps(), localProps);\n  return /* @__PURE__ */ jsx(TreeViewProvider, { value: treeView, children: /* @__PURE__ */ jsx(RenderStrategyPropsProvider, { value: renderStrategyProps, children: /* @__PURE__ */ jsx(ark.div, { ...mergedProps, ref }) }) });\n};\nconst TreeViewRootProvider = forwardRef(TreeViewImpl);\n\nexport { TreeViewRootProvider };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,gBAAgB,QAAQ,mCAAmC;AACpE,SAASC,wBAAwB,EAAEC,2BAA2B,QAAQ,gCAAgC;AACtG,SAASC,GAAG,QAAQ,eAAe;AACnC,SAASC,gBAAgB,QAAQ,4BAA4B;AAE7D,MAAMC,YAAY,GAAGA,CAACC,KAAK,EAAEC,GAAG,KAAK;EACnC,MAAM,CAACC,mBAAmB,EAAEC,aAAa,CAAC,GAAGR,wBAAwB,CAACK,KAAK,CAAC;EAC5E,MAAM,CAAC;IAAEI,KAAK,EAAEC;EAAS,CAAC,EAAEC,UAAU,CAAC,GAAGZ,gBAAgB,CAAC,CAAC,CAACS,aAAa,EAAE,CAAC,OAAO,CAAC,CAAC;EACtF,MAAMI,WAAW,GAAGf,UAAU,CAACa,QAAQ,CAACG,YAAY,CAAC,CAAC,EAAEF,UAAU,CAAC;EACnE,OAAO,eAAgBf,GAAG,CAACO,gBAAgB,EAAE;IAAEM,KAAK,EAAEC,QAAQ;IAAEI,QAAQ,EAAE,eAAgBlB,GAAG,CAACK,2BAA2B,EAAE;MAAEQ,KAAK,EAAEF,mBAAmB;MAAEO,QAAQ,EAAE,eAAgBlB,GAAG,CAACM,GAAG,CAACa,GAAG,EAAE;QAAE,GAAGH,WAAW;QAAEN;MAAI,CAAC;IAAE,CAAC;EAAE,CAAC,CAAC;AAChO,CAAC;AACD,MAAMU,oBAAoB,GAAGlB,UAAU,CAACM,YAAY,CAAC;AAErD,SAASY,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}