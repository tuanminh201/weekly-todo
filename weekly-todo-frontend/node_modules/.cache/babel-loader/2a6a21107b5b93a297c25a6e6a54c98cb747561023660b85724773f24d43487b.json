{"ast":null,"code":"'use client';\n\nimport { useRef, useEffect } from 'react';\nconst FrameContent = props => {\n  const {\n    onMount,\n    onUnmount,\n    children\n  } = props;\n  const mountedRef = useRef(false);\n  const calledRef = useRef(false);\n  useEffect(() => {\n    if (!mountedRef.current && !calledRef.current) {\n      onMount?.();\n      mountedRef.current = true;\n      calledRef.current = true;\n    }\n    return () => {\n      if (mountedRef.current) {\n        onUnmount?.();\n        mountedRef.current = false;\n      }\n    };\n  }, []);\n  return children;\n};\nexport { FrameContent };","map":{"version":3,"names":["useRef","useEffect","FrameContent","props","onMount","onUnmount","children","mountedRef","calledRef","current"],"sources":["C:/Users/tuanl/weekly-todo-frontend/node_modules/@ark-ui/react/dist/components/frame/frame-content.js"],"sourcesContent":["'use client';\nimport { useRef, useEffect } from 'react';\n\nconst FrameContent = (props) => {\n  const { onMount, onUnmount, children } = props;\n  const mountedRef = useRef(false);\n  const calledRef = useRef(false);\n  useEffect(() => {\n    if (!mountedRef.current && !calledRef.current) {\n      onMount?.();\n      mountedRef.current = true;\n      calledRef.current = true;\n    }\n    return () => {\n      if (mountedRef.current) {\n        onUnmount?.();\n        mountedRef.current = false;\n      }\n    };\n  }, []);\n  return children;\n};\n\nexport { FrameContent };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAEzC,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC9B,MAAM;IAAEC,OAAO;IAAEC,SAAS;IAAEC;EAAS,CAAC,GAAGH,KAAK;EAC9C,MAAMI,UAAU,GAAGP,MAAM,CAAC,KAAK,CAAC;EAChC,MAAMQ,SAAS,GAAGR,MAAM,CAAC,KAAK,CAAC;EAC/BC,SAAS,CAAC,MAAM;IACd,IAAI,CAACM,UAAU,CAACE,OAAO,IAAI,CAACD,SAAS,CAACC,OAAO,EAAE;MAC7CL,OAAO,GAAG,CAAC;MACXG,UAAU,CAACE,OAAO,GAAG,IAAI;MACzBD,SAAS,CAACC,OAAO,GAAG,IAAI;IAC1B;IACA,OAAO,MAAM;MACX,IAAIF,UAAU,CAACE,OAAO,EAAE;QACtBJ,SAAS,GAAG,CAAC;QACbE,UAAU,CAACE,OAAO,GAAG,KAAK;MAC5B;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACN,OAAOH,QAAQ;AACjB,CAAC;AAED,SAASJ,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}