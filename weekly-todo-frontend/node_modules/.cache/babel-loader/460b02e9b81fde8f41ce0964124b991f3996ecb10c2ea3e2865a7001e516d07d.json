{"ast":null,"code":"import { createAnatomy } from '@zag-js/anatomy';\nimport { ariaHidden } from '@zag-js/aria-hidden';\nimport { createMachine } from '@zag-js/core';\nimport { trackDismissableElement } from '@zag-js/dismissable';\nimport { raf, getComputedStyle } from '@zag-js/dom-query';\nimport { trapFocus } from '@zag-js/focus-trap';\nimport { preventBodyScroll } from '@zag-js/remove-scroll';\nimport { createProps } from '@zag-js/types';\nimport { createSplitProps } from '@zag-js/utils';\n\n// src/dialog.anatomy.ts\nvar anatomy = createAnatomy(\"dialog\").parts(\"trigger\", \"backdrop\", \"positioner\", \"content\", \"title\", \"description\", \"closeTrigger\");\nvar parts = anatomy.build();\n\n// src/dialog.dom.ts\nvar getPositionerId = ctx => ctx.ids?.positioner ?? `dialog:${ctx.id}:positioner`;\nvar getBackdropId = ctx => ctx.ids?.backdrop ?? `dialog:${ctx.id}:backdrop`;\nvar getContentId = ctx => ctx.ids?.content ?? `dialog:${ctx.id}:content`;\nvar getTriggerId = ctx => ctx.ids?.trigger ?? `dialog:${ctx.id}:trigger`;\nvar getTitleId = ctx => ctx.ids?.title ?? `dialog:${ctx.id}:title`;\nvar getDescriptionId = ctx => ctx.ids?.description ?? `dialog:${ctx.id}:description`;\nvar getCloseTriggerId = ctx => ctx.ids?.closeTrigger ?? `dialog:${ctx.id}:close`;\nvar getContentEl = ctx => ctx.getById(getContentId(ctx));\nvar getPositionerEl = ctx => ctx.getById(getPositionerId(ctx));\nvar getBackdropEl = ctx => ctx.getById(getBackdropId(ctx));\nvar getTriggerEl = ctx => ctx.getById(getTriggerId(ctx));\nvar getTitleEl = ctx => ctx.getById(getTitleId(ctx));\nvar getDescriptionEl = ctx => ctx.getById(getDescriptionId(ctx));\nvar getCloseTriggerEl = ctx => ctx.getById(getCloseTriggerId(ctx));\n\n// src/dialog.connect.ts\nfunction connect(service, normalize) {\n  const {\n    state,\n    send,\n    context,\n    prop,\n    scope\n  } = service;\n  const ariaLabel = prop(\"aria-label\");\n  const open = state.matches(\"open\");\n  return {\n    open,\n    setOpen(nextOpen) {\n      const open2 = state.matches(\"open\");\n      if (open2 === nextOpen) return;\n      send({\n        type: nextOpen ? \"OPEN\" : \"CLOSE\"\n      });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        dir: prop(\"dir\"),\n        id: getTriggerId(scope),\n        \"aria-haspopup\": \"dialog\",\n        type: \"button\",\n        \"aria-expanded\": open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-controls\": getContentId(scope),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send({\n            type: \"TOGGLE\"\n          });\n        }\n      });\n    },\n    getBackdropProps() {\n      return normalize.element({\n        ...parts.backdrop.attrs,\n        dir: prop(\"dir\"),\n        hidden: !open,\n        id: getBackdropId(scope),\n        \"data-state\": open ? \"open\" : \"closed\"\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        ...parts.positioner.attrs,\n        dir: prop(\"dir\"),\n        id: getPositionerId(scope),\n        style: {\n          pointerEvents: open ? void 0 : \"none\"\n        }\n      });\n    },\n    getContentProps() {\n      const rendered = context.get(\"rendered\");\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: prop(\"dir\"),\n        role: prop(\"role\"),\n        hidden: !open,\n        id: getContentId(scope),\n        tabIndex: -1,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-modal\": true,\n        \"aria-label\": ariaLabel || void 0,\n        \"aria-labelledby\": ariaLabel || !rendered.title ? void 0 : getTitleId(scope),\n        \"aria-describedby\": rendered.description ? getDescriptionId(scope) : void 0\n      });\n    },\n    getTitleProps() {\n      return normalize.element({\n        ...parts.title.attrs,\n        dir: prop(\"dir\"),\n        id: getTitleId(scope)\n      });\n    },\n    getDescriptionProps() {\n      return normalize.element({\n        ...parts.description.attrs,\n        dir: prop(\"dir\"),\n        id: getDescriptionId(scope)\n      });\n    },\n    getCloseTriggerProps() {\n      return normalize.button({\n        ...parts.closeTrigger.attrs,\n        dir: prop(\"dir\"),\n        id: getCloseTriggerId(scope),\n        type: \"button\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          event.stopPropagation();\n          send({\n            type: \"CLOSE\"\n          });\n        }\n      });\n    }\n  };\n}\nvar machine = createMachine({\n  props({\n    props: props2,\n    scope\n  }) {\n    const alertDialog = props2.role === \"alertdialog\";\n    const initialFocusEl = alertDialog ? () => getCloseTriggerEl(scope) : void 0;\n    return {\n      role: \"dialog\",\n      modal: true,\n      trapFocus: true,\n      preventScroll: true,\n      closeOnInteractOutside: !alertDialog,\n      closeOnEscape: true,\n      restoreFocus: true,\n      initialFocusEl,\n      ...props2\n    };\n  },\n  initialState({\n    prop\n  }) {\n    const open = prop(\"open\") || prop(\"defaultOpen\");\n    return open ? \"open\" : \"closed\";\n  },\n  context({\n    bindable\n  }) {\n    return {\n      rendered: bindable(() => ({\n        defaultValue: {\n          title: true,\n          description: true\n        }\n      }))\n    };\n  },\n  watch({\n    track,\n    action,\n    prop\n  }) {\n    track([() => prop(\"open\")], () => {\n      action([\"toggleVisibility\"]);\n    });\n  },\n  states: {\n    open: {\n      entry: [\"checkRenderedElements\", \"syncZIndex\"],\n      effects: [\"trackDismissableElement\", \"trapFocus\", \"preventScroll\", \"hideContentBelow\"],\n      on: {\n        \"CONTROLLED.CLOSE\": {\n          target: \"closed\"\n        },\n        CLOSE: [{\n          guard: \"isOpenControlled\",\n          actions: [\"invokeOnClose\"]\n        }, {\n          target: \"closed\",\n          actions: [\"invokeOnClose\"]\n        }],\n        TOGGLE: [{\n          guard: \"isOpenControlled\",\n          actions: [\"invokeOnClose\"]\n        }, {\n          target: \"closed\",\n          actions: [\"invokeOnClose\"]\n        }]\n      }\n    },\n    closed: {\n      on: {\n        \"CONTROLLED.OPEN\": {\n          target: \"open\"\n        },\n        OPEN: [{\n          guard: \"isOpenControlled\",\n          actions: [\"invokeOnOpen\"]\n        }, {\n          target: \"open\",\n          actions: [\"invokeOnOpen\"]\n        }],\n        TOGGLE: [{\n          guard: \"isOpenControlled\",\n          actions: [\"invokeOnOpen\"]\n        }, {\n          target: \"open\",\n          actions: [\"invokeOnOpen\"]\n        }]\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      isOpenControlled: ({\n        prop\n      }) => prop(\"open\") != void 0\n    },\n    effects: {\n      trackDismissableElement({\n        scope,\n        send,\n        prop\n      }) {\n        const getContentEl2 = () => getContentEl(scope);\n        return trackDismissableElement(getContentEl2, {\n          defer: true,\n          pointerBlocking: prop(\"modal\"),\n          exclude: [getTriggerEl(scope)],\n          onInteractOutside(event) {\n            prop(\"onInteractOutside\")?.(event);\n            if (!prop(\"closeOnInteractOutside\")) {\n              event.preventDefault();\n            }\n          },\n          persistentElements: prop(\"persistentElements\"),\n          onFocusOutside: prop(\"onFocusOutside\"),\n          onPointerDownOutside: prop(\"onPointerDownOutside\"),\n          onEscapeKeyDown(event) {\n            prop(\"onEscapeKeyDown\")?.(event);\n            if (!prop(\"closeOnEscape\")) {\n              event.preventDefault();\n            }\n          },\n          onDismiss() {\n            send({\n              type: \"CLOSE\",\n              src: \"interact-outside\"\n            });\n          }\n        });\n      },\n      preventScroll({\n        scope,\n        prop\n      }) {\n        if (!prop(\"preventScroll\")) return;\n        return preventBodyScroll(scope.getDoc());\n      },\n      trapFocus({\n        scope,\n        prop\n      }) {\n        if (!prop(\"trapFocus\") || !prop(\"modal\")) return;\n        const contentEl = () => getContentEl(scope);\n        return trapFocus(contentEl, {\n          preventScroll: true,\n          returnFocusOnDeactivate: !!prop(\"restoreFocus\"),\n          initialFocus: prop(\"initialFocusEl\"),\n          setReturnFocus: el => prop(\"finalFocusEl\")?.() ?? el\n        });\n      },\n      hideContentBelow({\n        scope,\n        prop\n      }) {\n        if (!prop(\"modal\")) return;\n        const getElements = () => [getContentEl(scope)];\n        return ariaHidden(getElements, {\n          defer: true\n        });\n      }\n    },\n    actions: {\n      checkRenderedElements({\n        context,\n        scope\n      }) {\n        raf(() => {\n          context.set(\"rendered\", {\n            title: !!getTitleEl(scope),\n            description: !!getDescriptionEl(scope)\n          });\n        });\n      },\n      syncZIndex({\n        scope\n      }) {\n        raf(() => {\n          const contentEl = getContentEl(scope);\n          if (!contentEl) return;\n          const styles = getComputedStyle(contentEl);\n          const elems = [getPositionerEl(scope), getBackdropEl(scope)];\n          elems.forEach(node => {\n            node?.style.setProperty(\"--z-index\", styles.zIndex);\n          });\n        });\n      },\n      invokeOnClose({\n        prop\n      }) {\n        prop(\"onOpenChange\")?.({\n          open: false\n        });\n      },\n      invokeOnOpen({\n        prop\n      }) {\n        prop(\"onOpenChange\")?.({\n          open: true\n        });\n      },\n      toggleVisibility({\n        prop,\n        send,\n        event\n      }) {\n        send({\n          type: prop(\"open\") ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\",\n          previousEvent: event\n        });\n      }\n    }\n  }\n});\nvar props = createProps()([\"aria-label\", \"closeOnEscape\", \"closeOnInteractOutside\", \"dir\", \"finalFocusEl\", \"getRootNode\", \"getRootNode\", \"id\", \"id\", \"ids\", \"initialFocusEl\", \"modal\", \"onEscapeKeyDown\", \"onFocusOutside\", \"onInteractOutside\", \"onOpenChange\", \"onPointerDownOutside\", \"defaultOpen\", \"open\", \"persistentElements\", \"preventScroll\", \"restoreFocus\", \"role\", \"trapFocus\"]);\nvar splitProps = createSplitProps(props);\nexport { anatomy, connect, machine, props, splitProps };","map":{"version":3,"names":["createAnatomy","ariaHidden","createMachine","trackDismissableElement","raf","getComputedStyle","trapFocus","preventBodyScroll","createProps","createSplitProps","anatomy","parts","build","getPositionerId","ctx","ids","positioner","id","getBackdropId","backdrop","getContentId","content","getTriggerId","trigger","getTitleId","title","getDescriptionId","description","getCloseTriggerId","closeTrigger","getContentEl","getById","getPositionerEl","getBackdropEl","getTriggerEl","getTitleEl","getDescriptionEl","getCloseTriggerEl","connect","service","normalize","state","send","context","prop","scope","ariaLabel","open","matches","setOpen","nextOpen","open2","type","getTriggerProps","button","attrs","dir","onClick","event","defaultPrevented","getBackdropProps","element","hidden","getPositionerProps","style","pointerEvents","getContentProps","rendered","get","role","tabIndex","getTitleProps","getDescriptionProps","getCloseTriggerProps","stopPropagation","machine","props","props2","alertDialog","initialFocusEl","modal","preventScroll","closeOnInteractOutside","closeOnEscape","restoreFocus","initialState","bindable","defaultValue","watch","track","action","states","entry","effects","on","target","CLOSE","guard","actions","TOGGLE","closed","OPEN","implementations","guards","isOpenControlled","getContentEl2","defer","pointerBlocking","exclude","onInteractOutside","preventDefault","persistentElements","onFocusOutside","onPointerDownOutside","onEscapeKeyDown","onDismiss","src","getDoc","contentEl","returnFocusOnDeactivate","initialFocus","setReturnFocus","el","hideContentBelow","getElements","checkRenderedElements","set","syncZIndex","styles","elems","forEach","node","setProperty","zIndex","invokeOnClose","invokeOnOpen","toggleVisibility","previousEvent","splitProps"],"sources":["C:/Users/tuanl/weekly-todo-frontend/node_modules/@chakra-ui/react/node_modules/@zag-js/dialog/dist/index.mjs"],"sourcesContent":["import { createAnatomy } from '@zag-js/anatomy';\nimport { ariaHidden } from '@zag-js/aria-hidden';\nimport { createMachine } from '@zag-js/core';\nimport { trackDismissableElement } from '@zag-js/dismissable';\nimport { raf, getComputedStyle } from '@zag-js/dom-query';\nimport { trapFocus } from '@zag-js/focus-trap';\nimport { preventBodyScroll } from '@zag-js/remove-scroll';\nimport { createProps } from '@zag-js/types';\nimport { createSplitProps } from '@zag-js/utils';\n\n// src/dialog.anatomy.ts\nvar anatomy = createAnatomy(\"dialog\").parts(\n  \"trigger\",\n  \"backdrop\",\n  \"positioner\",\n  \"content\",\n  \"title\",\n  \"description\",\n  \"closeTrigger\"\n);\nvar parts = anatomy.build();\n\n// src/dialog.dom.ts\nvar getPositionerId = (ctx) => ctx.ids?.positioner ?? `dialog:${ctx.id}:positioner`;\nvar getBackdropId = (ctx) => ctx.ids?.backdrop ?? `dialog:${ctx.id}:backdrop`;\nvar getContentId = (ctx) => ctx.ids?.content ?? `dialog:${ctx.id}:content`;\nvar getTriggerId = (ctx) => ctx.ids?.trigger ?? `dialog:${ctx.id}:trigger`;\nvar getTitleId = (ctx) => ctx.ids?.title ?? `dialog:${ctx.id}:title`;\nvar getDescriptionId = (ctx) => ctx.ids?.description ?? `dialog:${ctx.id}:description`;\nvar getCloseTriggerId = (ctx) => ctx.ids?.closeTrigger ?? `dialog:${ctx.id}:close`;\nvar getContentEl = (ctx) => ctx.getById(getContentId(ctx));\nvar getPositionerEl = (ctx) => ctx.getById(getPositionerId(ctx));\nvar getBackdropEl = (ctx) => ctx.getById(getBackdropId(ctx));\nvar getTriggerEl = (ctx) => ctx.getById(getTriggerId(ctx));\nvar getTitleEl = (ctx) => ctx.getById(getTitleId(ctx));\nvar getDescriptionEl = (ctx) => ctx.getById(getDescriptionId(ctx));\nvar getCloseTriggerEl = (ctx) => ctx.getById(getCloseTriggerId(ctx));\n\n// src/dialog.connect.ts\nfunction connect(service, normalize) {\n  const { state, send, context, prop, scope } = service;\n  const ariaLabel = prop(\"aria-label\");\n  const open = state.matches(\"open\");\n  return {\n    open,\n    setOpen(nextOpen) {\n      const open2 = state.matches(\"open\");\n      if (open2 === nextOpen) return;\n      send({ type: nextOpen ? \"OPEN\" : \"CLOSE\" });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        dir: prop(\"dir\"),\n        id: getTriggerId(scope),\n        \"aria-haspopup\": \"dialog\",\n        type: \"button\",\n        \"aria-expanded\": open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-controls\": getContentId(scope),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send({ type: \"TOGGLE\" });\n        }\n      });\n    },\n    getBackdropProps() {\n      return normalize.element({\n        ...parts.backdrop.attrs,\n        dir: prop(\"dir\"),\n        hidden: !open,\n        id: getBackdropId(scope),\n        \"data-state\": open ? \"open\" : \"closed\"\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        ...parts.positioner.attrs,\n        dir: prop(\"dir\"),\n        id: getPositionerId(scope),\n        style: {\n          pointerEvents: open ? void 0 : \"none\"\n        }\n      });\n    },\n    getContentProps() {\n      const rendered = context.get(\"rendered\");\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: prop(\"dir\"),\n        role: prop(\"role\"),\n        hidden: !open,\n        id: getContentId(scope),\n        tabIndex: -1,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-modal\": true,\n        \"aria-label\": ariaLabel || void 0,\n        \"aria-labelledby\": ariaLabel || !rendered.title ? void 0 : getTitleId(scope),\n        \"aria-describedby\": rendered.description ? getDescriptionId(scope) : void 0\n      });\n    },\n    getTitleProps() {\n      return normalize.element({\n        ...parts.title.attrs,\n        dir: prop(\"dir\"),\n        id: getTitleId(scope)\n      });\n    },\n    getDescriptionProps() {\n      return normalize.element({\n        ...parts.description.attrs,\n        dir: prop(\"dir\"),\n        id: getDescriptionId(scope)\n      });\n    },\n    getCloseTriggerProps() {\n      return normalize.button({\n        ...parts.closeTrigger.attrs,\n        dir: prop(\"dir\"),\n        id: getCloseTriggerId(scope),\n        type: \"button\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          event.stopPropagation();\n          send({ type: \"CLOSE\" });\n        }\n      });\n    }\n  };\n}\nvar machine = createMachine({\n  props({ props: props2, scope }) {\n    const alertDialog = props2.role === \"alertdialog\";\n    const initialFocusEl = alertDialog ? () => getCloseTriggerEl(scope) : void 0;\n    return {\n      role: \"dialog\",\n      modal: true,\n      trapFocus: true,\n      preventScroll: true,\n      closeOnInteractOutside: !alertDialog,\n      closeOnEscape: true,\n      restoreFocus: true,\n      initialFocusEl,\n      ...props2\n    };\n  },\n  initialState({ prop }) {\n    const open = prop(\"open\") || prop(\"defaultOpen\");\n    return open ? \"open\" : \"closed\";\n  },\n  context({ bindable }) {\n    return {\n      rendered: bindable(() => ({\n        defaultValue: { title: true, description: true }\n      }))\n    };\n  },\n  watch({ track, action, prop }) {\n    track([() => prop(\"open\")], () => {\n      action([\"toggleVisibility\"]);\n    });\n  },\n  states: {\n    open: {\n      entry: [\"checkRenderedElements\", \"syncZIndex\"],\n      effects: [\"trackDismissableElement\", \"trapFocus\", \"preventScroll\", \"hideContentBelow\"],\n      on: {\n        \"CONTROLLED.CLOSE\": {\n          target: \"closed\"\n        },\n        CLOSE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ],\n        TOGGLE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          },\n          {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }\n        ]\n      }\n    },\n    closed: {\n      on: {\n        \"CONTROLLED.OPEN\": {\n          target: \"open\"\n        },\n        OPEN: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\"]\n          }\n        ],\n        TOGGLE: [\n          {\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          },\n          {\n            target: \"open\",\n            actions: [\"invokeOnOpen\"]\n          }\n        ]\n      }\n    }\n  },\n  implementations: {\n    guards: {\n      isOpenControlled: ({ prop }) => prop(\"open\") != void 0\n    },\n    effects: {\n      trackDismissableElement({ scope, send, prop }) {\n        const getContentEl2 = () => getContentEl(scope);\n        return trackDismissableElement(getContentEl2, {\n          defer: true,\n          pointerBlocking: prop(\"modal\"),\n          exclude: [getTriggerEl(scope)],\n          onInteractOutside(event) {\n            prop(\"onInteractOutside\")?.(event);\n            if (!prop(\"closeOnInteractOutside\")) {\n              event.preventDefault();\n            }\n          },\n          persistentElements: prop(\"persistentElements\"),\n          onFocusOutside: prop(\"onFocusOutside\"),\n          onPointerDownOutside: prop(\"onPointerDownOutside\"),\n          onEscapeKeyDown(event) {\n            prop(\"onEscapeKeyDown\")?.(event);\n            if (!prop(\"closeOnEscape\")) {\n              event.preventDefault();\n            }\n          },\n          onDismiss() {\n            send({ type: \"CLOSE\", src: \"interact-outside\" });\n          }\n        });\n      },\n      preventScroll({ scope, prop }) {\n        if (!prop(\"preventScroll\")) return;\n        return preventBodyScroll(scope.getDoc());\n      },\n      trapFocus({ scope, prop }) {\n        if (!prop(\"trapFocus\") || !prop(\"modal\")) return;\n        const contentEl = () => getContentEl(scope);\n        return trapFocus(contentEl, {\n          preventScroll: true,\n          returnFocusOnDeactivate: !!prop(\"restoreFocus\"),\n          initialFocus: prop(\"initialFocusEl\"),\n          setReturnFocus: (el) => prop(\"finalFocusEl\")?.() ?? el\n        });\n      },\n      hideContentBelow({ scope, prop }) {\n        if (!prop(\"modal\")) return;\n        const getElements = () => [getContentEl(scope)];\n        return ariaHidden(getElements, { defer: true });\n      }\n    },\n    actions: {\n      checkRenderedElements({ context, scope }) {\n        raf(() => {\n          context.set(\"rendered\", {\n            title: !!getTitleEl(scope),\n            description: !!getDescriptionEl(scope)\n          });\n        });\n      },\n      syncZIndex({ scope }) {\n        raf(() => {\n          const contentEl = getContentEl(scope);\n          if (!contentEl) return;\n          const styles = getComputedStyle(contentEl);\n          const elems = [getPositionerEl(scope), getBackdropEl(scope)];\n          elems.forEach((node) => {\n            node?.style.setProperty(\"--z-index\", styles.zIndex);\n          });\n        });\n      },\n      invokeOnClose({ prop }) {\n        prop(\"onOpenChange\")?.({ open: false });\n      },\n      invokeOnOpen({ prop }) {\n        prop(\"onOpenChange\")?.({ open: true });\n      },\n      toggleVisibility({ prop, send, event }) {\n        send({\n          type: prop(\"open\") ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\",\n          previousEvent: event\n        });\n      }\n    }\n  }\n});\nvar props = createProps()([\n  \"aria-label\",\n  \"closeOnEscape\",\n  \"closeOnInteractOutside\",\n  \"dir\",\n  \"finalFocusEl\",\n  \"getRootNode\",\n  \"getRootNode\",\n  \"id\",\n  \"id\",\n  \"ids\",\n  \"initialFocusEl\",\n  \"modal\",\n  \"onEscapeKeyDown\",\n  \"onFocusOutside\",\n  \"onInteractOutside\",\n  \"onOpenChange\",\n  \"onPointerDownOutside\",\n  \"defaultOpen\",\n  \"open\",\n  \"persistentElements\",\n  \"preventScroll\",\n  \"restoreFocus\",\n  \"role\",\n  \"trapFocus\"\n]);\nvar splitProps = createSplitProps(props);\n\nexport { anatomy, connect, machine, props, splitProps };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}